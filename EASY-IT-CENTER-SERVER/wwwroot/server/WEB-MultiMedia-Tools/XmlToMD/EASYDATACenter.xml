<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EASYDATACenter</name>
    </assembly>
    <members>
        <member name="T:EASYDATACenter.DBModel.TemplateList">
            <summary>
            Template System Class, This Class has all DBLogic auto Fields and user join for simple
            creating system Only Rename for your new table
            </summary>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.GLOBALNETAuthenticationApi.Authenticate(System.String,System.String)">
            <summary>
            API Authenticated and Generate Token
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.GLOBALNETAuthenticationApi.RefreshUserToken(System.String,EASYDATACenter.ServerCoreStructure.AuthenticateResponse)">
            <summary>
            API Refresh User Token
            </summary>
            <param name="username"></param>
            <param name="token">   </param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.GLOBALNETAuthenticationApi.LifetimeValidator(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.IdentityModel.Tokens.SecurityToken,Microsoft.IdentityModel.Tokens.TokenValidationParameters)">
            <summary>
            API Token LifeTime Validator
            </summary>
            <param name="notBefore"></param>
            <param name="expires">  </param>
            <param name="token">    </param>
            <param name="params">   </param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ControllersExtensions.GLOBALNETBackendCheckApi">
            <summary>
            Simple Api for Checking Avaiability
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.GLOBALNETBackendCheckApi.GetBackendCheckApi">
            <summary>
            Gets the backend check API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.LicenseSHOPERAuthenticationApi.Authenticate(System.String,System.String)">
            <summary>
            API Authenticated and Generate Token
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.LicenseSHOPERAuthenticationApi.RefreshUserToken(System.String,EASYDATACenter.ServerCoreStructure.AuthenticateResponse)">
            <summary>
            API Refresh User Token
            </summary>
            <param name="username"></param>
            <param name="token">   </param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.LicenseSHOPERAuthenticationApi.LifetimeValidator(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.IdentityModel.Tokens.SecurityToken,Microsoft.IdentityModel.Tokens.TokenValidationParameters)">
            <summary>
            API Token LifeTime Validator
            </summary>
            <param name="notBefore"></param>
            <param name="expires">  </param>
            <param name="token">    </param>
            <param name="params">   </param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ControllersExtensions.LicenseSHOPERBackendCheckApi">
            <summary>
            Simple Api for Checking Avaiability
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.LicenseSHOPERBackendCheckApi.GetBackendCheckApi">
            <summary>
            Gets the backend check API.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.SHOPINGERAuthenticationApi.Authenticate(System.String,System.String)">
            <summary>
            API Authenticated and Generate Token
            </summary>
            <param name="username"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.SHOPINGERAuthenticationApi.RefreshUserToken(System.String,EASYDATACenter.ServerCoreStructure.AuthenticateResponse)">
            <summary>
            API Refresh User Token
            </summary>
            <param name="username"></param>
            <param name="token">   </param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.SHOPINGERAuthenticationApi.LifetimeValidator(System.Nullable{System.DateTime},System.Nullable{System.DateTime},Microsoft.IdentityModel.Tokens.SecurityToken,Microsoft.IdentityModel.Tokens.TokenValidationParameters)">
            <summary>
            API Token LifeTime Validator
            </summary>
            <param name="notBefore"></param>
            <param name="expires">  </param>
            <param name="token">    </param>
            <param name="params">   </param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ControllersExtensions.SHOPINGERBackendCheckApi">
            <summary>
            Simple Api for Checking Avaiability
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="M:EASYDATACenter.ControllersExtensions.SHOPINGERBackendCheckApi.GetBackendCheckApi">
            <summary>
            Gets the backend check API.
            </summary>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.BackendServer">
            <summary>
            Server Main Definition Starting Point Of Project
            </summary>
        </member>
        <member name="F:EASYDATACenter.BackendServer.ServerConfigSettings">
            <summary>
            Startup Server Initialization Server Setting Data
            </summary>
        </member>
        <member name="F:EASYDATACenter.BackendServer.ServerRuntimeData">
            <summary>
            Startup Server Initialization Server Runtime Data
            </summary>
        </member>
        <member name="M:EASYDATACenter.BackendServer.Main(System.String[])">
            <summary>
            Server Startup Process
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:EASYDATACenter.BackendServer.RestartServer">
            <summary>
            Server Restart Controller
            </summary>
        </member>
        <member name="M:EASYDATACenter.BackendServer.StartServer">
            <summary>
            Server Start Controller
            </summary>
        </member>
        <member name="M:EASYDATACenter.BackendServer.BuildWebHost(System.String[])">
            <summary>
            Final Preparing Server HostBuilder Definition
            Exit 10 Is missing or Format Problem with Configuration File
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.BackendServer.ServerStartupDbDataLoading">
            <summary>
            Server Startup DB Data loading for minimize DB Connect TO Frequency Dials Without Changes
            Example: LanguageList
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices">
            <summary>
            Server Core Configuration Settings of Security, Communications, Technologies, Modules Rules,
            Rights, Conditions, Formats, Services, Logging, etc..
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureFTPServer(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Custom Secure FTP Server
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureCookie(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Cookie Politics
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureControllers(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Server Controllers
            options.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes = [ValidateNever]
            in Class options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore
            = [JsonIgnore] in Class
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Server Logging
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureAuthentication(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Server Authentication Support
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureServerWebPages(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Configures the MVC server pages on Server format "cshtml" 
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureLetsEncrypt(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server core: Configures LetsEncrypt using.
            Certificate will be saved in DataPath
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureWebSocketLoggerMonitor(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server core: Configures the WebSocket logger monitor.
            For multi monitoring and for Example Posibilities
            </summary>
            <param name="services">The services.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureThirdPartyApi(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure HTTP Client for work with third party API
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureScopes(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Custom Core Services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerConfigurationServices.ConfigureDatabaseContext(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Core: Configure Custom Services
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:EASYDATACenter.ServerCoreConfiguration.ServerEnablingServices">
            <summary>
            Server Core Enabling Settings of Security, API Communications, Technologies, Modules,Rules,
            Rights, Rules, Rights, Conditions, Cors, Cookies, Formats, Services, Logging, etc..
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerEnablingServices.EnableLogging(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Enable Server Logging in Debug Mode
            </summary>
            <param name="app">          </param>
            <param name="loggerFactory"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerEnablingServices.EnableCors(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server Cors Configuration
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerEnablingServices.EnableWebSocket(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server WebSocket Configuration
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerEnablingServices.EnableEndpoints(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server Endpoints Configuration
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreConfiguration.ServerModules">
            <summary>
            Configure Server Ad-dons and Modules
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModules.ConfigureCoreAdmin(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Module: Automatic DB Data Manager for work with data directly
            services.AddCoreAdmin("Admin"); is Token RoleName
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModules.ConfigureDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Module: Generted Developer Documentation for Defvelopers Documentation contain
            full Server Structure for extremelly simple developing
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModules.ConfigureHealthCheck(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Module: Automatic DB Data Manager for work with data directly
            Extreme Posibilities https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModules.ConfigureSwagger(Microsoft.Extensions.DependencyInjection.IServiceCollection@)">
            <summary>
            Server Module: Swagger Api Doc Generator And Online Tester Configuration
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:EASYDATACenter.ServerCoreConfiguration.ServerModulesEnabling">
            <summary>
            Enable Configured Server Ad-dons and Modules
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModulesEnabling.EnableCoreAdmin(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server Module: Enable Swagger Api Doc Generator And Online Tester
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModulesEnabling.EnableDocumentation(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server Module: Enable Generated Developer Documentation
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreConfiguration.ServerModulesEnabling.EnableSwagger(Microsoft.AspNetCore.Builder.IApplicationBuilder@)">
            <summary>
            Server Module: Enable Swagger Api Doc Generator And Online Tester
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.DgmlSchemaApi">
            <summary>
            Database Schema Diagram Controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.Controller"/>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.DgmlSchemaApi.#ctor(EASYDATACenter.ServerCoreDBSettings.EASYDATACenterContext)">
            <summary>
            Initializes a new instance of the <see cref="T:EASYDATACenter.ServerCoreDBSettings.DgmlSchemaApi"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.DgmlSchemaApi.Get">
            <summary>
            Creates a DGML class diagram of most of the entities in the project wher you go to
            localhost/dgml See https://github.com/ErikEJ/SqlCeToolbox/wiki/EF-Core-Power-Tools
            </summary>
            <returns>a DGML class diagram</returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.ServerCoreLoggerWS">
            <summary>
            WEBSocket Template still not used Ideal for Terminal Panels, chat, controlling services
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.ServerCoreLoggerWS.GetBySocketAPIPath(System.String)">
            <summary>
            Universal WebSocket API Definitions
            for Connection Paths and Registering
            To Server Central List ow WebSocket Connections
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.ServerCoreLoggerWS.Get">
            <summary>
            WebSocket Registration Connection API Example
            </summary>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.ServerCoreLoggerWS.Echo(Microsoft.AspNetCore.Http.HttpContext,System.Net.WebSockets.WebSocket)">
            <summary>
            WebSocket Communication Set Examle 
            </summary>
            <param name="context">The context.</param>
            <param name="webSocket">The web socket.</param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.ServerCorePagesApi">
            <summary>
            Server Root Controller
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.ServerEmailerApi">
            <summary>
            Server Email sender Api for logged Communication
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.ServerRestartApi">
            <summary>
            Server Restart Api for Remote Control
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.ServerRootApi">
            <summary>
            Server Root Controller
            </summary>
            <seealso cref="T:Microsoft.AspNetCore.Mvc.ControllerBase"/>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.ServerRootApi.Index">
            <summary>
            Server Root "/" Redirection to "server" Folder
            </summary>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.SetReportFilter">
            <summary>
            Database Model Extension Definitions Its API Filter, Extended Classes, Translation, etc
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.IdFilter">
            <summary>
            Custom Class Definition for Filtering by record Id
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.NameFilter">
            <summary>
            Custom Class Definition for Filtering by string
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.CustomString">
            <summary>
            Custom Definition for Returning string List from Stored Procedures Name is ColumnName from
            Stored Procedure Result
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.EASYDATACenterContext">
            <summary>
            Server Main Database Settings Here is Included ScaffoldContext which is connected via Visual
            Studio Tool Here can Be added customization which are not on the server Here is Extended the
            Context with Insert News Functionality Customizing and implement Settings for Automatic
            Adopted Database Schema for Unlimited Working and Operations For Specifics API schemas
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.EASYDATACenterContext.GetApiUserId(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Return User From API Request if Exist other null
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreDBSettings.EASYDATACenterContext.IsAdmin(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Return User From API Request if Exist other null
            </summary>
            <param name="httpContext"></param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreDBSettings.DatabaseContextExtensions">
            <summary>
            Database Context Extensions for All Types Procedures For Retun Data in procedure can be
            Simple SELECT * XXX and you Create Same Class for returned DataSet
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.WebSocketExtension">
            <summary>
            WebSocket Extension Definition For 
            Simple Central Control All Connection
            By Connection Path and Timeout 
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.MailRequest">
            <summary>
            Class Definition for Server Emailer
            In List of this claas you can use Mass Emailer
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.DBResult">
            <summary>
            Database response types definition
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.DBResultMessage">
            <summary>
            The DB result message.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.DBResultMessage.InsertedId">
            <summary>
            Gets or Sets the inserted id.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.DBResultMessage.Status">
            <summary>
            Gets or Sets the status.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.DBResultMessage.RecordCount">
            <summary>
            Gets or Sets the record count.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.DBResultMessage.ErrorMessage">
            <summary>
            Gets or Sets the error message.
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.AuthenticateResponse">
            <summary>
            The authenticate response.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Id">
            <summary>
            Gets or Sets the id.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Name">
            <summary>
            Gets or Sets the name.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Surname">
            <summary>
            Gets or Sets the surname.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Token">
            <summary>
            Gets or Sets the token.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Expiration">
            <summary>
            Gets or Sets the expiration.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.AuthenticateResponse.Role">
            <summary>
            Gets or Sets the role.
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerConfigSettings">
            <summary>
            The server settings.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerServiceEmailAddress">
            <summary>
            Service email, for info about not available service from HeatchCheck Can be used for
            next Develop, automatic checking problems, missing data and all other Its Necessary for
            Correct running Server Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerSMTPServerAddress">
            <summary>
            SMTP Server Address for Login to External Mail Server Its Necessary for Correct running
            Server Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerSMTPPort">
            <summary>
            SMTP Port for Login to External Mail Server Its Necessary for Correct running Server
            Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerSMTPSslIsEnabled">
            <summary>
            EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its
            Necessary for Correct running Server Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerSMTPLoginUsername">
            <summary>
            SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server
            Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.EmailerSMTPLoginPassword">
            <summary>
            SMTP Password for Login to External Mail Server Its Necessary for Correct running Server
            Internal Core Monitoring
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.DatabaseConnectionString">
            <summary>
            Server Database Connection string for Full Service of Database
            Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for
            Read/Write/Exec is enabled
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.DatabaseInternalCachingEnabled">
            <summary>
            Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic,
            Duplicit Functionality with Database Server in complex process can generate problems
            Recommended: false
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.DatabaseInternalCacheTimeoutMin">
            <summary>
            Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with
            Database Server
            Recommended: 30
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigCoreServerRegisteredName">
            <summary>
            Server Service Name automatic figured in All IS/OS/Engines info
            Recommended: EASYDATACenter
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServiceCoreCheckerEmailSenderActive">
            <summary>
            Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write
            to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All
            incorrect server statuses are monitored) Can be writen to Database - !!! Warning for
            infinite Cycling (DB shutdown example)
            Recommended: true
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServiceUseDbLocalAutoupdatedDials">
            <summary>
            Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets,
            For Optimize Traffic. For Example LanguageList - Static table with often reading
            Recommended: true - functionality must be implemented in Server Code
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServiceServerLanguage">
            <summary>
            Server Language for Translating Server internal statuses
            Recommended: cz or en - other languages are not implemented
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServiceEnableMassEmail">
            <summary>
            Server support mass emailing as Service
            You can enable Mass Email Api
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigServerStartupPort">
            <summary>
            Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API
            Controler and WebPages
            Recommended: 5000
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.WebSocketTimeoutMin">
            <summary>
            WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any
            communication socket is closed Set according to your need
            Recommended: 2
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.WebSocketMaxBufferSizeKb">
            <summary>
            Maximum socket message size for control Traffic
            Recomended: 10
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigApiTokenTimeoutMin">
            <summary>
            Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After
            Timeout connection Must Login Again. It is as needed. You Can Change Key for close All
            connections Immediately. Timeout is good for Webpages
            Recomended: 15
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigServerStartupOnHttps">
            <summary>
            Setting for Server URL Services. Logically can run only one Http or Https Server has
            more Security Setting Politics.
            Recommended: true
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigServerGetLetsEncrypt">
            <summary>
            Setting for Automatic Obtain Lets Encrypt
            more Security Setting Politics.
            Recommended: true
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigCertificateDomain">
            <summary>
            Its Domain for include to Automatic Generated Certificate For Server running on HTTPS.
            Domain is for Your validation Certificate Domain. Can be Changed for commercial.
            Domain is Used for Lets Encrypt also
            Write with Comma separator
            Recommended: 127.0.0.1
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigCertificatePassword">
            <summary>
            Password will be inserted to Server Generated Certificate for HTTPS.
            Recommended: empty = Maximal Security Randomly generated 20 chars string
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigJwtLocalKey">
            <summary>
            Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each
            Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its
            AntiHacker Security Rule
            Recommended: empty = Maximal Security Randomly generated 40 chars string
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ConfigTimeTokenValidationEnabled">
            <summary>
            Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using:
            Example for machine connection Or is Control last activity
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerRazorWebPagesEngineEnabled">
            <summary>
            Enable Razor WebPages support engine with Correct Configuration for Automaping form
            folder 'Pages'
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerMvcWebPagesEngineEnabled">
            <summary>
            Enable Mvc WebPages support engine with Correct Configuration
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerJsWebPagesEngineEnabled">
            <summary>
            Enable JS WebPages support engine with Correct Configuration
            React, Nodejs, etc..
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerJsWebStartupCommand">
            <summary>
            Definition of WebPage Startup npmscript command
            React, Nodejs, etc..
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerWebSocketEngineEnabled">
            <summary>
            Enable WebSocket Engine with Default Example Api Controller
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerFtpEngineEnabled">
            <summary>
            Enable FTP File Server oppened for every connection with full rights
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerFtpSecurityEnabled">
            <summary>
            Enable FTP Security
            For access to FTP must be logged  
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerWebBrowserEnabled">
            <summary>
            Enable WebPages File Browsing from server Url on Server
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ServerEnableWebSocketMonitor">
            <summary>
            Server support online multi watch Logging
            Its Run on Websocket and the Log Messages are
            sent for All opened connections for wathing
            on Path: ServerCoreMonitor
            You can enable Mass Email Api
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleSwaggerApiDocEnabled">
            <summary>
            Special Function: Server Automatically Generate Full Documentation of API structure AND
            Database Model. Plus Included API Interface for Online Testing All API Methods with
            Authentication Its Automatic Solution for Third Party cooperation. All changes are
            Reflected after restart server
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleDataManagerEnabled">
            <summary>
            Special Function: AutoGenerated Database DataManager for working with Data Running only
            in Debug mode for simple Develop, can be modified. All changes are Reflected after
            restart server
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleHealthServiceEnabled">
            <summary>
            Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService,
            Over Net can Control Other Company Services Also as Central Control Point With Email
            Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment
            Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleHealthServiceRefreshIntervalSec">
            <summary>
            Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService,
            Over Net can Control Other Company Services Also as Central Control Point With Email
            Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment
            Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without
            HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleMdDocumentationEnabled">
            <summary>
            Enable Server Structure Documentation for Developers Using RootPath, - Block File
            Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy
            "Only HTML"
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerConfigSettings.ModuleDbDiagramGeneratorEnabled">
            <summary>
            Enable Automatic Database Diagram for Simple show Database structure with All bingings
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerRuntimeData">
            <summary>
            The server runtime data.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.Startup_path">
            <summary>
            Gets or Sets the startup_path.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.Setting_folder">
            <summary>
            Gets or Sets the setting_folder.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ConfigFile">
            <summary>
            Gets or Sets the configure file.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.DataPath">
            <summary>
            Gets or Sets the data path.
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.DebugMode">
            <summary>
            Gets or Sets the debug mode.
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.LocalDBTableList">
            <summary>
            The local db table list.
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ServerCancelToken">
            <summary>
            Cancellation Token for Server Remote Control
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ServerArgs">
            <summary>
            Server Starup Args
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ServerCoreStatus">
            <summary>
            Server Core Status
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ServerRestartRequest">
            <summary>
            Server Restart Request Indicator
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.ServerFTPProvider">
            <summary>
            Server Securited FTP Provider for Remote Control
            </summary>
        </member>
        <member name="F:EASYDATACenter.ServerCoreStructure.ServerRuntimeData.CentralWebSocketList">
            <summary>
            Central WebSocket List for Easy one place Using
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerLocalDbDials">
            <summary>
            Special Functions: Definition of Selected tables for Optimal Using to Data nature Its saves
            traffic, increases availability and for Example implemented Language is in Develop Auto Fill
            Table when is First Using Its can be used for more Dials
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerCoreDbOperations">
            <summary>
            All Server Definitions of Database Operation method
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreDbOperations.LoadStaticDbDials(System.Nullable{EASYDATACenter.ServerCoreStructure.ServerLocalDbDials})">
            <summary>
            Method for All Server Defined Table for Local Using As Off line AutoUpdated Tables
            </summary>
            <param name="onlyThis"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.SoftwareTriggers.WriteVisit(System.String,System.Int32,System.String)">
            <summary>
            Trigger User Login History
            </summary>
            <param name="ipAddress"></param>
            <param name="userId">   </param>
            <param name="userName"> </param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreDbOperations.DBTranslate(System.String,System.String)">
            <summary>
            Default Operation for Call Translation
            </summary>
            <param name="word">    </param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreDbOperations.DBTranslateOffline(System.String,System.String)">
            <summary>
            Database LanuageList for Off-line Using Definitions
            </summary>
            <param name="word">    </param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreDbOperations.DBTranslateOnline(System.String,System.String)">
            <summary>
            Database LanuageList for On-line Using Definitions
            </summary>
            <param name="word">    </param>
            <param name="language"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.GetUserApiErrMessage(System.Exception,System.Int32)">
            <summary>
            Mined-ed Error Message For Answer in API Error Response with detailed info about problem
            </summary>
            <param name="exception"></param>
            <param name="msgCount"> </param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.GetSystemErrMessage(System.Exception,System.Int32)">
            <summary>
            Mined-ed Error Message For System Save to Database For Simple Solving Problem
            </summary>
            <param name="exception"></param>
            <param name="msgCount"> </param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.SendMassEmail(System.Collections.Generic.List{EASYDATACenter.ServerCoreStructure.MailRequest})">
            <summary>
            Sends the mass mail.
            </summary>
            <param name="mailRequests">The mail requests.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.SendEmail(EASYDATACenter.ServerCoreStructure.MailRequest,System.Boolean)">
            <summary>
            System Mailer sending Emails To service email with detected fail for analyze and
            corrections on the Way provide better services every time !!! This You can implement
            everywhere, !!! In Debug mode is written to Console, in Release will be sent email
            Empty Sender And Recipients set email for Service Recipient
            </summary>
            <param name="mailRequest"></param>
            <param name="sendImmediately"></param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.LoadSettings">
            <summary>
            Server Local Startup Configuration Its Running as First - Load from Congig.Json After DB
            connection Before Server Start Is This configuration Replaced By Data from DB And next
            Server Start. Its for situation - Bad Connection Server Start with Configuration from File
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.UnicodeToUTF8(System.String)">
            <summary>
            Unicodes to ut f8.
            </summary>
            <param name="strFrom">The string from.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.CheckDirectory(System.String)">
            <summary>
            Checks the directory.
            </summary>
            <param name="directory">The directory.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.CheckFile(System.String)">
            <summary>
            Checks the file.
            </summary>
            <param name="file">The file.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.CopyFile(System.String,System.String)">
            <summary>
            Copies the file.
            </summary>
            <param name="from">From.</param>
            <param name="to">  To.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.CreatePath(System.String)">
            <summary>
            Creates the path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.FileDetectEncoding(System.String)">
            <summary>
            Files the detect encoding.
            </summary>
            <param name="FileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.ReadFile(System.String)">
            <summary>
            Reads the file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.GetSelfSignedCertificate(System.String)">
            <summary>
            Gets the self signed certificate For API Security HTTPS.
            </summary>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.GetSelfSignedCertificateFromFile">
            <summary>
            Set Imported Certificate from file on Server for Https 
            TODO
            </summary>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreFunctions.RandomString(System.Int32)">
            <summary>
            Randoms the string.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.FileOperations">
            <summary>
            System Helpers for EASY working
            Here are extension for Database Model, WebSocket
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.CoreOperations.ValidAndGetTokenParameters">
            <summary>
            Server Token Validation Parameters definition
            For Api is Used if is ON/Off for WePages is On everyTime
            </summary>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.FileOperations.CheckTokenValidityFromString(System.String)">
            <summary>
            Token Validator Extension For Server WebPages
            </summary>
            <param name="tokenString">The token string.</param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.CoreOperations.GetOperatingSystemInfo">
            <summary>
            Extension For Checking Operation System 
            of Server Running
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.DbOperations.BindList``1(System.Data.DataTable)">
            <summary>
            Extension For Using Custom Defined Tables from Database Procedures
            Its used as Database Context Extension as 'CollectionFromSql'
            Method in Database Context
            </summary>
            <typeparam name="T"></typeparam>
            <param name="dt">The dt.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.FileOperations.SendMessageToClientSocket(System.Net.WebSockets.WebSocket,System.String)">
            <summary>
            Sends the message to client WebSocket.
            This Is Used by "SendMessageAndUpdateWebSocketsInSpecificPath"
            For Update Informaions on All Connections in Same WebSocket Path
            Its Solution FOR Teminals, Group Communications, etc.
            </summary>
            <param name="webSocket">The web socket.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreWebHelpers.ListenClientWebSocketMessages(System.Net.WebSockets.WebSocket,System.String)">
            <summary>
            Register Listening Client WebSocket Communication
            Ist for Receive messages from Client
            </summary>
            <param name="webSocket"></param>
            <param name="socketAPIPath"></param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerCoreWebHelpers.AddSocketConnectionToCentralList(System.Net.WebSockets.WebSocket,System.String)">
            <summary>
            Add WeSocket Connection To Central List
            </summary>
            <param name="newWebSocket">The new web socket.</param>
            <param name="socketAPIPath">The socket path.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.FileOperations.SendMessageAndUpdateWebSocketsInSpecificPath(System.String,System.String)">
            <summary>
            Sends the message and update web sockets in specific path.
            </summary>
            <param name="socketAPIPath">The socket API path.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.FileOperations.DisposeSocketConnectionsWithTimeOut">
            <summary>
            !! Global Method for Simple Using WebSockets
            WebSocket Disposed - Cleaning monitored Sockets from Central List.
            Are Closed and Disposed Only with Timeout or with closed Connection 
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.FileOperations.WebSocketLogProvider">
            <summary>
            !!! Implemented
            Server Core WebSocket System LogProvider Stream
            This Is Special Serice For Remote Monitoring
            On More Devices in OneTime
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILoggerProvider" />
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.FileOperations.WebSocketLogger">
            <summary>
            Server Core WebSocket System Logger Interface
            </summary>
            <seealso cref="T:Microsoft.Extensions.Logging.ILogger" />
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.FileOperations.WebSocketLogger.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
            Used to log the entry.
            </summary>
            <typeparam name="TState"></typeparam>
            <param name="logLevel">An instance of <see cref="T:Microsoft.Extensions.Logging.LogLevel"/>.</param>
            <param name="eventId">The event's ID. An instance of <see cref="T:Microsoft.Extensions.Logging.EventId"/>.</param>
            <param name="state">The event's state.</param>
            <param name="exception">The event's exception. An instance of <see cref="T:System.Exception" /></param>
            <param name="formatter">A delegate that formats </param>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.CommunicationController">
            <summary>
            Server Communication Extensions for Controlling Data
            </summary>
        </member>
        <member name="P:EASYDATACenter.ServerCoreStructure.CommunicationController.HttpContext">
            <summary>
            Server Request Accessory controller
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.CommunicationController.IsAdmin">
            <summary>
            Extension for check Admin Role 
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerProviderHealthCheck">
            <summary>
            Custom Registering 
            Data are on /HealthResultService
            </summary>
            <seealso cref="T:Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck" />
        </member>
        <member name="M:EASYDATACenter.ServerCoreStructure.ServerProviderHealthCheck.Microsoft#Extensions#Diagnostics#HealthChecks#IHealthCheck#CheckHealthAsync(Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext,System.Threading.CancellationToken)">
            <summary>
            Interface for Registering Custom  Defined Checks on Startup
            https://dilanlivera.dev/add-health-checks-in-aspnet-core
            https://medium.com/@suman.chatterjee/net-core-web-api-custom-health-check-13c6350b5f0c
            https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks
            </summary>
            <param name="context"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerWebPagesLogin">
            <summary>
            Custom Class For Login over Server Web Pages
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.AutoGenRequest">
            <summary>
            Custom Class For Server Generator Request Monitoring
            </summary>
        </member>
        <member name="T:EASYDATACenter.ServerCoreStructure.ServerWebPagesToken">
            <summary>
            Server WebPages Communication Token Definition
            for Security content
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServer.#ctor(FubarDev.FtpServer.IFtpServerHost)">
            <summary>
            Initializes a new instance of the <see cref="T:EASYDATACenter.ServerCoreServers.HostedFtpServer"/> class.
            </summary>
            <param name="ftpServerHost">The FTP server host that gets wrapped as a hosted service.</param>
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServer.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServer.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider">
            <summary>
            Custom membership provider for Authentication Validation
            Actual is Set by UserName and Password in Database
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.ValidateUser(System.String,System.String)">
            <summary>
            FTP User Validation
            Its for Open FTP and User Validation
            </summary>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns></returns>
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.ValidateUserAsync(System.String,System.String)">
            <summary>
            FTP User Validation Async
            Its for Open FTP and User Validation
            </summary>
            <param name="username">The user name.</param>
            <param name="password">The password.</param>
            <returns>
            The result of the validation.
            </returns>
        </member>
        <member name="T:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.CustomFtpUser">
            <summary>
            Custom FTP user implementation
            </summary>
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.CustomFtpUser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.CustomFtpUser"/> instance.
            </summary>
            <param name="name">The user name</param>
        </member>
        <member name="P:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.CustomFtpUser.Name">
            <inheritdoc />
        </member>
        <member name="M:EASYDATACenter.ServerCoreServers.HostedFtpServerMembershipProvider.CustomFtpUser.IsInGroup(System.String)">
            <inheritdoc />
        </member>
        <member name="T:EASYDATACenter.Startup">
            <summary>
            Server Startup Definitions
            </summary>
        </member>
        <member name="M:EASYDATACenter.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Server Core: Main Configure of Server Services, Technologies, Modules, etc..
            </summary>
            <param name="services"></param>
            <returns>void.</returns>
        </member>
        <member name="M:EASYDATACenter.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostApplicationLifetime)">
            <summary>
            Server Core: Main Enabling of Server Services, Technologies, Modules, etc..
            </summary>
            <param name="app">          </param>
            <param name="serverLifetime"></param>
        </member>
        <member name="T:LicenseSHOPER.DBModel.TemplateList">
            <summary>
            Template System Class, This Class has all DBLogic auto Fields and user join for simple
            creating system Only Rename for your new table
            </summary>
        </member>
        <member name="T:SHOPINGER.DBModel.TemplateList">
            <summary>
            Template System Class, This Class has all DBLogic auto Fields and user join for simple
            creating system Only Rename for your new table
            </summary>
        </member>
    </members>
</doc>
