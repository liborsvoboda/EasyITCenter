{
  "EASY-DATA/Docs/AutomatickéFunkcinality.html": {
    "href": "EASY-DATA/Docs/AutomatickéFunkcinality.html",
    "title": "",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center & Visual Studio Help OS GIT WINDOWS LINUX MARKDOWN DOC SCHEMA DATABASES target of the new Groupware Solutions is set Maximal processes to this automatic solutions. Result Will Be: Create Table and Set API Template - its Done for DATABASE and Backend API Create Form from Templates In FrontEnd for the New Table - Its Done for New System Form (Agenda) Share With World : World will share Agendas with you also Agenda is Only 3 files: SQL(Table), API, FORM Ideal Copy Class from generated By Scaffold to final Form Its Absolute Perfect Solution For EASY Create Robust System in Few Months All Systems Supported: Machines Control, IS Systems, Terminals, and All Sub Systems Databáze Pravidla Pojmenovávání a pravidla pri tvorbě databáze zajišťují snadný přenos sktuktury od DB dat přímo k Formuláři xxxList - Tabulka braná jako Systémová promítá se do:[Api,AppMenu,Tisky,] xxxSupportList - Tabulka podřízená nepromítá se do [AppMenu,Tisky] ale má API Visual Studio Automatic MD File From XML Comments Install 'Vsxmd' Library add this code to 'PropertyGroup' in project file setting <GenerateDocumentationFile>True</GenerateDocumentationFile> <DocumentationMarkdown>$(MSBuildProjectDirectory)\\Golden.md</DocumentationMarkdown> Visual Studio Automatic Code Cleaning Install 'codemaid' Tool Visual Studio Automatic DataBase Schema Snapshot Install 'EntityFrameworkCoreScaffolding' Tool Use Example file 'scaffoldingsettings.json' for OneClick Snapshot GitHub Automatic MDBook Enable 'MDBook' tool For Code Use File: book.toml GitHub/GitLab Automatic Publish to GCloud Docker Enable Build Use File: Dockerfile GitHub/GitLab Automatic Publish to GCloud Docker Enable Build Use File: gitlab-ci.yml Linux Create Backend System Service for Automatic Control Read OS support Use File: Linux-dotnet-MyProject-service.service Windows Install application.exe as System Service for Automatic Control Read OS support Use File: install.bat Visual Studio Automatic Generate windows Help File chm Install 'GhostDoc' tool Run on Project for Generate Full Code COmment and Structure Help file MSSQL DATABASE Automatic BACKUP/RESTORE Use files from MSSQL_DB Can run from System Scheduler Can Run from SQL command Backend WebPages Automatic Controller from Pages Structure Enable Razor WebPages Engine Create new file 'cshtml' in folder ServerCorePages Page is automatic included to Controller !must we different than API URLS Cloning Database Schema To More instances from One Source FOR using Test / Dev / Sharp instances more Branches New Cloned System MarkDown Item Template"
  },
  "EASY-DATA/Docs/CeníkaKontakty.html": {
    "href": "EASY-DATA/Docs/CeníkaKontakty.html",
    "title": "",
    "keywords": "CURRENT PRICE LIST - You will finally experience a record return and not only in money For thinking, the development of tools and work with them worthy in the 21st century Price Idea: On the Implementation of production guides in a production company 5 Tables are sufficient A CUSTOM REPORT usually takes 0.5 - 2 hours The import of the dialer usually takes 1 hour BUILDING A SMALL AVERAGE CUSTOM SYSTEM (5 Tables) from 20,000CZK or hourly 750CZK/Hour BUILDING A SMALL AVERAGE CUSTOM SYSTEM (10 Tables) from CZK 35,000 or hourly CZK 750/Hour Project License/Customer/Number and method of Use PRICE OF 1 Golden SERVER LICENSE CZK 10 000 PRICE OF 1 EASYSYSTEMBuilder LICENSE CZK 10 000 PROGRAM WORK CZK 750/Hour All offered Windows Applications are available to try online in the Application ShowRoom at https://KlikneteZde.Cz Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873 MarkDown Item Template"
  },
  "EASY-DATA/Docs/DatabázeNápověda.html": {
    "href": "EASY-DATA/Docs/DatabázeNápověda.html",
    "title": "DATABASES on Modern way - finally",
    "keywords": "DATABASES on Modern way - finally One Command and One Database in Project, never less - its my new Idea Possible DB Technologies for immediately using by start click only ALL MAIN DATABASE TYPES IN Golden by EF6 (entity framework) are supported ORACLE MSSQL MYSQL POSTGRESQL SQLITE DB2 etc SHARED PROJECT FILES MSSQL EASYBuilder DB installation script MSSQL ENGINE HELP COMMANDS AND TYPES #Run stored procedure for Backup Database via MSSQL user login sqlcmd -U ,username -P password -S .\\SQLEXPRESS -d DatabaseName -Q \"EXEC DB_BACKUP\" #Run stored procedure for Backup Database via Windows Login sqlcmd -S .\\SQLEXPRESS -d DatabaseName -Q \"EXEC DB_BACKUP\" #Recovery Database via MSSQL user Login and set Right for Database by running stored procedure 'DB_SETRIGHTS sqlcmd -U username -P password -S .\\SQLEXPRESS -Q \"ALTER DATABASE [LICENSESRV] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;RESTORE DATABASE [LICENSESRV] FROM DISK = N'C:\\Database\\DEFAULT_DATABASES\\LICENSESRV.bak' WITH MOVE N'LICENSESRV' TO N'C:\\Database\\LICENSESRV.mdf', MOVE N'LICENSESRV_log' TO N'C:\\Database\\LICENSESRV_log.ldf', FILE = 2,RECOVERY, REPLACE, STATS = 10;ALTER DATABASE [LICENSESRV] SET MULTI_USER;\" sqlcmd -U username -P password -S .\\SQLEXPRESS -d LICENSESRV -Q \"EXEC DB_SETRIGHTS\" DATABASE Templates and System Rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to discharge -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced Filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger pro Tabulku pro nastavení jediné hodnoty u typu 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO MarkDown Item Template"
  },
  "EASY-DATA/Docs/DoplňujícíSubProjekty.html": {
    "href": "EASY-DATA/Docs/DoplňujícíSubProjekty.html",
    "title": "",
    "keywords": "EASYTOOLS Addons for Touch panels, Controls,Data types, Forms, Media, Docs, 3D, Are Fully Free for Download (Each Licence Package included) Oppened OpenSource Community for including more than 1000 tools to system by community There are tools for EASYSYSTEMBuilder only IMPLEMENTED TOOLS Calendar - Calendar Control for Calendar Agenda - Unique Agenda and System Page CrashReporter - Autoatic Email sender to Developer if some fail in system core detected SqlConnectionDialog - Connection Dialog for connect to MSSQL server for run SQL commands TouchKeyboard - TouchKeyboard for implementing as TouchPanels/Terminal/Etc. VNCServer - Implemented Remote connection support ImageLibrary - Functionalities for Editing Images with Special Effects HTMLEditor - For Editing HTML Format webpage files HTMLFullEditor - For Editing HTML Format webpage files with images included MarkDownToFlow - For Show Markdown in System MarkDownToHtml - For Show Markdown in System POSIBILITIES You can implement more than 1000 WPF tools and functionalities on Github For Free Simple Github Implementations by WPF Library Next more are Available Cheap Solutions from World Developers on Google (in IT fall Language barrier) or Right Click and Translate None limitations for implementing any IS/OS/Other tools BackWard Complatibility to WINDOWS XP+ (Its need For Production Machines Only)"
  },
  "EASY-DATA/Docs/EDCRadyprogramování.html": {
    "href": "EASY-DATA/Docs/EDCRadyprogramování.html",
    "title": "",
    "keywords": "Literature: https://code-maze.com/net-core-web-development-part1/ https://docs.microsoft.com/cs-cz/aspnet/core/security/cors?view=aspnetcore-6.0 https://docs.microsoft.com/cs-cz/ef/core/cli/dotnet https://medium.com/free-code-camp/an-awesome-guide-on-how-to-build-restful-apis-with-asp-net-core-87b818123e28 https://stackoverflow.com/questions/48282223/scaffold-dbcontext-to-different-output-folder https://codewithmukesh.com/blog/repository-pattern-caching-hangfire-aspnet-core/ Swagger Documentation Administration tools included in Backend server ApiDescription Generator - on url: /swagger Data manager for connected DB - on url: /CoreAdmin Server Health Service - on url: /ServerHealthService WEB root - with Websocket test utility Sitemap Automatic Generator Generate sitemap.xml and robots.txt Sitemap is Generated from Menu google sitemap https://github.com/uhaciogullari/SimpleMvcSitemap sitemap validating https://www.sitemaps.org/protocol.html robots.txt https://github.com/karl-sjogren/robots-txt-middleware JSON configuration Older Example (folder Data/config.json): \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running Golden Universal BACKEND Server Solution foe ANY LIN/WIN/DB Universal Secure MultiPlatform MultiDATABASE BackEnd Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURES / VIEWS/ SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR SIMPLE COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO USED TECHNOLOGIES (SUPPORT by CORE) IN SOLUTION CORE DB types: SQL Server, Oracle, MySQL, SQLite, PostgreSQL, DB2, etc. LINUX, WINDOWS, GCLOUD, DOCKER, AZURE implementation HTTP/HTTPS/WebSocket/RestFull / GET,POST,PATCH,PUT,DELETE,OPTION,etc. Detailed Logging, EASY Debugging ON ALL Dev layers CookiePolicy , CorsPolicy / Authentication / Authorization / Basic–JwtBearer Tokens Automatic API EndPoints /Controllers IMPORT FULL DB Schema/Tables/Procedures/Views from DB by ONE Scaffold Command DB Migrations AND Management of any layer supported Implemented SWAGGER AUTO API Generator: API Tester and Documentation Implemented DIRECT DATA MANAGER for view/editing data in Database Implemented Server HEALTH Check with support All statuses,communications,etc. for Server Control Custom WebPage for BackEnd Controlling supported LOW/NO code developing supported by DB/TABLE/API/CLASS Templates FULL code development supported More others tools and AddOns are on GitHub for implement by Package Install Databases - EASY Way with AUTO Management ASPNETCORE6 and Entity Framework 6 are perfect managing solution for any DATABASE Simple using is Domain for these Technologies, which is simple for each Power User Automatic Code Correction, Auto Helper, Generation DB Schema for Visual Control will not allow to make a mistake lot of Free Tools on GitHub, can be simple included with High effect These Tools are Included to Solution Core Complex Tool DB Data management Automatic API Tester and Documentation Generator System Checker with controlling and logging more than 100 Server/Network/DB/IS/OS events Used Primary Technologies for Unlimited Vision - Older AspNetCore 6 Entity Framework 6 Log4Net MSSQL connection HTTP/HTTPS/WebSocket/RestFull / [GET,POST,PATCH,PUT,DELETE,OPTION] Windows Service / Docker Service / Console application CookiePolicy CorsPolicy Authentication / Authorization / Basic – JwtBearer Automatic EndPoints /Controllers Database Model snapshot to Entity Entity Framework 6: The first green descriptions commands is for simple direct working with MSSQL database. This command generating „full DB Model Entity“ and „full DB API documentation“. Command must be run from „package manager console“. 1) Command for: generate full Entity – Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=SQLSRV;Database=DATAPUB;Persist Security Info=False;User ID=datapub;Password=datapub;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=192.168.1.35;Database=DATAPUB;User ID=datapub;Password=datapub;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel Command for: generate full DB Context – Database API documentation Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -ContextDir \"DbContexts\" 2) Replace Connection string in DBContect folder/Context file with this program part. (here you can enable SQL debugging) public DATAPUBContext(DbContextOptions<DATAPUBContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.SimpleCacheTimeMinutes)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.SimpleCachingEnabled); optionsBuilder.UseSqlServer(Program.ServerConfigSettings.DatabaseConnectionString, x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)); //.LogTo(Console.WriteLine); } Disable ForeignKey control you must set JSONIgnore & ValidateNever params for key in DBModel. Example is in UserList: [JsonIgnore] [ValidateNever] public virtual UserRoleList Role { get; set; } = null!; Init Migrations files to DOTNET migration management for Upload/Manage Database Migrations: Add-Migration Initial -Context Company.WebApplication1.Data.ApplicationDbContext Upload migrations to DATABASE dotnet ef database update Export Database model to SQL script dotnet ef dbcontext script --output Migrations/BasicDBModel.sql These nexts commands are for working with database migrations: Command for: generate script with full database model dotnet ef dbcontext script --output Migrations/BasicDBModel.sql Command for: generate new migration script dotnet ef migrations add ServerSetting.sql Command for: generate script for database update dotnet ef migrations bundle --output Migrations/BasicDBModel.sql Command for: show all migration List dotnet ef migrations list Command for: remove Last migration dotnet ef migrations remove Command for: run all waiting migrations scripts dotnet ef database update Generate executable Files https://learn.microsoft.com/cs-cz/dotnet/core/tools/dotnet-publish Run debug dotnet run --project BACKENDCORE -r win-x64 -c Debug --self-contained Generate exe file Without WebPage support dotnet publish BACKENDCORE -c Release -o bin -r win-x64 /p:PublishSingleFile=true DB backup procedure in Linux CREATE procedure [dbo].[DB_AUTOBACKUP] AS BEGIN DECLARE @dbName as varchar(50) = DB_NAME(); DECLARE @fileName as varchar(80) = CONCAT('/root/DBbackup/',@dbName,'_',FORMAT(GETDATE(),'yyyyMMdd'),'.bak'); DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; END; GO One Project support More DBs = DBContexts these can be used whatever, MOre Api for More App for example The test version, if requested, should ideally be deployed separately for making changes Solution for Data selection by Role - its needed in SELECT API only if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } ASPNETCORE6 & ENTITY FRAMEWORK6 - SUPER SERVER For thinking, the development of tools and work with them worthy in the 21st century ASPNETCORE is a simple intuitive framework with a whisperer for easy development. The Current Solution already contains templates and samples and can be developed with their help robust system. More information can be found with the linked folders. The project is conceptually complex for complete laymen who learn a few steps over and over again. DB Views behave the same as tables Turn off foreign keys in the model To be able to work freely with the tables Server configuration The server loads the configuration from a file at startup and after connecting to the database replaces it with the settings from the database and starts the server according to the parameters \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Unique Services of sever /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Web Services /swagger - Automatic generator API model documentation and testing /CoreAdmin - Data Manager for the connected database /ServerHealthService - Service for setting health checks; server HW/SW API Communication on the BACKEND server side //Disable foreign keys in the model by adding JsonIgnore, ValidateNever : Sample [JsonIgnore] [ValidateNever] public virtual UserList User { get; set; } = null!; API Template The template is ready for complete communication with the table Just RENAME Authorization, INSERT/UPDATE/SELECT/DELETE Standard Table API Template //Inserting/Deleting Range Items into the Sub Table - for example Invoice Items var test = new EASYBUILDERContext(); test.OfferSupportLists.AddRange(record); result = test.SaveChanges(); var test = new EASYBUILDERContext(); test.OfferSupportLists.RemoveRange(data); int result = test.SaveChanges(); EF6 DB procedure query with response parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new GoldenSystemContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); MSSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Command for: Auto Generate full DB – complete Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" EF6 Query Check Token.Role/Issuer - UserName, Include sub table Foreign Table if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.ToList(); } else { data = new GoldenContext().AddressLists.Include(a => a.User) .Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer).ToList(); } Ignore more Sub Tables from include in API response return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles,WriteIndented = true }); Advanced Query Select for Admin user Request suppport if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } Extend Table schema with columns from another table data = new GoldenContext().DocumentTypeLists .Include(d => (d.SystemNameNavigation)).Select(x => new ExtendedDocumentTypeList { Id = x.Id, SystemName = x.SystemName, Description = x.Description, DescriptionCz = x.SystemNameNavigation.DescriptionCz, DescriptionEn = x.SystemNameNavigation.DescriptionEn, UserId = x.UserId, Timestamp = x.Timestamp }).ToList(); Join Table with new custom join condition with exist record **And next more condition in WHERE to List ** (_joiner, _joined) => _joiner.City [HttpGet(\"/GoldenSystemWebApi/Search/GetSearchDial/{language}\")] public async Task<string> GetSearchDial(string language = \"cz\") { List<string> data; List<string> cityData; List<string> countryData; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.SystemName).ToList(); cityData = _dbContext.CityLists.Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.City).ToList(); data = _dbContext.HotelLists.Where(a=> a.Approved == true && a.Advertised == true).Select(a => a.Name).ToList(); } countryData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); cityData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); data = data.Distinct().ToList(); data.Sort(); return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles, WriteIndented = true }); } Join Table with new custom join condition with exist record to Tuple List countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => new Tuple<int, string>(_joined.Id, _joined.Name)).ToList(); MYSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Console command for download full database schema to Backend Server Project Scaffold-DbContext \"server=localhost;port=3306;database=lowercasedbname;uid=user;password=password;\" Pomelo.EntityFrameworkCore.MySql -OutputDir DBModel #MYSQL Entity DB Context Connection Code with loaded configuration settings #Absolute Detailed Logging supported, uncomment only protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseMySql(Program.ServerConfigSettings.DatabaseConnectionString, ServerVersion.AutoDetect(Program.ServerConfigSettings.DatabaseConnectionString)) ; //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)) //.LogTo(Console.WriteLine) ; } } API Condition for Role Admin only [Authorize(Roles = Role.Admin)] [Authorize(Roles = \"admin\")] [CustomAuthorize(Roles = \"admin\")] - Ist working only for full controller - not inserted is: allow All - This role unlogged user in App if not correct by api setting [AllowAnonymous] [Authorize] - This is condition for each API separately without role check if (Request.HttpContext.User.IsInRole(\"admin\")) - this is chek role in API or next method is check over Data model in request - in app is shown message about right or when correct do command API Condition Ignore For Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] BACKEND server Templates and system rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to develop -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger for Table to set a single value for type 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } CLONING DATABASE AS NEW DB AND SCHEMA AND ADDED to API Server AS NEXT NEW DB Cloning DB Schema is good solution for More DB instances In One Server for working as Example: more Branches Test / Dev / Sharp instances New Cloned System Do It By CloneEDCtoXXX.Bat in DatabaseFolder AND DO THESE 2 STEPS 1] Replace Hard DB connection for Multiple DB in Schema in configuration is only One Connection string for more Databases you must modify the config or Replace DsataContect by hard inserted connectin string Here is code for Replacing public SHOPINGERContext() { } public SHOPINGERContext(DbContextOptions<SHOPINGERContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(BackendServer.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(BackendServer.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseSqlServer(\"Server=192.168.1.141,1433;Database=SHOPINGER;User Id=shopinger;Password=shopinger;TrustServerCertificate=True\", x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); if (BackendServer.ServerRuntimeData.DebugMode) { optionsBuilder.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) .LogTo(message => Debug.WriteLine(message)).LogTo(Console.WriteLine); }; ; } } 2] Extend file 'ServerDATaBaseEngine' for Special DataWorking Extend Server definition for this new DatasertWorking for Support Get datatable from Stored Procedures public static List<T> SHOPINGERCollectionFromSql<T>(this SHOPINGERContext dbContext, string sql) where T : class, new() { using var cmd = dbContext.Database.GetDbConnection().CreateCommand(); cmd.CommandText = sql; if (cmd.Connection.State != ConnectionState.Open) cmd.Connection.Open(); try { List<T> results = null; DataTable table = new DataTable(); table.Locale = System.Globalization.CultureInfo.InvariantCulture; table.Load(cmd.ExecuteReader()); results = ServerCoreHelpers.BindList<T>(table).ToList(); return results; } catch (Exception Ex) { ServerCoreFunctions.SendEmail(new MailRequest() { Content = ServerCoreFunctions.GetSystemErrMessage(Ex) }); } finally { cmd.Connection.Close(); } return new List<T>(); } MarkDown Item Template"
  },
  "EASY-DATA/Docs/EICOSImplementace.html": {
    "href": "EASY-DATA/Docs/EICOSImplementace.html",
    "title": "",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center & Visual Studio Help Create Linux service and control for BACKEND Service Files are on Debian in folder: /lib/systemd/system add this code to 'PropertyGroup' create file: dotnet-Project-service.service How to Create/Control LINUX service command list systemctl enable dotnet-TABackend-service.service systemctl start dotnet-TABackend-service.service systemctl status dotnet-TABackend-service.service systemctl stop dotnet-TABackend-service.service Linux Run project dll command command list dotnet application.dll WINDOWS OS HELP & TIPS Install Backend 'EXE' file as Windows service by SC/InstalUtil/ utility Windows Service utilities and Service control from command Line examples are in 'WinServiceUtilities' folder MarkDown Item Template"
  },
  "EASY-DATA/Docs/EICRadyprogramování.html": {
    "href": "EASY-DATA/Docs/EICRadyprogramování.html",
    "title": "",
    "keywords": "Literature: https://code-maze.com/net-core-web-development-part1/ https://docs.microsoft.com/cs-cz/aspnet/core/security/cors?view=aspnetcore-6.0 https://docs.microsoft.com/cs-cz/ef/core/cli/dotnet https://medium.com/free-code-camp/an-awesome-guide-on-how-to-build-restful-apis-with-asp-net-core-87b818123e28 https://stackoverflow.com/questions/48282223/scaffold-dbcontext-to-different-output-folder https://codewithmukesh.com/blog/repository-pattern-caching-hangfire-aspnet-core/ Swagger Documentation Administration tools included in Backend server ApiDescription Generator - on url: /swagger Data manager for connected DB - on url: /CoreAdmin Server Health Service - on url: /ServerHealthService WEB root - with Websocket test utility Sitemap Automatic Generator Generate sitemap.xml and robots.txt Sitemap is Generated from Menu google sitemap https://github.com/uhaciogullari/SimpleMvcSitemap sitemap validating https://www.sitemaps.org/protocol.html robots.txt https://github.com/karl-sjogren/robots-txt-middleware JSON configuration Older Example (folder Data/config.json): \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running Golden Universal BACKEND Server Solution foe ANY LIN/WIN/DB Universal Secure MultiPlatform MultiDATABASE BackEnd Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURES / VIEWS/ SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR SIMPLE COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO USED TECHNOLOGIES (SUPPORT by CORE) IN SOLUTION CORE DB types: SQL Server, Oracle, MySQL, SQLite, PostgreSQL, DB2, etc. LINUX, WINDOWS, GCLOUD, DOCKER, AZURE implementation HTTP/HTTPS/WebSocket/RestFull / GET,POST,PATCH,PUT,DELETE,OPTION,etc. Detailed Logging, EASY Debugging ON ALL Dev layers CookiePolicy , CorsPolicy / Authentication / Authorization / Basic–JwtBearer Tokens Automatic API EndPoints /Controllers IMPORT FULL DB Schema/Tables/Procedures/Views from DB by ONE Scaffold Command DB Migrations AND Management of any layer supported Implemented SWAGGER AUTO API Generator: API Tester and Documentation Implemented DIRECT DATA MANAGER for view/editing data in Database Implemented Server HEALTH Check with support All statuses,communications,etc. for Server Control Custom WebPage for BackEnd Controlling supported LOW/NO code developing supported by DB/TABLE/API/CLASS Templates FULL code development supported More others tools and AddOns are on GitHub for implement by Package Install Databases - EASY Way with AUTO Management ASPNETCORE6 and Entity Framework 6 are perfect managing solution for any DATABASE Simple using is Domain for these Technologies, which is simple for each Power User Automatic Code Correction, Auto Helper, Generation DB Schema for Visual Control will not allow to make a mistake lot of Free Tools on GitHub, can be simple included with High effect These Tools are Included to Solution Core Complex Tool DB Data management Automatic API Tester and Documentation Generator System Checker with controlling and logging more than 100 Server/Network/DB/IS/OS events Used Primary Technologies for Unlimited Vision - Older AspNetCore 6 Entity Framework 6 Log4Net MSSQL connection HTTP/HTTPS/WebSocket/RestFull / [GET,POST,PATCH,PUT,DELETE,OPTION] Windows Service / Docker Service / Console application CookiePolicy CorsPolicy Authentication / Authorization / Basic – JwtBearer Automatic EndPoints /Controllers Database Model snapshot to Entity Entity Framework 6: The first green descriptions commands is for simple direct working with MSSQL database. This command generating „full DB Model Entity“ and „full DB API documentation“. Command must be run from „package manager console“. 1) Command for: generate full Entity – Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=SQLSRV;Database=DATAPUB;Persist Security Info=False;User ID=datapub;Password=datapub;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=192.168.1.35;Database=DATAPUB;User ID=datapub;Password=datapub;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel Command for: generate full DB Context – Database API documentation Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -ContextDir \"DbContexts\" 2) Replace Connection string in DBContect folder/Context file with this program part. (here you can enable SQL debugging) public DATAPUBContext(DbContextOptions<DATAPUBContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.SimpleCacheTimeMinutes)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.SimpleCachingEnabled); optionsBuilder.UseSqlServer(Program.ServerConfigSettings.DatabaseConnectionString, x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)); //.LogTo(Console.WriteLine); } Disable ForeignKey control you must set JSONIgnore & ValidateNever params for key in DBModel. Example is in UserList: [JsonIgnore] [ValidateNever] public virtual UserRoleList Role { get; set; } = null!; Init Migrations files to DOTNET migration management for Upload/Manage Database Migrations: Add-Migration Initial -Context Company.WebApplication1.Data.ApplicationDbContext Upload migrations to DATABASE dotnet ef database update Export Database model to SQL script dotnet ef dbcontext script --output Migrations/BasicDBModel.sql These nexts commands are for working with database migrations: Command for: generate script with full database model dotnet ef dbcontext script --output Migrations/BasicDBModel.sql Command for: generate new migration script dotnet ef migrations add ServerSetting.sql Command for: generate script for database update dotnet ef migrations bundle --output Migrations/BasicDBModel.sql Command for: show all migration List dotnet ef migrations list Command for: remove Last migration dotnet ef migrations remove Command for: run all waiting migrations scripts dotnet ef database update Generate executable Files https://learn.microsoft.com/cs-cz/dotnet/core/tools/dotnet-publish Run debug dotnet run --project BACKENDCORE -r win-x64 -c Debug --self-contained Generate exe file Without WebPage support dotnet publish BACKENDCORE -c Release -o bin -r win-x64 /p:PublishSingleFile=true DB backup procedure in Linux CREATE procedure [dbo].[DB_AUTOBACKUP] AS BEGIN DECLARE @dbName as varchar(50) = DB_NAME(); DECLARE @fileName as varchar(80) = CONCAT('/root/DBbackup/',@dbName,'_',FORMAT(GETDATE(),'yyyyMMdd'),'.bak'); DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; END; GO One Project support More DBs = DBContexts these can be used whatever, MOre Api for More App for example The test version, if requested, should ideally be deployed separately for making changes Solution for Data selection by Role - its needed in SELECT API only if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } ASPNETCORE6 & ENTITY FRAMEWORK6 - SUPER SERVER For thinking, the development of tools and work with them worthy in the 21st century ASPNETCORE is a simple intuitive framework with a whisperer for easy development. The Current Solution already contains templates and samples and can be developed with their help robust system. More information can be found with the linked folders. The project is conceptually complex for complete laymen who learn a few steps over and over again. DB Views behave the same as tables Turn off foreign keys in the model To be able to work freely with the tables Server configuration The server loads the configuration from a file at startup and after connecting to the database replaces it with the settings from the database and starts the server according to the parameters \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Unique Services of sever /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Web Services /swagger - Automatic generator API model documentation and testing /CoreAdmin - Data Manager for the connected database /ServerHealthService - Service for setting health checks; server HW/SW API Communication on the BACKEND server side //Disable foreign keys in the model by adding JsonIgnore, ValidateNever : Sample [JsonIgnore] [ValidateNever] public virtual UserList User { get; set; } = null!; API Template The template is ready for complete communication with the table Just RENAME Authorization, INSERT/UPDATE/SELECT/DELETE Standard Table API Template //Inserting/Deleting Range Items into the Sub Table - for example Invoice Items var test = new EASYBUILDERContext(); test.OfferSupportLists.AddRange(record); result = test.SaveChanges(); var test = new EASYBUILDERContext(); test.OfferSupportLists.RemoveRange(data); int result = test.SaveChanges(); EF6 DB procedure query with response parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new GoldenSystemContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); MSSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Command for: Auto Generate full DB – complete Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" EF6 Query Check Token.Role/Issuer - UserName, Include sub table Foreign Table if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.ToList(); } else { data = new GoldenContext().AddressLists.Include(a => a.User) .Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer).ToList(); } Ignore more Sub Tables from include in API response return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles,WriteIndented = true }); Advanced Query Select for Admin user Request suppport if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } Extend Table schema with columns from another table data = new GoldenContext().DocumentTypeLists .Include(d => (d.SystemNameNavigation)).Select(x => new ExtendedDocumentTypeList { Id = x.Id, SystemName = x.SystemName, Description = x.Description, DescriptionCz = x.SystemNameNavigation.DescriptionCz, DescriptionEn = x.SystemNameNavigation.DescriptionEn, UserId = x.UserId, Timestamp = x.Timestamp }).ToList(); Join Table with new custom join condition with exist record **And next more condition in WHERE to List ** (_joiner, _joined) => _joiner.City [HttpGet(\"/GoldenSystemWebApi/Search/GetSearchDial/{language}\")] public async Task<string> GetSearchDial(string language = \"cz\") { List<string> data; List<string> cityData; List<string> countryData; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.SystemName).ToList(); cityData = _dbContext.CityLists.Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.City).ToList(); data = _dbContext.HotelLists.Where(a=> a.Approved == true && a.Advertised == true).Select(a => a.Name).ToList(); } countryData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); cityData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); data = data.Distinct().ToList(); data.Sort(); return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles, WriteIndented = true }); } Join Table with new custom join condition with exist record to Tuple List countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => new Tuple<int, string>(_joined.Id, _joined.Name)).ToList(); MYSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Console command for download full database schema to Backend Server Project Scaffold-DbContext \"server=localhost;port=3306;database=lowercasedbname;uid=user;password=password;\" Pomelo.EntityFrameworkCore.MySql -OutputDir DBModel #MYSQL Entity DB Context Connection Code with loaded configuration settings #Absolute Detailed Logging supported, uncomment only protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseMySql(Program.ServerConfigSettings.DatabaseConnectionString, ServerVersion.AutoDetect(Program.ServerConfigSettings.DatabaseConnectionString)) ; //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)) //.LogTo(Console.WriteLine) ; } } API Condition for Role Admin only [Authorize(Roles = Role.Admin)] [Authorize(Roles = \"admin\")] [CustomAuthorize(Roles = \"admin\")] - Ist working only for full controller - not inserted is: allow All - This role unlogged user in App if not correct by api setting [AllowAnonymous] [Authorize] - This is condition for each API separately without role check if (Request.HttpContext.User.IsInRole(\"admin\")) - this is chek role in API or next method is check over Data model in request - in app is shown message about right or when correct do command API Condition Ignore For Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] BACKEND server Templates and system rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to develop -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger for Table to set a single value for type 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } CLONING DATABASE AS NEW DB AND SCHEMA AND ADDED to API Server AS NEXT NEW DB Cloning DB Schema is good solution for More DB instances In One Server for working as Example: more Branches Test / Dev / Sharp instances New Cloned System Do It By CloneEDCtoXXX.Bat in DatabaseFolder AND DO THESE 2 STEPS 1] Replace Hard DB connection for Multiple DB in Schema in configuration is only One Connection string for more Databases you must modify the config or Replace DsataContect by hard inserted connectin string Here is code for Replacing public SHOPINGERContext() { } public SHOPINGERContext(DbContextOptions<SHOPINGERContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(BackendServer.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(BackendServer.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseSqlServer(\"Server=192.168.1.141,1433;Database=SHOPINGER;User Id=shopinger;Password=shopinger;TrustServerCertificate=True\", x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); if (BackendServer.ServerRuntimeData.DebugMode) { optionsBuilder.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) .LogTo(message => Debug.WriteLine(message)).LogTo(Console.WriteLine); }; ; } } 2] Extend file 'ServerDATaBaseEngine' for Special DataWorking Extend Server definition for this new DatasertWorking for Support Get datatable from Stored Procedures public static List<T> SHOPINGERCollectionFromSql<T>(this SHOPINGERContext dbContext, string sql) where T : class, new() { using var cmd = dbContext.Database.GetDbConnection().CreateCommand(); cmd.CommandText = sql; if (cmd.Connection.State != ConnectionState.Open) cmd.Connection.Open(); try { List<T> results = null; DataTable table = new DataTable(); table.Locale = System.Globalization.CultureInfo.InvariantCulture; table.Load(cmd.ExecuteReader()); results = ServerCoreHelpers.BindList<T>(table).ToList(); return results; } catch (Exception Ex) { ServerCoreFunctions.SendEmail(new MailRequest() { Content = ServerCoreFunctions.GetSystemErrMessage(Ex) }); } finally { cmd.Connection.Close(); } return new List<T>(); } MarkDown Item Template"
  },
  "EASY-DATA/Docs/EICServerAPICZ.html": {
    "href": "EASY-DATA/Docs/EICServerAPICZ.html",
    "title": "",
    "keywords": "Server Static API pro moduly, správu a ovládání Server má několik statických API používaných funkcí, správa implementované moduly, role, řízení. Zde je seznam statických API vyloučených v dokumentaci Auto API [GET] /ServerRestart - Admin Restart Server [GET] /AdminApiDocs - Dokumentace automatického rozhraní API [WS] /WS/ServerCoreMonitor - Server Core Socket Monitor [GET] /ServerDbDgmlSchema - Auto DB Schema Diagram [GET] /ServerHealthService - Monitor stavu serveru [GET] /Docs - Serverová statická dokumentace MD [GET] /Docs - Serverová statická dokumentace MD [GET] / - Centrální webový portál serveru [GET]/Downoads – Stahování ke stažení na serveru Zde je seznam statických API zahrnutých v dokumentaci Auto API Strukturu rozhraní API naleznete v dokumentaci Auto API [GET,POST] /ServerEmailer - Server Maas Emailing"
  },
  "EASY-DATA/Docs/EICXMLCodeDocs.html": {
    "href": "EASY-DATA/Docs/EICXMLCodeDocs.html",
    "title": "Golden",
    "keywords": "Golden Contents AuthenticateResponse Expiration Id Name Role Surname Token BackendServer ServerConfigSettings ServerRuntimeData BuildWebHost(args) Main(args) RestartServer() ServerStartupDbDataLoading() StartServer() CommunicationController HttpContext CheckAdmin() CustomFtpUser #ctor(name) Name IsInGroup() CustomString DBResult DBResultMessage ErrorMessage InsertedId RecordCount Status DBWebApiResponses DatabaseContextExtensions EmailVerification ExpertDocApi GetDocumentationGroupedList(id) GoldenContext GetApiUserId(httpContext) IsAdmin(httpContext) GoldenSystemAuthenticationApi Authenticate(username,password) LifetimeValidator(notBefore,expires,token,params) RefreshUserToken(username,token) GoldenSystemBackendCheckApi GetBackendCheckApi() HostedFtpServer #ctor(ftpServerHost) StartAsync() StopAsync() HostedFtpServerMembershipProvider ValidateUser(username,password) ValidateUserAsync(username,password) IdFilter MailRequest NameFilter OperatingSystem ProcessClass RobotsController ServerConfigSettings ConfigApiTokenTimeoutMin ConfigCertificateDomain ConfigCertificatePassword ConfigCertificatePath ConfigJwtLocalKey ConfigMaxWebSocketBufferSizeKb ConfigServerGetLetsEncrypt ConfigServerStartupOnHttps ConfigServerStartupPort ConfigWebSocketTimeoutMin DatabaseConnectionString DatabaseInternalCacheTimeoutMin DatabaseInternalCachingEnabled EmailerSMTPLoginPassword EmailerSMTPLoginUsername EmailerSMTPPort EmailerSMTPServerAddress EmailerSMTPSslIsEnabled EmailerServiceEmailAddress ModuleDataManagerEnabled ModuleDbDiagramGeneratorEnabled ModuleHealthServiceEnabled ModuleHealthServiceRefreshIntervalSec ModuleMdDocumentationEnabled ModuleSwaggerApiDocEnabled ServerEnableWebSocketMonitor ServerFtpEngineEnabled ServerFtpSecurityEnabled ServerJsWebPagesEngineEnabled ServerJsWebStartupCommand ServerMvcWebPagesEngineEnabled ServerRazorWebPagesEngineEnabled ServerTimeTokenValidationEnabled ServerWebBrowserEnabled ServerWebSocketEngineEnabled SpecialCoreCheckerEmailSenderActive SpecialEnableMassEmail SpecialServerLanguage SpecialServerServiceName SpecialUseDbLocalAutoupdatedDials SpecialUserWebRootPath ServerConfigurationServices ConfigureAuthentication(services) ConfigureControllers(services) ConfigureCookie(services) ConfigureDatabaseContext(services) ConfigureFTPServer(services) ConfigureLetsEncrypt(services) ConfigureLogging(services) ConfigureScopes(services) ConfigureServerWebPages(services) ConfigureSingletons(services) ConfigureThirdPartyApi(services) ConfigureWebSocketLoggerMonitor(services) ServerCoreDbOperations DBTranslate(word,language) DBTranslateOffline(word,language) DBTranslateOnline(word,language) LoadStaticDbDials(onlyThis) WriteVisit(ipAddress,userId,userName) WriteWebVisit(ipAddress,userId,userName) ServerCoreExportApi ServerCoreFunctions ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) CopyDirectory(directory) CopyFile(from,to) CreateFile(file) CreatePath(path) FileDetectEncoding(FileName) FirstCharToLowerCase(str) GetByteArrayFrom64Encode(strContent) GetSelfSignedCertificate(password) GetSelfSignedCertificateFromFile() GetSystemErrMessage(exception,msgCount) GetUserApiErrMessage(exception,msgCount) LoadSettings() RandomString(length) ReadFile(fileName) RunProcess(processDefinition) SendEmail(mailRequest,sendImmediately) SendMassEmail(mailRequests) UnicodeToUTF8(strFrom) WriteToFile(file,content) ServerCoreHelpers AddSocketConnectionToCentalList(newWebSocket,socketAPIPath) BindList``1(dt) CheckTokenValidityFromString(tokenString) DisposeSocketConnectionsWithTimeOut() GetValidationParameters() IsValidEmail(email) ListenClientWebSocketMessages(webSocket,socketAPIPath) RemoveWhitespace(input) SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) SendMessageToClientSocket(webSocket,message) ServerCoreLoggerWS Echo(context,webSocket) Get() GetBySocketAPIPath(id) ServerCoreWebBuilderApi GetWebBuilderCodePreview() GetWebBuilderMenuPreview(id) ServerCoreWebUserApi PostSendVerifyCode(email) ServerDbDgmlSchemaApi #ctor(context) Get() ServerDocApi _hostingEnvironment GenerateMdBook() ServerEmailerApi ServerEnablingServices EnableCors() EnableEndpoints() EnableLogging(app,loggerFactory) EnableWebSocket(app) ServerLocalDbDials ServerModules ConfigureCoreAdmin(services) ConfigureDocumentation(services) ConfigureHealthCheck(services) ConfigureSwagger(services) ServerModulesEnabling EnableCoreAdmin() EnableDocumentation() EnableSwagger() ServerProviderHealthCheck Microsoft#Extensions#Diagnostics#HealthChecks#IHealthCheck#CheckHealthAsync(context,cancellationToken) ServerRestartApi ServerRuntimeData CentralWebSocketList LocalDBTableList ServerArgs ServerCancelToken ServerCoreStatus ServerFTPProvider ServerRestartRequest ConfigFile DataPath DebugMode Setting_folder Startup_path UserPath ServerWebPagesConfigApi Index() ServerWebPagesLogin ServerWebPagesToken SetReportFilter SitemapController Startup Configure(app,serverLifetime) ConfigureServices(services) SystemDocApi _hostingEnvironment GetMdDocumentPreview() GetMdLibraryPreview() UserConfig WebMessage WebRegistration WebSocketExtension WebSocketLogProvider WebSocketLogger Log``1(logLevel,eventId,state,exception,formatter) AuthenticateResponse type Namespace Golden.ServerCoreDefinition Summary The authenticate response. Expiration property Summary Gets or Sets the expiration. Id property Summary Gets or Sets the id. Name property Summary Gets or Sets the name. Role property Summary Gets or Sets the role. Surname property Summary Gets or Sets the surname. Token property Summary Gets or Sets the token. BackendServer type Namespace Golden Summary Server Main Definition Starting Point Of Project ServerConfigSettings constants Summary Startup Server Initialization Server Setting Data ServerRuntimeData constants Summary Startup Server Initialization Server Runtime Data BuildWebHost(args) method Summary Final Preparing Server HostBuilder Definition Exit 10 Is missing or Format Problem with Configuration File Returns Parameters Name Type Description args System.String[] Main(args) method Summary Server Startup Process Parameters Name Type Description args System.String[] RestartServer() method Summary Server Restart Controller Parameters This method has no parameters. ServerStartupDbDataLoading() method Summary Server Startup DB Data loading for minimize DB Connect TO Frequency Dials Without Changes Example: LanguageList Parameters This method has no parameters. StartServer() method Summary Server Start Controller Parameters This method has no parameters. CommunicationController type Namespace Golden.ServerCoreDefinition Summary Server Communication Extensions for Controlling Data HttpContext property Summary Server Request Accessory controller CheckAdmin() method Summary Extension for check Admin Role Parameters This method has no parameters. CustomFtpUser type Namespace Golden.ServerCoreServers.HostedFtpServerMembershipProvider Summary Custom FTP user implementation #ctor(name) constructor Summary Initializes a new instance of the CustomFtpUser instance. Parameters Name Type Description name System.String The user name Name property Summary Inherit from parent. IsInGroup() method Summary Inherit from parent. Parameters This method has no parameters. CustomString type Namespace Golden.ServerCoreDBSettings Summary Custom Definition for Returning string List from Stored Procedures Name is ColumnName from Stored Procedure Result DBResult type Namespace Golden.ServerCoreDefinition Summary Database response types definition DBResultMessage type Namespace Golden.ServerCoreDefinition Summary The DB result message. ErrorMessage property Summary Gets or Sets the error message. InsertedId property Summary Gets or Sets the inserted id. RecordCount property Summary Gets or Sets the record count. Status property Summary Gets or Sets the status. DBWebApiResponses type Namespace Golden.ServerCoreWebPages Summary WebApi Responses DatabaseContextExtensions type Namespace Golden.ServerCoreDBSettings Summary Database Context Extensions for All Types Procedures For Retun Data in procedure can be Simple SELECT * XXX and you Create Same Class for returned DataSet EmailVerification type Namespace Golden.ServerCoreWebPages Summary WebPages User Verification class ExpertDocApi type Namespace Golden.Controllers GetDocumentationGroupedList(id) method Summary ExpertDocManager Group Documentation Request Api Returns Parameters Name Type Description id System.Int32 The identifier. GoldenContext type Namespace Golden.ServerCoreDBSettings Summary Server Main Database Settings Here is Included ScaffoldContext which is connected via Visual Studio Tool Here can Be added customization which are not on the server Here is Extended the Context with Insert News Functionality Customizing and implement Settings for Automatic Adopted Database Schema for Unlimited Working and Operations For Specifics API schemas GetApiUserId(httpContext) method Summary Return User From API Request if Exist other null Returns Parameters Name Type Description httpContext Microsoft.AspNetCore.Http.HttpContext IsAdmin(httpContext) method Summary Return User From API Request if Exist other null Returns Parameters Name Type Description httpContext Microsoft.AspNetCore.Http.HttpContext GoldenSystemAuthenticationApi type Namespace Golden.ControllersExtensions Authenticate(username,password) method Summary API Authenticated and Generate Token Returns Parameters Name Type Description username System.String password System.String LifetimeValidator(notBefore,expires,token,params) method Summary API Token LifeTime Validator Returns Parameters Name Type Description notBefore System.Nullable{System.DateTime} expires System.Nullable{System.DateTime} token Microsoft.IdentityModel.Tokens.SecurityToken params Microsoft.IdentityModel.Tokens.TokenValidationParameters RefreshUserToken(username,token) method Summary API Refresh User Token Returns Parameters Name Type Description username System.String token Golden.ServerCoreDefinition.AuthenticateResponse GoldenSystemBackendCheckApi type Namespace Golden.ControllersExtensions Summary Simple Api for Checking Avaiability See Also Microsoft.AspNetCore.Mvc.ControllerBase GetBackendCheckApi() method Summary Gets the backend check API. Returns Parameters This method has no parameters. HostedFtpServer type Namespace Golden.ServerCoreServers #ctor(ftpServerHost) constructor Summary Initializes a new instance of the HostedFtpServer class. Parameters Name Type Description ftpServerHost FubarDev.FtpServer.IFtpServerHost The FTP server host that gets wrapped as a hosted service. StartAsync() method Summary Inherit from parent. Parameters This method has no parameters. StopAsync() method Summary Inherit from parent. Parameters This method has no parameters. HostedFtpServerMembershipProvider type Namespace Golden.ServerCoreServers Summary Custom membership provider for Authentication Validation Actual is Set by UserName and Password in Database ValidateUser(username,password) method Summary FTP User Validation Its for Open FTP and User Validation Returns Parameters Name Type Description username System.String The username. password System.String The password. ValidateUserAsync(username,password) method Summary FTP User Validation Async Its for Open FTP and User Validation Returns The result of the validation. Parameters Name Type Description username System.String The user name. password System.String The password. IdFilter type Namespace Golden.ServerCoreDBSettings Summary Custom Class Definition for Filtering by record Id MailRequest type Namespace Golden.ServerCoreDefinition Summary Class Definition for Server Emailer In List of this claas you can use Mass Emailer NameFilter type Namespace Golden.ServerCoreDBSettings Summary Custom Class Definition for Filtering by string OperatingSystem type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary Extension For Checking Operation System of Server Running ProcessClass type Namespace Golden.ServerCoreDefinition Summary Server Process class for running external prrocesses RobotsController type Namespace Golden.ServerCoreDBSettings Summary robots.txt routing See Also Microsoft.AspNetCore.Mvc.Controller ServerConfigSettings type Namespace Golden.ServerCoreDefinition Summary The server settings. ConfigApiTokenTimeoutMin property Summary Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After Timeout connection Must Login Again. It is as needed. You Can Change Key for close All connections Immediately. Timeout is good for Webpages Recomended: 15 ConfigCertificateDomain property Summary Its Domain for include to Automatic Generated Certificate For Server running on HTTPS. Domain is for Your validation Certificate Domain. Can be Changed for commercial. Domain is Used for Lets Encrypt also Write with Comma separator Recommended: 127.0.0.1 ConfigCertificatePassword property Summary Password will be inserted to Server Generated Certificate for HTTPS. Recommended: empty = Maximal Security Randomly generated 20 chars string ConfigCertificatePath property Summary Certificate file NextFrom'DATA'Path\\Filename.pfx For import External Certificate Its Path from Data Startup Folder,example \"groupware.pfx\" is in Data Path The Password must be inserted in ConfigCertificatePassword Settings Other for ignore this Setting set empty string \"\" This settings has Higest Priority before LesEncrypt enabled ConfigJwtLocalKey property Summary Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its AntiHacker Security Rule Recommended: empty = Maximal Security Randomly generated 40 chars string ConfigMaxWebSocketBufferSizeKb property Summary Maximum socket message size for control Traffic Recomended: 10 ConfigServerGetLetsEncrypt property Summary Setting for Automatic Obtain Lets Encrypt more Security Setting Politics. Recommended: true ConfigServerStartupOnHttps property Summary Setting for Server URL Services. Logically can run only one Http or Https Server has more Security Setting Politics. Recommended: true ConfigServerStartupPort property Summary Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API Controler and WebPages Recommended: 5000 ConfigWebSocketTimeoutMin property Summary WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any communication socket is closed Set according to your need Recommended: 2 DatabaseConnectionString property Summary Server Database Connection string for Full Service of Database Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for Read/Write/Exec is enabled DatabaseInternalCacheTimeoutMin property Summary Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with Database Server Recommended: 30 DatabaseInternalCachingEnabled property Summary Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic, Duplicit Functionality with Database Server in complex process can generate problems Recommended: false EmailerSMTPLoginPassword property Summary SMTP Password for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPLoginUsername property Summary SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPPort property Summary SMTP Port for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPServerAddress property Summary SMTP Server Address for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPSslIsEnabled property Summary EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerServiceEmailAddress property Summary Service email, for info about not available service from HeatchCheck Can be used for next Develop, automatic checking problems, missing data and all other Its Necessary for Correct running Server Internal Core Monitoring ModuleDataManagerEnabled property Summary Special Function: AutoGenerated Database DataManager for working with Data Running only in Debug mode for simple Develop, can be modified. All changes are Reflected after restart server ModuleDbDiagramGeneratorEnabled property Summary Enable Automatic Database Diagram for Simple show Database structure with All bingings ModuleHealthServiceEnabled property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health ModuleHealthServiceRefreshIntervalSec property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/ ModuleMdDocumentationEnabled property Summary Enable Server Structure Documentation for Developers Using RootPath, - Block File Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy \"Only HTML\" ModuleSwaggerApiDocEnabled property Summary Special Function: Server Automatically Generate Full Documentation of API structure AND Database Model. Plus Included API Interface for Online Testing All API Methods with Authentication Its Automatic Solution for Third Party cooperation. All changes are Reflected after restart server ServerEnableWebSocketMonitor property Summary Server support online multi watch Logging Its Run on Websocket and the Log Messages are sent for All opened connections for wathing on Path: ServerCoreMonitor You can enable Mass Email Api ServerFtpEngineEnabled property Summary Enable FTP File Server oppened for every connection with full rights ServerFtpSecurityEnabled property Summary Enable FTP Security For access to FTP must be logged ServerJsWebPagesEngineEnabled property Summary Enable JS WebPages support engine with Correct Configuration React, Nodejs, etc.. ServerJsWebStartupCommand property Summary Definition of WebPage Startup npmscript command React, Nodejs, etc.. ServerMvcWebPagesEngineEnabled property Summary Enable Mvc WebPages support engine with Correct Configuration ServerRazorWebPagesEngineEnabled property Summary Enable Razor WebPages support engine with Correct Configuration for Automaping form folder 'Pages' ServerTimeTokenValidationEnabled property Summary Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using: Example for machine connection Or is Control last activity ServerWebBrowserEnabled property Summary Enable WebPages File Browsing from server Url on Server ServerWebSocketEngineEnabled property Summary Enable WebSocket Engine with Default Example Api Controller SpecialCoreCheckerEmailSenderActive property Summary Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All incorrect server statuses are monitored) Can be writen to Database - !!! Warning for infinite Cycling (DB shutdown example) Recommended: true SpecialEnableMassEmail property Summary Server support mass emailing as Service You can enable Mass Email Api SpecialServerLanguage property Summary Server Language for Translating Server internal statuses Recommended: cz or en - other languages are not implemented SpecialServerServiceName property Summary Server Service Name automatic figured in All IS/OS/Engines info Recommended: Golden SpecialUseDbLocalAutoupdatedDials property Summary Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets, For Optimize Traffic. For Example LanguageList - Static table with often reading Recommended: true - functionality must be implemented in Server Code SpecialUserWebRootPath property Summary User Web Root Path for Startup and Any missing address Automatic Redirection Value must start with / Not need Regex Configuration ServerConfigurationServices type Namespace Golden.ServerCoreConfiguration Summary Server Core Configuration Settings of Security, Communications, Technologies, Modules Rules, Rights, Conditions, Formats, Services, Logging, etc.. ConfigureAuthentication(services) method Summary Server Core: Configure Server Authentication Support Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureControllers(services) method Summary Server Core: Configure Server Controllers options.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes = [ValidateNever] in Class options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore = [JsonIgnore] in Class Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureCookie(services) method Summary Server Core: Configure Cookie Politics Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDatabaseContext(services) method Summary Server Core: Configure Custom Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureFTPServer(services) method Summary Custom Secure FTP Server Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLetsEncrypt(services) method Summary Server core: Configures LetsEncrypt using. Certificate will be saved in DataPath Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLogging(services) method Summary Server Core: Configure Server Logging Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureScopes(services) method Summary Server Core: Configure Custom Core Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureServerWebPages(services) method Summary Configures the MVC server pages on Server format \"cshtml\" Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureSingletons(services) method Summary Server Core: Configures the singletons. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureThirdPartyApi(services) method Summary Server Core: Configure HTTP Client for work with third party API Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureWebSocketLoggerMonitor(services) method Summary Server core: Configures the WebSocket logger monitor. For multi monitoring and for Example Posibilities Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ServerCoreDbOperations type Namespace Golden.ServerCoreDefinition Summary All Server Definitions of Database Operation method DBTranslate(word,language) method Summary Default Operation for Call Translation Returns Parameters Name Type Description word System.String language System.String DBTranslateOffline(word,language) method Summary Database LanuageList for Off-line Using Definitions Returns Parameters Name Type Description word System.String language System.String DBTranslateOnline(word,language) method Summary Database LanuageList for On-line Using Definitions Returns Parameters Name Type Description word System.String language System.String LoadStaticDbDials(onlyThis) method Summary Method for All Server Defined Table for Local Using As Off line AutoUpdated Tables Parameters Name Type Description onlyThis System.Nullable{Golden.ServerCoreDefinition.ServerLocalDbDials} WriteVisit(ipAddress,userId,userName) method Summary Trigger User Login History Parameters Name Type Description ipAddress System.String userId System.Int32 userName System.String WriteWebVisit(ipAddress,userId,userName) method Summary Trigger User Login History Parameters Name Type Description ipAddress System.String ServerCoreExportApi type Namespace Golden.ServerCoreDBSettings Summary [Authorize] Server Export Services See Also Microsoft.AspNetCore.Mvc.Controller ServerCoreFunctions type Namespace Golden.ServerCoreDefinition ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary Copies the file. Returns Parameters Name Type Description from System.String From. to System.String To. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The path. FileDetectEncoding(FileName) method Summary Files the detect encoding. Returns Parameters Name Type Description FileName System.String Name of the file. FirstCharToLowerCase(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetByteArrayFrom64Encode(strContent) method Summary Separate ByteArray from 64 encode file For inserted file types Returns Parameters Name Type Description strContent System.String Content of the string. GetSelfSignedCertificate(password) method Summary Gets the self signed certificate For API Security HTTPS. Returns Parameters Name Type Description password System.String The password. GetSelfSignedCertificateFromFile() method Summary Set Imported Certificate from file on Server for Https File must has Valid path from Startup Data Path Returns Parameters This method has no parameters. GetSystemErrMessage(exception,msgCount) method Summary Mined-ed Error Message For System Save to Database For Simple Solving Problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetUserApiErrMessage(exception,msgCount) method Summary Mined-ed Error Message For Answer in API Error Response with detailed info about problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 LoadSettings() method Summary Server Local Startup Configuration Its Running as First - Load from Congig.Json After DB connection Before Server Start Is This configuration Replaced By Data from DB And next Server Start. Its for situation - Bad Connection Server Start with Configuration from File Parameters This method has no parameters. RandomString(length) method Summary Randoms the string. Returns Parameters Name Type Description length System.Int32 The length. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. RunProcess(processDefinition) method Summary Server Function For Running External Processes Returns Parameters Name Type Description processDefinition Golden.ServerCoreDefinition.ProcessClass The process definition. SendEmail(mailRequest,sendImmediately) method Summary System Mailer sending Emails To service email with detected fail for analyze and corrections on the Way provide better services every time !!! This You can implement everywhere, !!! In Debug mode is written to Console, in Release will be sent email Empty Sender And Recipients set email for Service Recipient Parameters Name Type Description mailRequest Golden.ServerCoreDefinition.MailRequest sendImmediately System.Boolean SendMassEmail(mailRequests) method Summary Sends the mass mail. Parameters Name Type Description mailRequests System.Collections.Generic.List{Golden.ServerCoreDefinition.MailRequest} The mail requests. UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. ServerCoreHelpers type Namespace Golden.ServerCoreDefinition Summary System Helpers for EASY working Here are extension for Database Model, WebSocket AddSocketConnectionToCentalList(newWebSocket,socketAPIPath) method Summary Add WeSocket Connection To Central List Parameters Name Type Description newWebSocket System.Net.WebSockets.WebSocket The new web socket. socketAPIPath System.String The socket path. BindList``1(dt) method Summary Extension For Using Custom Defined Tables from Database Procedures Its used as Database Context Extension as 'CollectionFromSql' Method in Database Context Returns Parameters Name Type Description dt System.Data.DataTable The dt. Generic Types Name Description T CheckTokenValidityFromString(tokenString) method Summary Token Validator Extension For Server WebPages Returns Parameters Name Type Description tokenString System.String The token string. DisposeSocketConnectionsWithTimeOut() method Summary !! Global Method for Simple Using WebSockets WebSocket Disposed - Cleaning monitored Sockets from Central List. Are Closed and Disposed Only with Timeout or with closed Connection Parameters This method has no parameters. GetValidationParameters() method Summary Server Token Validation Parameters definition For Api is Used if is ON/Off for WePages is On everyTime Returns Parameters This method has no parameters. IsValidEmail(email) method Summary Determines whether [is valid email] [the specified email]. Returns true if [is valid email] [the specified email]; otherwise, false. Parameters Name Type Description email System.String The email. ListenClientWebSocketMessages(webSocket,socketAPIPath) method Summary Register Listening Client WebSocket Communication Ist for Receive messages from Client Returns Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket socketAPIPath System.String RemoveWhitespace(input) method Summary Removes the whitespace from the String. Returns Parameters Name Type Description input System.String The input. SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) method Summary Sends the message and update web sockets in specific path. Parameters Name Type Description socketAPIPath System.String The socket API path. message System.String The message. SendMessageToClientSocket(webSocket,message) method Summary Sends the message to client WebSocket. This Is Used by \"SendMessageAndUpdateWebSocketsInSpecificPath\" For Update Informaions on All Connections in Same WebSocket Path Its Solution FOR Teminals, Group Communications, etc. Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket The web socket. message System.String The message. ServerCoreLoggerWS type Namespace Golden.ServerCoreDBSettings Summary WEBSocket Template still not used Ideal for Terminal Panels, chat, controlling services Echo(context,webSocket) method Summary WebSocket Communication Set Examle Returns Parameters Name Type Description context Microsoft.AspNetCore.Http.HttpContext The context. webSocket System.Net.WebSockets.WebSocket The web socket. Get() method Summary WebSocket Registration Connection API Example Returns Parameters This method has no parameters. GetBySocketAPIPath(id) method Summary Universal WebSocket API Definitions for Connection Paths and Registering To Server Central List ow WebSocket Connections Returns Parameters Name Type Description id System.String ServerCoreWebBuilderApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller GetWebBuilderCodePreview() method Summary WebBuilder Code Library Preview Api Returns Parameters This method has no parameters. GetWebBuilderMenuPreview(id) method Summary WebBuilder Menu Preview Api Returns Parameters Name Type Description id System.Int32 The identifier. ServerCoreWebUserApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller PostSendVerifyCode(email) method Summary WebPages Verification Email Returns Parameters Name Type Description email Golden.ServerCoreWebPages.EmailVerification The email. ServerDbDgmlSchemaApi type Namespace Golden.ServerCoreDBSettings Summary Database Schema Diagram Controller See Also Microsoft.AspNetCore.Mvc.Controller #ctor(context) constructor Summary Initializes a new instance of the class. Parameters Name Type Description context Golden.ServerCoreDBSettings.GoldenContext The context. Get() method Summary Creates a DGML class diagram of most of the entities in the project wher you go to localhost/dgml See https://github.com/ErikEJ/SqlCeToolbox/wiki/EF-Core-Power-Tools Returns a DGML class diagram Parameters This method has no parameters. ServerDocApi type Namespace Golden.Controllers _hostingEnvironment constants Summary For wwwroot folder Update with detect changes and modify static pages GenerateMdBook() method Summary Server Inteligent Documentation Generator Api Parameters This method has no parameters. ServerEmailerApi type Namespace Golden.ServerCoreDBSettings Summary Server Email sender Api for logged Communication See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerEnablingServices type Namespace Golden.ServerCoreConfiguration Summary Server Core Enabling Settings of Security, API Communications, Technologies, Modules,Rules, Rights, Rules, Rights, Conditions, Cors, Cookies, Formats, Services, Logging, etc.. EnableCors() method Summary Server Cors Configuration Parameters This method has no parameters. EnableEndpoints() method Summary Server Endpoints Configuration Parameters This method has no parameters. EnableLogging(app,loggerFactory) method Summary Enable Server Logging in Debug Mode Returns Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ EnableWebSocket(app) method Summary Server WebSocket Configuration Returns Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ ServerLocalDbDials type Namespace Golden.ServerCoreDefinition Summary Special Functions: Definition of Selected tables for Optimal Using to Data nature Its saves traffic, increases availability and for Example implemented Language is in Develop Auto Fill Table when is First Using Its can be used for more Dials ServerModules type Namespace Golden.ServerCoreConfiguration Summary Configure Server Ad-dons and Modules ConfigureCoreAdmin(services) method Summary Server Module: Automatic DB Data Manager for work with data directly services.AddCoreAdmin(\"Admin\"); is Token RoleName Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDocumentation(services) method Summary Server Module: Generted Developer Documentation for Defvelopers Documentation contain full Server Structure for extremelly simple developing Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureHealthCheck(services) method Summary Server Module: Automatic DB Data Manager for work with data directly Extreme Posibilities https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureSwagger(services) method Summary Server Module: Swagger Api Doc Generator And Online Tester Configuration Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ServerModulesEnabling type Namespace Golden.ServerCoreConfiguration Summary Enable Configured Server Ad-dons and Modules EnableCoreAdmin() method Summary Server Module: Enable Swagger Api Doc Generator And Online Tester Parameters This method has no parameters. EnableDocumentation() method Summary Server Module: Enable Generated Developer Documentation Parameters This method has no parameters. EnableSwagger() method Summary Server Module: Enable Swagger Api Doc Generator And Online Tester Parameters This method has no parameters. ServerProviderHealthCheck type Namespace Golden.ServerCoreDefinition Summary Custom Registering Data are on /HealthResultService See Also Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck Microsoft#Extensions#Diagnostics#HealthChecks#IHealthCheck#CheckHealthAsync(context,cancellationToken) method Summary Interface for Registering Custom Defined Checks on Startup https://dilanlivera.dev/add-health-checks-in-aspnet-core https://medium.com/@suman.chatterjee/net-core-web-api-custom-health-check-13c6350b5f0c https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks Returns Parameters Name Type Description context Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext cancellationToken System.Threading.CancellationToken ServerRestartApi type Namespace Golden.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerRuntimeData type Namespace Golden.ServerCoreDefinition Summary The server runtime data. CentralWebSocketList constants Summary Central WebSocket List for Easy one place Using LocalDBTableList constants Summary The local db table list. ServerArgs constants Summary Server Starup Args ServerCancelToken constants Summary Cancellation Token for Server Remote Control ServerCoreStatus constants Summary Server Core Status ServerFTPProvider constants Summary Server Securited FTP Provider for Remote Control ServerRestartRequest constants Summary Server Restart Request Indicator ConfigFile property Summary Gets or Sets the configure file. DataPath property Summary Gets or Sets the data path. DebugMode property Summary Gets or Sets the debug mode. Setting_folder property Summary Gets or Sets the setting_folder. Startup_path property Summary Gets or Sets the startup_path. UserPath property Summary Gets or Sets the configure file. ServerWebPagesConfigApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller Used by Server Webpages See Also Microsoft.AspNetCore.Mvc.ControllerBase Index() method Summary Server Root \"/\" Redirection to \"server\" Folder Returns Parameters This method has no parameters. ServerWebPagesLogin type Namespace Golden.ServerCoreWebPages Summary Custom Class For Login over Server Web Pages ServerWebPagesToken type Namespace Golden.ServerCoreWebPages Summary Server WebPages Communication Token Definition for Security content SetReportFilter type Namespace Golden.ServerCoreDBSettings Summary Database Model Extension Definitions Its API Filter, Extended Classes, Translation, etc SitemapController type Namespace Golden.ServerCoreDBSettings Summary Sitemap.xml Routing See Also Microsoft.AspNetCore.Mvc.Controller Startup type Namespace Golden Summary Server Startup Definitions Configure(app,serverLifetime) method Summary Server Core: Main Enabling of Server Services, Technologies, Modules, etc.. Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder serverLifetime Microsoft.Extensions.Hosting.IHostApplicationLifetime ConfigureServices(services) method Summary Server Core: Main Configure of Server Services, Technologies, Modules, etc.. Returns void. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection SystemDocApi type Namespace Golden.Controllers _hostingEnvironment constants Summary For wwwroot folder Update with detect changes and modify static pages GetMdDocumentPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. GetMdLibraryPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. UserConfig type Namespace Golden.ServerCoreWebPages Summary Custom Class For UserConfig over Server Web Pages WebMessage type Namespace Golden.ServerCoreWebPages Summary Custom WebMessage Class For Server Web Pages WebRegistration type Namespace Golden.ServerCoreWebPages Summary WebPages User Registration class WebSocketExtension type Namespace Golden.ServerCoreDefinition Summary WebSocket Extension Definition For Simple Central Control All Connection By Connection Path and Timeout WebSocketLogProvider type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary !!! Implemented Server Core WebSocket System LogProvider Stream This Is Special Serice For Remote Monitoring On More Devices in OneTime See Also Microsoft.Extensions.Logging.ILoggerProvider WebSocketLogger type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary Server Core WebSocket System Logger Interface See Also Microsoft.Extensions.Logging.ILogger Log``1(logLevel,eventId,state,exception,formatter) method Summary Used to log the entry. Parameters Name Type Description logLevel Microsoft.Extensions.Logging.LogLevel An instance of LogLevel. eventId Microsoft.Extensions.Logging.EventId The event's ID. An instance of EventId. state ``0 The event's state. exception System.Exception The event's exception. An instance of Exception formatter System.Func{``0,System.Exception,System.String} A delegate that formats Generic Types Name Description TState"
  },
  "EASY-DATA/Docs/ESBRadyprogramování.html": {
    "href": "EASY-DATA/Docs/ESBRadyprogramování.html",
    "title": "",
    "keywords": "EASYBuilder Description SYSTEM CORE For thinking, the development of tools and work with them worthy in the 21st century A full detailed description of the system core for easy development of any system with full support for automated functions, methods to make any of your applications work properly this information is divided into information for rapid development complete information about the basic function of the system Projects Documentation Used automatic tools Generating MD from XML Documentation from code Generating MD from XML Documentation from code <DocumentationFile>bin\\Debug\\Documentation\\GoldenSystem.xml</DocumentationFile> <DocumentationMarkdown>$(MSBuildProjectDirectory)\\GoldenSystem.md</DocumentationMarkdown> DECLARED SYSTEM CONDITIONS FOR DEVELOP NEW AGENDA Basic Info what you minimal need for start Developing of new Agendas APP Initialization [INFO] Starting APP with Welcome Page by JSON Setting Initialize Technologies Including Core Styles and themes Set Global Properties Set Global DataLists (Parameters, Setting, Tilts, System Classes, UserData, Error Handlers, API Security, etc) Set CrashReporting join Welcome Page [INFO] - Video Start Page with Mottos NAMESPACES [CONDITIONS] Pages - Each Agenda must be in Namespace Pages Classes - All Agenda Classes are in Namespace Classes for developer Help DataClases [CONDITIONS] - DataList - Table Models Description (for Agendas/Pages) Create By TemplateClass.cs file your new Class/DataModel Definition in your Agenda Folder you can create Extended Table Model for more field in basic DataListModel - (example: ReceiptList, OutgoingOrderList, etc.) Done ApiCommunications [CONDITIONS] - In the Class is in ENUM all API address list All API Cals which has 'List' word on End is automatically supported for insert Report Insert your New API address to this enum Done Languages [CONDITIONS] - Each used 'Word' must exist in all Language Files Before Build insert all new translations [check duplicity]to all dictionaries for your new Agenda field, menuName Done PageTemplatesCodeHelp [INFO] - is central List of special methods in the system (Load/SaveFile, load, lang, number validation, etc..) Templates [INFO] - For simple create new ANY agengas by COPY/PASTE for simple modify INPUT fields only for new Agenda Create new folder in Agendas and copy TemplateClass and correct TemplatePage to this folder rename these files and change class model to your new class[COPY/PASTE from backend] replace 'TemplateClass' for your new in XAML and CS file of your new Page/Agenda now the form field change only and modify and check fields, translations, apiCalls in cs code for your new Done MainMenu [CONDITIONS] - in MainWindow must be new Agenga inserted to the application menu Insert new menu Item -im Xaml copy existing menu item and rename to your new Agenda Translate menu item - In CS code insert the translate menu item in initialize Method Set Menu Reaction - in MainWindows Method 'Cb_verticalMenuSelected' copy existing menuitem part code in the 'CASE' and change XAML menu name and name of called 'Page' Here on end case for List Report set the '/YourTableNameList' in Report line or for non report Table set 'cb_printReports.ItemsSource = null;' Done Reports [INFO] - In system menu Reports you can upload Report file for your new Agenda NOW Build and YOUR new Agenda is IN App Menu and After click is opened THIS IS ALL INFORMATIONS FOR SUCCESS DEVELOPING SHORT SYSTEM DESCRIPTION System is Fully dynamic Controlled For All menuInserted Pages/Agendas (Insert new Page/Agenda to menu + Translate for implement to full system only) All method are implemented with global logic of using for central Core of this System and his Modification For working with any standard system agenda (Typically IS System - SAP Example) INSERT/UPDATE/DELETE/SELECT/FILTER/PRINT/SHOW/MEDIA 3D/VIDEO/DOCS/EAN CODES/1000 FINISHED TOOLS on GITHUB/UNLIMITED ETC FOR WINDOWS MODERN SYSTEMS/TERMINALS/ETC ON START (WEB FORMAT IS SUPPORTED BY TECHNOLOGY WILL BE DONE IN YEAR FUTURE MAINWINDOW Central SYSTEM Control Manual This is Core central point (MainWindow.xaml/cs) for full system Here are Defined All join for Central Control for All parts of System MainWindow is Absolute Primary Control window off all actions in the application Here are All global definitions, Messages, mainWindows and all Shared Controls for Pages Here are Application Menu events, Update, Reports, New/Edit/.. for DataList, Filters, TabPages MainWindow Has Defined 3Menu Types for More Systems: - Buttons in Header LINE -> For simple touch Terminal with few button for Agendas - SelectBox -> For TouchPanels with more MenuItems, but Touch functionality is Needed - TreeView -> For Robust Systems with a lot of MenuItems/Agendas in Xaml are declared all shared input/Controls/ETC for Application App Update, Tools, Theme, Menus, Report Ctrl, Pages Controls, Graphics, ProgressRing, TabPages Types, CORE SYSTEM METHODS - OLDER,Was modernized** Initialize - Initiate Theme/Color/App menu/Load Config/Show Login Here is Translate Menu Items** Timer10sec_Elapsed - Auto Backend Timer cycling by Config [default 5sec] check if Backend is Accesible - Server status Control load Server Setting Load Application Parameters for NULL user ShowLoginDialog - Login, Load User Params, Token, Enable Menu Items ShowMessage - Shared Message for call from Pages For show in MainWindow SetServiceStop - connect/disconnect menuItems Pages on Backend Service Status DATALIST GLOBAL METHODS - OLDER,Was modernized** cb_FilterDropDownClosed - Reload Datalist with filtering Mi_filter_Click - Generate and show advanced filter (for SQL conditioning): Cb_PrintReportsSelected - save filter to DB, open selected Report Cb_verticalMenuSelected - Open selected Page/Agenda and set all controls,input,filter,reports status !!NEW AGENDA MUST BE DEFINED ONLY HERE. INFO METHOD LIST SYSTEM CORE NOT NEEDED CHANGES - OLDER,Was modernized Btn_about_click - Show About Info WinMain_KeyDown - Global Control for Keyboard press ,implemented F1/ALT+Q Btn_LaunchHelp_Click - Open index.chm Windows Help File ApplicationClosing - Save theme, close App AppRestart - Restart for Configuration Reload StringToFilter - upload seted filter in page for actual view RemoveFilterItem_Click - Remove advanced filter Item FilterField_SelectionChanged - support method for dynamic filter generation MainGrid_IsDraggingChanged - For Draging TabPages - ACTUALLY DISABLED Menu_action_Click - Automatic Datalist Controls Action Handler AddNewTab - Automatic TabPages Controller TabPanelOnSelectionChange - Automatic Controller for TabPages Changing ChangeMenuView - Specific for Version with more menu types. Show/Hide used menu type System Core Code Rules /// <summary> /// Library with standarztized Definitions and Methods For Develop Any System /// </summary> public class PageTemplatesCodeHelp { #region MyReStandartized Definitions - OLDER,Was modernized /// <summary> /// Define Collection For Combobox Example /// </summary> public ObservableCollection<Language> Languages = new ObservableCollection<Language>() { new Language() { Name = \"System\", Value = \"system\" }, new Language() { Name = \"Czech\", Value = \"cs-CZ\" }, }; #endregion /// <summary> /// Special Method for input limitation as number only /// Its only for help /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private void NumberValidationTextBox(object sender, TextCompositionEventArgs e) { Regex regex = new Regex(\"[^0-9]+\"); e.Handled = regex.IsMatch(e.Text); } /// <summary> /// Global Application Defined API Communication Types for Centalised using /// </summary> private async void DefinedAllAplicationApiComunicationTypes() { ///ApiUrls variable is List With All API cals ///DBResultMessage is Class for Global using of All Api with all information of Request result DBResultMessage dBResult; /// Serialize Dataset for API sending INSERT/UPDATE TemplateClassList myRecord = new TemplateClassList(); string json = JsonConvert.SerializeObject(myRecord); StringContent httpContent = new StringContent(json, Encoding.UTF8, \"application/json\"); ///API for load/Select Data await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.TemplateClassList, null, App.UserData.Authentification.Token); ///API for Data Insert dBResult = await ApiCommunication.PutApiRequest(ApiUrls.TemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Data Update dBResult = await ApiCommunication.PostApiRequest(ApiUrls.TemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Delete Data dBResult = await ApiCommunication.DeleteApiRequest(ApiUrls.TemplateClassList, \"someId\", App.UserData.Authentification.Token); } /// <summary> /// Global Application avaiable Methods for All Pages for Centalised using /// </summary> private async void DefinedGlobalMainWindowMethodsForAllPages() { ///Aplication Restart MainWindow.AppRestart(); ///Progresring for Wait indication MainWindow.ProgressRing = Visibility.Hidden; ///Show Info message await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\"); ///Show Confirm Dialog MessageDialogResult result = await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\" + \" \", true); if (result == MessageDialogResult.Affirmative) { } ///Method For Sett Language of Each Page Language defaultLanguage = JsonConvert.DeserializeObject<Language>(App.Setting.DefaultLanguage); ///_ = MediaFunctions.SetLanguageDictionary(Resources, defaultLanguage.Value); } /// <summary> /// Global Specific Methods For Customized Working - OLDER,Was modernized /// </summary> private async void UsedSpecificMethodsForCustomizedWorking() { #region Other Help Global Definitions and Methods ///Load Parameter From Table Parameters text is Parameter name var res = ServerCoreFunctions.ParameterCheck(\"someParameterName\").Correct ? int.Parse(ServerCoreFunctions.ParameterCheck(\"someParameterName\").Value) : 50; ///Set ComboBox Item By myValue (from selected record or another) int index = 0; ComboBox cb_defaultLanguage = new ComboBox(); cb_defaultLanguage.Items.SourceCollection.Cast<Language>().ToList().ForEach(language => { if (language.Name == \"myvalue\") { cb_defaultLanguage.SelectedIndex = index; } index++; }); ///Open File Dialog OpenFileDialog dlg = new OpenFileDialog { DefaultExt = \".exe\", Filter = \"Exe files |*.exe\", Title = \"Resources[\\\"fileOpenDescription\\\"].ToString()\" }; if (dlg.ShowDialog() == true) { } #endregion } #region Other Custom Communications /// <summary> /// Customized GET Call /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private async void BtnApiTest_Click(object sender, RoutedEventArgs e) { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(\"someUrl\"); await MainWindow.ShowMessage(false, json); } catch (Exception ex) { await MainWindow.ShowMessage(true, \"Exception Error : \" + ex.StackTrace); } } } #endregion PAGE/AGENDA STANDARTIZED DEFINITION FOR CREATE NEW ANY SYSTEM STANDARD AGENGA AGENDA (Page) IS BUILDED FROM STANDARTIZED METHODS FOR FULL CONTROL OF EACH STANDARD Agenda Page Each FULL agenga has these Methods for work with SYSTEM CORE AGENDA CONTAIN - DaTaModel Class File (Copied from Backend Server or DB Structure ScaffoldContext) PreDefined XAML FORM (contain both LIST/FORM definitions) List od Global System Methods for Control Full Agenda in System Core PAGE - AGENDA METHOD LIST Method InitializePage - used by MenuClick - Load Dictionaries, Parameters, Translate Form Fields And Run 'LoadDataList' for Datalist/Dials, others, Set Record = False Method LoadDataList - used by REFRESH Button - Call API for again load datasets in Page (DB Select) Method NewRecord - used by NEW Button - Open detail form for New Record Method EditRecord(false) - used by EDIT Button - Open detail form for edit Record Method EditRecord(true) - used by COPY Button - Open detail form for create copied Record (with ID=0) Method DeleteRecord - used by DELETE Button - Call delete API for selected record in datalist (DB Delete) Method Filter - SEARCH Textbox - SIMPLE SEARCH in all defined columns in PAGE code - Method Filter Method DgListView_Translate - Translate Datalist column - translate column names by Xaml Language Dictionaries Method DgListView_MouseDoubleClick - Select and Open selected Record Detail Method DgListView_SelectionChanged - Select Record For control buttons enabling, show Report with join on Id Method BtnSave_Click - Form to DataClassModel, send API (DB Insert/DB Update), Return to DataList View Method BtnCancel_Click - Cancel Form and Return to DataListView Method SetRecord - Load Selected Record (edit,copy) to Detail Form In Combined Forms with SubTable The methods Are copied as SubMethods (Translate,Data,Form Fields) Standard SUBSELECT ComboBox/ListBox/ListView/Custom For Dial Join Record Selection (Addresses, Items, Etc.) Standard Method List for Full Mouse/Keyboard Control SelectGotFocus - Call SubDataList Controller for Selection one Record for Selection 'UpdateCustomerSearchResults' UpdateCustomerSearchResults - Control full SubData List, select, show Info message not exist, Select Founded Record Customer_KeyDown - Keyboard Up/Down Event for Data listing in ListView Form Item/Input SelectCustomer_Enter - Selection by Enter MouseSelectCustomer_Click - Selection by Mouse SetXxxxxx - Set Joined Fields From this Selection Standard Methods For SubDocItems INSERT/DELETE (Invoice Example) dgSubListView_SelectionChanged - Select Item form List For Delete Control BtnItemInsert_Click - Insert new Item to SubDataList from SubFormInputFields BtnItemDelete_Click - Delete selected SubItem from DataList ClearItemsFields - Clear SubItemForm SetSubListsNonActiveOnNewItem - Load DataSources For SubItem Selections types (Dials -> ItemList, CurrencyList) Optional HideTiltButtons - Hide/Show Button for show subDocument TiltToInvoice_Click - Open subDocument Standard Tilt Documents (Next Joined Generating SubDoc Offer -> Order, etc) Standard Method List for full generation process ImportInvoice - Import Existed Document (example in CreditNoteList) PREPARED TEMPLATES FOR FAST DEVELOPING - Older was Modernized SYSTEM TEMPLATES FOR MAKE ANY TOUCH/IS/ETC. SYSTEM System HAS 4 Standard Data Form Types in Main Structure (System Templates) Implemented Forms for build Robust Any System TemplateListViewPage - show DATALIST ONLY, used in Login history list TemplateListPage - show DATALIST WITH DETAIL FORM, Standard Dials, used in Parameters, User, Roles, etc. TemplateListPageWithSubViewPage - show DATALIST WITH DETAIL FORM AND SUB TABLE DATAVIEW used in Currency agenda TemplateListPageWithSubPage - show DATALIST WITH DETAIL FORM AND SUB TABLE DATAVIEW + FORM used in invoice, order for work 2Tables HEADER/Items in One time System HAS 3 Form Types in Main Structure (All are in Templates) DATALIST ONLY - TemplateListViewPage Show Datalist only (Login history for example, views, etc..) DATALIST WITH DETAIL FORM - TemplateListPage Show Datalist and Detail Form for PAge Table ( Dials, Simple agendas with one primary table, etc...) SETTING - TemplateSettingsPage Customized Forms with unlimited posibilities,(Setting Form, special Form, special Page, Video, 3D, etc) In System are implemented multimedia templates (MultiMedia Templates) Implemented Special MultiMedia Forms TemplateDocumentViewPage - XPS,PDF,TXT,and more format direct viewer/Print TemplateSTLPage - Show 3D STL project TemplateVideoPage - Play MP4 Video player Supported next implementation GITHUB WPF TOOLS FOR SYSTEM IS / OS, HW can possible to implement for FREE API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } EASYBuilder Premade Templates For thinking, the development of tools and work with them worthy in the 21st century Pre-prepared templates are used to easily create a new agenda. Even if there are only a few of them, they are fully sufficient to create complex systems of more or less all types, not only IS Systems - for which 4 templates are enough, but also Special Systems, Media Systems, Management / BI, and many others. The system is nothing more than a list of very frequently repeated forms. And you simply click on the graphic builder, which is part of Visual Studio. And that's the entire development of the system. Here is a list of prepared templates in the system for more than n IS SYSTEM SystemTemplates - Media Templates --Older was modernized TemplateListViewPage - Displays only the DataList. For example access history, Detailed form is not even needed TemplateListPage - displays the DataList and the Detailed form both for displaying the list and editing the record. That is, the most common template where you just edit the fields according to the table. TemplateListPageWithSubViewPage - displays the DataList and Detail form + additional DataList sub items. For example, the current exchange rate for currency. So it is a system type of Template TemplateListPageWithSubPage - displays a DataList and a Detail Form + another DataList with a Detail Item Form. For example Invoice - Header + Items. And with these templates you can write, for example, the entire SAP. MultiMediaTemplates - Media Templates --Older was modernized TemplateVideoPage - Video player TemplateSTLPage - STL representation of a 3D object TemplateDocumentViewPage - Web browser that displays most file types PDF, Docx, TXT, PNG, JPG, etc. CustomTemplates - Custom templates - Just slanted forms after all TemplateSettingsPage - sample template for creating a unique form These types, which you can click on in Visual Studio in the case of necessity, will reveal all unique types of forms when he wants anything atypical Shared Agendas - Real Creation In the SharedAgendas folder you will find approx. 50 Agendas - all forms already created forms for immediate use or as an inspiration for the creation of new agendas. Code Examples https://learn.microsoft.com/cs-cz/samples/browse/?terms=xaml Literature https://www.c-sharpcorner.com/article/what-is-power-bi-report-builder-and-how-to-design-paginated-report-using-power-b/ https://github.com/majorsilence/My-FyiReporting/releases https://mahapps.com/api/MahApps.Metro.Controls/ https://helix-toolkit.github.io/ https://www.c-sharpcorner.com/UploadFile/mahesh/viewing-word-documents-in-wpf/ https://techcohere.com/post/Create-PDF-File-From-WPF-Window-using-iTextsharp-1001 https://www.c-sharpcorner.com/UploadFile/mahesh/viewing-word-documents-in-wpf/ https://github.com/xceedsoftware/wpftoolkit https://www.tutorialspoint.com/wpf/wpf_3d_graphics.htm Number Formats (For Parameters) https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings Manual Builder https://github.com/EWSoftware/SHFB/releases https://github.com/psoares33/FyiReporting-Docs/wiki all method in MainWindow from Agenda Page Example ((SchedulerPage)((MainWindowViewModel)DataContext).TabContents[0].Content).LoadScheduledTask(); Convert Project to ASPNETCORE project https://learn.microsoft.com/cs-cz/dotnet/core/porting/upgrade-assistant-overview?WT.mc_id=dotnet-35129-website dotnet tool install -g --add-source \"https://api.nuget.org/v3/index.json\" --ignore-failed-sources upgrade-assistant upgrade-assistant upgrade převod na web Connection string Example Server=192.168.1.35,1433;Database=db;User ID=user;Password=pw; Server=SQLSRV;DataBase=db;Trusted_Connection=True;Connect Timeout=30; Print example from CMD with parameters \"RdlReader.exe\" \"C:\\WorkListPrint.rdl\" -p \"&Search=%%&Id=0\" Report has dataset and you can insert field over right mouse/ insert / object / Expressions PageBreak ={PersonalNumber} - new page by each personalNumber functions in C# not MSSQL using =\"Filter:\" + Replace({?Search}, \"%\", \"\") - Search is param, replace %% for run report mut be set Default values for parameters =Fields!OperationNumber.Value + \" \" + {Note} =Sum({Amount}) Call from System Thread volani funkce ze stejneho vlakna this.Invoke(() => { if (ServiceStatus != Resources[\"running\"].ToString()) reloadScheduledTasks(); }); Set Collor Icon programmaticaly Application.Current.MainWindow.Icon = IconMaker.Icon(Colors.White); Remove opened Page programatically MetroWindow wnd = (MetroWindow)App.Current.MainWindow; TabablzControl tc = (TabablzControl)wnd.FindName(\"InitialTabablzControl\"); TabContent itc0 = (TabContent)tc.SelectedItem; tc.RemoveFromSource(itc0); rogram Help - Will be implemented Adding Help #region Help Added private DependencyObject CurrentHelpDO { get; set; } private Popup CurrentHelpPopup { get; set; } private bool HelpActive { get; set; } private MouseEventHandler _helpHandler = null; static bool isHelpMode = false; #endregion private void Window_PreviewMouseDown(object sender, MouseButtonEventArgs e) { if (isHelpMode && 1 == 0) { e.Handled = true; isHelpMode = false; Mouse.OverrideCursor = null; if (Help.MyHelpCommand.CanExecute(null, this)) { Help.MyHelpCommand.Execute(null, this); } } } private void winMain_MouseMove(object sender, MouseEventArgs e) { HitTestResult hitTestResult = VisualTreeHelper.HitTest(((Visual)sender), e.GetPosition(this)); if (hitTestResult.VisualHit != null && CurrentHelpDO != hitTestResult.VisualHit) { DependencyObject checkHelpDO = hitTestResult.VisualHit; string helpText = AutomationProperties.GetHelpText(checkHelpDO); while (String.IsNullOrEmpty(helpText) && checkHelpDO != null && checkHelpDO != mainWindow) { checkHelpDO = VisualTreeHelper.GetParent(checkHelpDO); helpText = AutomationProperties.GetHelpText(checkHelpDO); } if (String.IsNullOrEmpty(helpText) && CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; CurrentHelpDO = null; } else if (!String.IsNullOrEmpty(helpText) && CurrentHelpDO != checkHelpDO) { CurrentHelpDO = checkHelpDO; if (CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; } CurrentHelpPopup = new Popup() { PopupAnimation = PopupAnimation.Scroll, PlacementTarget = (UIElement)hitTestResult.VisualHit, IsOpen = true, Child = new Border() { CornerRadius = new CornerRadius(10), BorderBrush = new SolidColorBrush(Colors.Goldenrod), BorderThickness = new Thickness(2), Background = new SolidColorBrush(Colors.LightYellow), Child = new TextBlock() { Margin = new Thickness(10), Text = helpText.Replace(\"\\\\r\\\\n\", \"\\r\\n\"), FontSize = 14, FontWeight = FontWeights.Normal } } }; CurrentHelpPopup.IsOpen = true; } } } private void btnHelp_PreviewMouseDown(object sender, MouseButtonEventArgs e) { if (isHelpMode) { isHelpMode = false; Mouse.OverrideCursor = null; } } private void btn_LaunchHelp_Click(object sender, RoutedEventArgs e) { System.Windows.Forms.Help.ShowHelp(null, \"SIMTERM.chm\"); } private void ToggleHelp() { CurrentHelpDO = null; if (CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; } HelpActive = !HelpActive; if (_helpHandler == null) { _helpHandler = new MouseEventHandler(winMain_MouseMove); } if (HelpActive) { mainWindow.MouseMove += _helpHandler; } else { mainWindow.MouseMove -= _helpHandler; } ToggleHelp(mainWindow); } private void ToggleHelp(DependencyObject dependObj) { for (int x = 0; x < VisualTreeHelper.GetChildrenCount(dependObj); x++) { DependencyObject child = VisualTreeHelper.GetChild(dependObj, x); ToggleHelp(child); } if (dependObj is UIElement) { UIElement element = (UIElement)dependObj; if (HelpActive) { string helpText = AutomationProperties.GetHelpText(element); if (!String.IsNullOrEmpty(helpText)) { } } } } Developing Page Code Help /// <summary> /// Library with standardize Definitions and Methods For Develop Any System /// </summary> public class PageTemplatesCodeHelp { #region MyReStandartized Definitions /// <summary> /// Define Collection For ComboBox Example /// </summary> public ObservableCollection<Language> Languages = new ObservableCollection<Language>() { new Language() { Name = \"System\", Value = \"system\" }, new Language() { Name = \"Czech\", Value = \"cs-CZ\" }, }; #endregion MyReStandartized Definitions /// <summary> /// Special Method for input limitation as number only /// Its only for help /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private void NumberValidationTextBox(object sender, TextCompositionEventArgs e) { Regex regex = new Regex(\"[^0-9]+\"); e.Handled = regex.IsMatch(e.Text); } /// <summary> /// Example of Load System Parameters for Page /// Add Call this method Before LoadDatalist and Tilt Documents /// LoadParameters() will be later translating Detail Fields /// </summary> private async void LoadParameters() { string itemVatPriceFormat = await DataOperations.ParameterCheck(\"ItemVatPriceFormat\"); string documentVatPriceFormat = await DataOperations.ParameterCheck(\"DocumentVatPriceFormat\"); int intValue = int.Parse(await DataOperations.ParameterCheck(\"DocumentRowHeight\")); } /// <summary> /// Global Application Defined API Communication Types for Centralized using /// </summary> private async void DefinedAllAplicationApiComunicationTypes() { ///ApiUrls variable is List With All API calls ///DBResultMessage is Class for Global using of All API with all information of Request result DBResultMessage dBResult; /// Serialize Dataset for API sending INSERT/UPDATE TemplateClassList myRecord = new TemplateClassList(); string json = JsonConvert.SerializeObject(myRecord); StringContent httpContent = new StringContent(json, Encoding.UTF8, \"application/json\"); ///API for load/Select Data await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); ///API for Data Insert dBResult = await ApiCommunication.PutApiRequest(ApiUrls.GoldenSystemTemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Data Update dBResult = await ApiCommunication.PostApiRequest(ApiUrls.GoldenSystemTemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Delete Data dBResult = await ApiCommunication.DeleteApiRequest(ApiUrls.GoldenSystemTemplateClassList, \"someId\", App.UserData.Authentification.Token); } Developing Global MainWindow Code Help // <summary> /// Global Application available Methods for All Pages for Centralized using /// </summary> private async void DefinedGlobalMainWindowMethodsForAllPages() { ///Application Restart App.AppRestart(); ///ProgresRing for Wait indication MainWindow.ProgressRing = Visibility.Hidden; ///Show Info message await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\"); ///Show Confirm Dialog MessageDialogResult result = await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\" + \" \", true); if (result == MessageDialogResult.Affirmative) { } ///Method For Sett Language of Each Page Language defaultLanguage = JsonConvert.DeserializeObject<Language>(App.Setting.DefaultLanguage); ///_ = SystemOperations.SetLanguageDictionary(Resources, defaultLanguage.Value); } /// <summary> /// Global Specific Methods For Customized Working /// </summary> private async void UsedSpecificMethodsForCustomizedWorking() { #region Other Help Global Definitions and Methods ///Load Parameter From Table Parameters text is Parameter name var res = int.Parse(await DataOperations.ParameterCheck(\"someParameterName\")); ///Set ComboBox Item By myValue (from selected record or another) int index = 0; ComboBox cb_defaultLanguage = new ComboBox(); cb_defaultLanguage.Items.SourceCollection.Cast<Language>().ToList().ForEach(language => { if (language.Name == \"myvalue\") { cb_defaultLanguage.SelectedIndex = index; } index++; }); ///Open File Dialog OpenFileDialog dlg = new OpenFileDialog { DefaultExt = \".exe\", Filter = \"Exe files |*.exe\", Title = \"Resources[\\\"fileOpenDescription\\\"].ToString()\" }; if (dlg.ShowDialog() == true) { } #endregion Other Help Global Definitions and Methods } Customizing Page Code Help /// <summary> /// Customized GET Call /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private async void BtnApiTest_Click(object sender, RoutedEventArgs e) { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(\"someUrl\"); await MainWindow.ShowMessage(false, json); } catch (Exception ex) { await MainWindow.ShowMessage(true, \"Exception Error : \" + ex.StackTrace); } } } Classlist Type Examples - Recommended /// <summary> /// Typical Table schema for API which you copy from Generated Model in API Server /// On API server is Automatically generated by Scaffold command /// Class is Same as API result /// Example Load Data: listVariable = await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); /// </summary> public partial class ExampleClassList { public int Id { get; set; } = 0; public string SystemName { get; set; } = null; public string Description { get; set; } = null; public int UserId { get; set; } public bool Active { get; set; } public DateTime TimeStamp { get; set; } } /// <summary> /// Extend API Class with Custom Column in One dataset /// !!!SYSTEM CONDITION: Name must contain \"Extended\" /// !!!FOR NULL SET IN THE JOING FIELDS BEFORE SEND OVER API /// /// Move the fields with SAME NAME as Joined Table on API to ExtendedClass /// Will be set to 'null' Before API send /// /// Using: for Translation, Info about joined table, etc /// It must be cleaned by operation \"NullSetInExtensionFields\" before Database operation /// for disable join control on API for valid independent table /// Other is valid join key for other Tables /// </summary> public partial class ExtendedExampleClassList : TemplateClassList { public string Currency { get; set; } // its join to table Currency public string TotalCurrency { get; set; } public ExtendedExampleClassList() { } public ExtendedExampleClassList(ItemList ch) { foreach (var prop in ch.GetType().GetProperties()) { this.GetType().GetProperty(prop.Name).SetValue(this, prop.GetValue(ch, null), null); } } } /// <summary> /// WARNING: If you Add the field with Same Name as joined table in Database Model /// you must set this field as 'null' before send Insert / Update /// in HttpContent must Be as 'null' value other is taken as Data Join by API Server /// /// SIMPLE USING /// API Class is extended on root level by custom fields /// Example Load Data and Fill custom Fields: /// /// listVariable = await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); /// listVariable.ForEach(async rec => { rec.Translation = await DBOperations.DBTranslation(rec.SystemName); }); /// </summary> public partial class ExampleClassListWithLocalTranslation { public int Id { get; set; } = 0; public string SystemName { get; set; } = null; public string Description { get; set; } = null; public int UserId { get; set; } public bool Active { get; set; } public DateTime TimeStamp { get; set; } public string Translation { get; set; } = null; } System Info Message example private async void ComputerInfoClick(object sender, RoutedEventArgs e) { string message = nameof(Environment.MachineName) + \": \" + Environment.MachineName + Environment.NewLine + nameof(Environment.OSVersion) + \": \" + Environment.OSVersion + Environment.NewLine + nameof(Environment.ProcessorCount) + \": \" + Environment.ProcessorCount + Environment.NewLine + nameof(Environment.UserName) + \": \" + Environment.UserName + Environment.NewLine + Environment.NewLine; foreach (var ip in Dns.GetHostEntry(Dns.GetHostName()).AddressList) { if (ip.AddressFamily == AddressFamily.InterNetwork) { message += nameof(ip) + \": \" + ip.ToString() + Environment.NewLine; } } await MainWindow.ShowMessage(false, message, false); MarkDown Template Help"
  },
  "EASY-DATA/Docs/ESBTiskovéřešení.html": {
    "href": "EASY-DATA/Docs/ESBTiskovéřešení.html",
    "title": "",
    "keywords": "FYI Reporting - FreeWare Full Report Designer and Viewer for Printing All document Types with Images, Barcodes, EAN, QR, Graphs, SubReport, etc. IMPORTANT INFO FOR REPORT DEVELOP Reports are for developping setted Default Parameters. If the report is called from the system - All parameters are replaced by system sended params Each Report can has more Datasets (subreports not need for Header/Items Views) More Examples are Defined Full Developing of new reports are supported Included commandline Tool, Report Viewer, Report Designer JOINING WITH EASYSYSTEMBuilder - Calling Reports Directly - System sending these parameters directly to opening Report connectionString [Connect] - For Report connection to Database table name [TableName] - primary tablename from datalist record ID [Id] - Selected record Id Simple Search Parameter [Search] - For simple search in Datalist Fields Over DB - System save all filter informations to table 'ReportQueueList' and to all record with has selected Datalist Table. After Saving to DB is Called open Report. Its for Reports with using DB procedure 'ReportDataset' for Full DB defined Data Selections Direct parameters not need for this using EASYSYSTEMBuilder SYSTEM Conditions for Reports Connection String is Defined in setting for All reports in Application (Client) All APIUrls with 'List' word on end are automaticaly added for insert Report for this Table All System reports are Saved in Database - table 'ReportList' For Print is downloaded and open with direct params everyTime 'ReportQueueList' Definitions is second method for Print report, which the definition is full in DB (can be defined multi Datasets) Report can combine both method for Load Datasets (Over stored procedure or direct selection with params) Print Report Action you can set for Record Selection Only Unlimited Print Reports you Define for Primary Table - DataList System has these joins: Datalist, Rec ID, simple Search, Advanced Search Each join [param] can be separated for run alone or combined with others Full SQL and SQLexec are supported Print example from CMD with parameters \"RdlReader.exe\" \"C:\\WorkListPrint.rdl\" -p \"&Search=%%&Id=0\" Report has dataset and you can insert field over right mouse/ insert / object / Expressions PageBreak ={PersonalNumber} - new page by each personalNumber functions in C# not MSSQL using =\"Filter:\" + Replace({?Search}, \"%\", \"\") - Search is param, replace %% for run report mut be set Default values for parameters =Fields!OperationNumber.Value + \" \" + {Note} =Sum({Amount}) Print SQL Examples SET FMTONLY OFF; SELECT w.[Id],FORMAT([Date],'MM.yyyy') as Month, FORMAT([Date],'dd.MM.yyyy') as Date, CONCAT(FORMAT([Date],'MMyy'),w.[PersonalNumber]) as ListBreak, w.[PersonalNumber],o.[PartNumber],w.[WorkPlace],w.[OperationNumber], [WorkTime],[Pcs],[Amount],[WorkPower] ,[Name],[SurName],o.[Note] FROM [WorkList] w,[PersonList] p,[OperationList] o WHERE w.PersonalNumber = p.PersonalNumber AND w.WorkPlace = o.WorkPlace AND o.OperationNumber = w.OperationNumber AND (@Id = 0 AND ((LEN(@Search) > 2 AND w.Id LIKE @Search) OR LEN(@Search) = 2)) OR w.Id = @Id ORDER BY w.[Date] ASC, w.PersonalNumber, w.[OperationNumber] --Select with simple search and Id selection SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE 1=1 AND ( ( @Search <> '%%' AND id LIKE @Search ) OR ( @Search = '%%' AND @Id = 0 ) OR ( @Search = '%%' AND @Id <> 0 AND Id = @Id ) ) --Selection with direct params SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE 1=1 AND ( ( @Search <> '%%' AND id LIKE @Search ) OR ( @Search = '%%' AND @Id = 0 ) OR ( @Search = '%%' AND @Id <> 0 AND Id = @Id ) ) --Select with advanced Filter SET FMTONLY OFF; DECLARE @whereClause NVARCHAR(MAX) = @Filter ; DECLARE @sql NVARCHAR(MAX) = 'SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE @whereClause'; SELECT @sql = REPLACE(@sql, '@whereClause', @whereClause); EXEC sp_executesql @sql; --Selection with ReportQueueList definitions SET FMTONLY OFF; EXEC ReportDataset @TableName='tableName', @Sequence='SeqNr' --Selection with Formating and Dials Fields SET FMTONLY OFF; SELECT w.[Id],FORMAT([Date],'MM.yyyy') as Month, FORMAT([Date],'dd.MM.yyyy') as Date, CONCAT(FORMAT([Date],'MMyy'),w.[PersonalNumber]) as ListBreak, w.[PersonalNumber],o.[PartNumber],w.[WorkPlace],w.[OperationNumber], [WorkTime],[Pcs],[Amount],[WorkPower] ,[Name],[SurName],o.[Note] FROM [WorkList] w,[PersonList] p,[OperationList] o WHERE w.PersonalNumber = p.PersonalNumber AND w.WorkPlace = o.WorkPlace AND o.OperationNumber = w.OperationNumber AND (@Id = 0 AND ((LEN(@Search) > 2 AND w.Id LIKE @Search) OR LEN(@Search) = 2)) OR w.Id = @Id ORDER BY w.[Date] ASC, w.PersonalNumber, w.[OperationNumber] SYSTEM PRINTING On Print Request Updated all filters in table 'ReportQueueList' on records for selected table download from DB and open report with sended these params for Direct SQL support Params Search = Searched Value Id = Record Id from table Filter= Setted Filter command in sql syntax after WHERE clause TableName - selected table Name Connect - connection string from client settings 3) Run report. Done Report Types: Alone Report file with ful own SQL command and use params for selection. Examples You can see in edited reports, Instalation folder and Help Sql defined in ReportQueueList Table, in report is only command: SET FMTONLY OFF;EXEC ReportDataset @TableName='tablename', @Sequence='10' Parameters are sending Every Time, For Debuging you can use MSSQL SQL Profiller In database is Saved Stored Procedure: ReportDataset for folded filter, ReportQueueList table is managing All report are shared for selected database Each print is report again downloaded from database for new run Each report can be exported in Reports menu All reports are saved in instalation folder as Examples All reports has same parameters Dynamic Filtering: For managed SQL command can be 'Search' and 'Id' params ignored = Each Filter working independently Setted Priority: 1] Combined Filter 2] Id 3] Searched Value (searched columns are rardcoded in 'Filter' method on each Datalist) in Report must be hardcoded again in stored Procedure: 'ReportDataset' if Both Searfh and Id Ignored - Filter is aply alone else all cobndition are joined with 'OR' clause for Each Filter setting: 'Id' and 'Search' Its Prepared for future MultiRows Selection More Info Via Help File FYI Reporting Documentations on Github In one Report you can setted more DATALists = DB SELECTS (Invoice Example - Header/Item) and you can set any field over Report Parameter for using in all Report Positions MarkDown Item Template"
  },
  "EASY-DATA/Docs/ESBXMLCodeDocs.html": {
    "href": "EASY-DATA/Docs/ESBXMLCodeDocs.html",
    "title": "EasyITSystemCenter",
    "keywords": "EasyITSystemCenter Contents ApiUrls App #ctor() TiltReceiptDoc appRuntimeData log AppQuitRequest(silent) AppRestart() ApplicationLogging(ex,customMessage) ApplicationQuit() CurrentDomain_FirstChanceException(sender,e) InitializeComponent() Main() OnStartup(e) RootAppKeyDownController(sender,e) StartupLocaslWebServer() AppRuntimeData AppVersion Authentification BasicAttachmentListPage InitializeComponent() BasicCalendarListPage InitializeComponent() BasicCurrencyListPage InitializeComponent() BasicImageGalleryListPage ClearGallery() GrayscaleClick(sender,e) ImageChangesCancelClick(sender,e) InitializeComponent() LoadFromServer() RefreshViewPhoto(selectedPhotoId) SaveImageToServer(onlyThis) BasicItemListPage InitializeComponent() BasicUnitListPage InitializeComponent() BasicVatListPage InitializeComponent() BusinessAddressListPage InitializeComponent() BusinessBranchListPage InitializeComponent() BusinessCreditNoteListPage InitializeComponent() BusinessExchangeRateListPage InitializeComponent() BusinessIncomingInvoiceListPage InitializeComponent() BusinessIncomingOrderListPage InitializeComponent() BusinessMaturityListPage InitializeComponent() BusinessNotesListPage InitializeComponent() BusinessOfferListPage InitializeComponent() BusinessOutgoingInvoiceListPage InitializeComponent() BusinessOutgoingOrderListPage InitializeComponent() BusinessPaymentMethodListPage InitializeComponent() BusinessPaymentStatusListPage InitializeComponent() BusinessReceiptListPage InitializeComponent() BusinessWarehouseListPage InitializeComponent() ClientSettingsPage InitializeComponent() CommOperations CrashReporterSettings _ReportCrash DBJsonFile DBOperations DBTranslation(systemName,notCreateNew,comaList,lang) LoadOrRefreshUserData() LoadStartupDBData() LoadWaitingDataInSleepMode() SaveSystemFailMessage(message,logLevel) SetNonUserDataOnSuccessStartUp() DBResultMessage DataOperations NullSetInExtensionFields``1() ParameterCheck(parameterName) TranslateFormFields``1() DataViewSupport DeserializedJson DocSrvDocTemplateListPage InitializeComponent() DocSrvDocumentationCodeLibraryListPage InitializeComponent() DocSrvDocumentationGroupListPage InitializeComponent() DocSrvDocumentationListPage InitializeComponent() DocumentItemList FileOperations ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) CopyDirectory(directory) CopyFile(from,to) CopyFiles(sourcePath,destinationPath) CreateDirectory(directory) CreateFile(file) CreatePath(path) DeleteDirectory(directory) DeleteFile(file) FileDetectEncoding(FileName) LoadSettings() ReadFile(fileName) SaveSettings() UnicodeToUTF8(strFrom) VncServerIniFile(path) WriteToFile(file,content) FormOperations AnalphabetAndNumericOnlyValidated() DisplayAllToolTips_OnClick(userControl) NumberOnlyValidated() RemoveDisabledSpacesFromTextInput() GeneratedInternalTypeHelper AddEventHandler() CreateDelegate() CreateInstance() GetPropertyValue() SetPropertyValue() GraphsPage InitializeComponent() HardwareOperations ApplicationKeyboardMaping(e) HostWin32AppPage _appWin _iscreated _isdisposed exeName InitializeComponent() OnResize(e) OnSizeChanged(e) OnVisibleChanged(e) IconMaker Icon(color,iconPath) Info #ctor() #ctor() Body Title ProvideValue() InfoPopup BodyTextProperty HeaderTextProperty BodyText HeaderText HeaderTextPropertyChanged(d,e) InitializeComponent() Language LicSrvLicenseActivationFailListPage InitializeComponent() LicSrvLicenseAlgorithmListPage InitializeComponent() LicSrvUsedLicenseListPage InitializeComponent() MainWindow #ctor() lastUserAction DataGridSelected DataGridSelectedIdListIndicator DgRefresh DownloadShow DownloadStatus MultiSameTabsEnabled OperationRunning ProgressRing RunReleaseMode ServerLoggerSource ServiceRunning ServiceStatus ShowSystemLogger SystemLogger UserLogged VncRunning AddOrRemoveTab(headerName,tabPage,tagText) BtnKeyboardClick(sender,e) BtnShowLoggerClick(sender,e) Btn_LaunchHelp_Click(sender,e) Btn_ShowModulePanel_Click(sender,e) Btn_about_click(sender,e) CbFilterDropDownClosed(sender,e) CbPrintReportsSelected(sender,e) FilterField_SelectionChanged(sender,e) InitializeComponent() LoadUserMenu() MainGrid_IsDraggingChanged(sender,e) MainWindow_Closing(sender,e) MainWindow_KeyDown(sender,e) MainWindow_Loaded(sender,e) MainWindow_MouseLeave() Menu_action_Click(sender,e) Mi_filter_Click(sender,e) Mi_logout_Click(sender,e) RemoveFilterItem_Click(sender,e) SetServiceStop() SetSystemModuleListPanel() ShowLoginDialog() ShowMessageOnMainWindow(error,message,confirm) StringToFilter(filterBox,advancedFilter) SystemLoggerSourceChanged_Click(sender,e) SystemModulePanel_Click(sender,e) SystemTimerController(sender,e) TabPanelOnSelectionChange(sender,e) TiltOpenForm(translateHeader) MathTypeOperations CheckTypeValue() MediaOperations ArrayToImage(array) CreateImageFile(file,frame,fileType) GetImageImmediatelly(path) SaveAppScreenShot(MainWindow,returnArrayOnly) ProdGuidGroupListPage InitializeComponent() ProdGuidOperationListPage InitializeComponent() ProdGuidPartListPage InitializeComponent() ProdGuidPersonListPage InitializeComponent() ProdGuidWorkListPage InitializeComponent() ReportSelection Resources Culture ResourceManager no_photo ScreenSaverPage InitializeComponent() ServerBrowsablePathListPage InitializeComponent() ServerCorsDefAllowedOriginListPage InitializeComponent() ServerHealthCheckTaskListPage InitializeComponent() ServerLiveDataMonitorListPage InitializeComponent() ServerModuleAndServiceListPage InitializeComponent() ServerSettingListPage InitializeComponent() ServerToolPanelDefinitionListPage InitializeComponent() ServerToolPanelListPage InitializeComponent() ServerToolTypeListPage InitializeComponent() SolutionEmailTemplateListPage InitializeComponent() SolutionEmailerHistoryListPage InitializeComponent() SolutionFailListPage InitializeComponent() SolutionLanguageListPage InitializeComponent() SolutionMessageModuleListPage InitializeComponent() SolutionMessageTypeListPage InitializeComponent() SolutionMixedEnumListPage InitializeComponent() SolutionMottoListPage InitializeComponent() SolutionOperationListPage InitializeComponent() SolutionSchedulerListPage InitializeComponent() SolutionStaticFileListPage InitializeComponent() SolutionUserListPage InitializeComponent() SolutionUserRoleListPage InitializeComponent() SolutionWebsiteListPage InitializeComponent() SpTableList Startup SupportPage InitializeComponent() SystemCustomPageListPage InitializeComponent() SystemDocumentAdviceListPage InitializeComponent() SystemDocumentTypeListPage InitializeComponent() SystemGroupMenuListPage InitializeComponent() SystemIgnoredExceptionListPage InitializeComponent() SystemLocalEnumSets SpecificationScriptTypes languages sections updateVariants SystemLoggerHelper SystemLoggerWebSocketClass SystemLoginHistoryListPage InitializeComponent() SystemMenuListPage InitializeComponent() SystemModuleListPage InitializeComponent() SystemMonitorPage InitializeComponent() SystemOperationListPage InitializeComponent() SystemOperationMessage SystemOperations FilterToString(filterBox) FirstLetterToLower(str) GetExceptionMessages(exception,msgCount) GetExceptionMessagesAll(exception,msgCount) IncreaseFileVersionBuild() RandomString(length) RemoveAppNamespaceFromString(stringForRemoveNamespace) SendMailWithMailTo(address,subject,body,attach) SendMailWithServerSetting(message) SetLanguageDictionary(Resources,languageDefault) StartExternalProccess(type,processCommand,startupPath,arguments) SystemParameterListPage InitializeComponent() SystemReportListPage InitializeComponent() SystemReportQueueListPage InitializeComponent() SystemStatuses SystemSvgIconListPage InitializeComponent() SystemTranslatedTableList SystemTranslationListPage InitializeComponent() SystemWindowDataModel #ctor() TemplateClassListAutoDBTranslationPage InitializeComponent() TemplateClassListAutoDBTranslationViewPage InitializeComponent() TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() TemplateClassListAutoDBTranslationWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListAutoDBTranslationWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateClassListPage InitializeComponent() TemplateClassListViewPage InitializeComponent() TemplateClassListWithParentPage InitializeComponent() TemplateClassListWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateDocumentViewPage #ctor() dataViewSupport InitializeComponent() TemplateSTLPage dataViewSupport InitializeComponent() TemplateSettingsPage #ctor() Languages dataViewSupport BtnApiTest_Click(sender,e) InitializeComponent() TemplateVideoPage dataViewSupport InitializeComponent() TemplateWebViewPage #ctor() dataViewSupport InitializeComponent() TextBoxBehavior TiltTargets ToolsOperations AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) UpdateVariant UserData WebBannedIpAddressListPage InitializeComponent() WebCodeEditorPage InitializeComponent() WebCodeLibraryListPage InitializeComponent() WebCoreFileListPage InitializeComponent() WebDeveloperNewsListPage InitializeComponent() WebDocumentationCodeLibraryListPage InitializeComponent() WebDocumentationListPage InitializeComponent() WebGlobalPageBlockListPage InitializeComponent() WebGroupMenuListPage InitializeComponent() WebMenuListPage InitializeComponent() WebModulePage InitializeComponent() WebSettingListPage InitializeComponent() WebVisitIpListPage InitializeComponent() WelcomePage InitializeComponent() ApiUrls type Namespace EasyITSystemCenter.Api Summary ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions TODO From Table? App type Namespace EasyITSystemCenter Summary App #ctor() constructor Summary Application Global Exceptions Controls Definitions Parameters This constructor has no parameters. TiltReceiptDoc constants Summary Tilt Document types definitions appRuntimeData constants Summary Global Application Startup Settings Central Parameters / Languages / User / Configure TODO must centalize to Globall APP class log constants Summary System Core Needs Runtime Data For Working //TODO move to RuntimeData AppQuitRequest(silent) method Summary System or Quit Parameters Name Type Description silent System.Boolean AppRestart() method Summary System Restart Controller Parameters This method has no parameters. ApplicationLogging(ex,customMessage) method Summary Full Application System logging Running If is AppSystemTimer is Enabled for disable other processes exceptions Full Application logging to file if enabled and to DB for solving by Developers Supported Custom Message Here Is Filling Local System Logger for Developers Logging to Database Are All non Developer working Parameters Name Type Description ex System.Exception customMessage System.String ApplicationQuit() method Summary MainWindow Closing Handler for Cleaning TempData, disable AddOns / Tool and Third Party Software Closing Third Party processes Parameters This method has no parameters. CurrentDomain_FirstChanceException(sender,e) method Summary FullSystem Logging Every Exception types are monitored for maximize correct running all processes, System addOns, systems, communications, threads, network All detail of application system add all used possibilities Parameters Name Type Description sender System.Object e System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Main() method Summary Application Entry Point. Parameters This method has no parameters. OnStartup(e) method Summary Connected Starting Video Parameters Name Type Description e System.Windows.StartupEventArgs RootAppKeyDownController(sender,e) method Summary Keyboard Pointer to Central Keyboard Reaction Definitions Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs StartupLocaslWebServer() method Summary Local Web Server Controller Parameters This method has no parameters. AppRuntimeData type Namespace EasyITSystemCenter.GlobalClasses Summary !!!SYSTEM Global Runtime Monitor Definition For One Point monitoring For Processes and each other Definition For optimize the System Running TODO move All Central Definitions Here create Monitor Window for managing AppVersion type Namespace EasyITSystemCenter.Classes Summary Program version Class Authentification type Namespace EasyITSystemCenter.GlobalClasses Summary Class for User Authentication information BasicAttachmentListPage type Namespace EasyITSystemCenter.Pages Summary BasicAttachmentListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCalendarListPage type Namespace EasyITSystemCenter.Pages Summary BasicCalendarListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCurrencyListPage type Namespace EasyITSystemCenter.Pages Summary BasicCurrencyListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicImageGalleryListPage type Namespace EasyITSystemCenter.Pages Summary BasicImageGalleryListPage ClearGallery() method Summary Phycical clear local storage and form Parameters This method has no parameters. GrayscaleClick(sender,e) method Summary Images Effect Part Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs ImageChangesCancelClick(sender,e) method Summary Image Graphics Changes Controllers Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadFromServer() method Summary Last proccess Returns Parameters This method has no parameters. RefreshViewPhoto(selectedPhotoId) method Summary Parameters Name Type Description selectedPhotoId System.Nullable{System.Int32} selectedPhotoId -1 is Select Last SaveImageToServer(onlyThis) method Summary null For Full Folder else No of dbId, 0 = new Returns Parameters Name Type Description onlyThis System.Nullable{System.Int32} BasicItemListPage type Namespace EasyITSystemCenter.Pages Summary BasicItemListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicUnitListPage type Namespace EasyITSystemCenter.Pages Summary BasicUnitListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicVatListPage type Namespace EasyITSystemCenter.Pages Summary BasicVatListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessAddressListPage type Namespace EasyITSystemCenter.Pages Summary BusinessAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessBranchListPage type Namespace EasyITSystemCenter.Pages Summary BusinessBranchListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessCreditNoteListPage type Namespace EasyITSystemCenter.Pages Summary BusinessCreditNoteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessExchangeRateListPage type Namespace EasyITSystemCenter.Pages Summary BusinessExchangeRateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessMaturityListPage type Namespace EasyITSystemCenter.Pages Summary BusinessMaturityListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessNotesListPage type Namespace EasyITSystemCenter.Pages Summary BusinessNotesListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOfferListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOfferListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentMethodListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentMethodListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentStatusListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentStatusListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessReceiptListPage type Namespace EasyITSystemCenter.Pages Summary BusinessReceiptListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessWarehouseListPage type Namespace EasyITSystemCenter.Pages Summary BusinessWarehouseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ClientSettingsPage type Namespace EasyITSystemCenter.Pages Summary ClientSettingsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. CommOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Communication Operations as Console, Web Socket Plugins and Extensions communications CrashReporterSettings type Namespace EasyITSystemCenter.SystemConfiguration Summary Libreria condivisa _ReportCrash constants Summary FirstRun DBJsonFile type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DBOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised DBFunctions as Load DB Congig, System Dials (Language, Params) Another Db functions As Saving System Loging, Language Dictionary Autofiling DBTranslation(systemName,notCreateNew,comaList,lang) method Summary Centralised Method for Translating by DB Dictionary Service insert the news words for translate (After translate request) to Database Automaticaly with Empty Translate. Service return translate if is possible or requested word send back CamelCase ignored Default Language: CZ Returns Parameters Name Type Description systemName System.String notCreateNew System.Boolean comaList System.Boolean lang System.String LoadOrRefreshUserData() method Summary Centralised Method for Refresh All UserData params, for correct App running. Thinking for remove and new Load Actualy limited by DebugingHelpSetting Itr user After Succes User Login Parameters This method has no parameters. LoadStartupDBData() method Summary Startup Load System Parameters ,Languages, System Controlling, Server Setting Parameters This method has no parameters. LoadWaitingDataInSleepMode() method Summary Reload SYSTEM Dials When System Sleep For Non Blocking Work Was Problem For More Startup Saving and Reloading with Language List Parameters This method has no parameters. SaveSystemFailMessage(message,logLevel) method Summary Save Exception to DB Fail List (System Log) Write to System Logger Parameters Name Type Description message System.String logLevel System.String SetNonUserDataOnSuccessStartUp() method Summary SYSTEM: Set NonUser Startup Data for Correct Prepare System Its for All Status Possible NODB,OS,IS,Network,etc. For check ANY possible problems out of System Parameters This method has no parameters. DBResultMessage type Namespace EasyITSystemCenter.Api Summary Global API Definition of Result API calls for All Calling of Insert / Update / Delete DataOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized DataOperations as Cleaning dataset Language Dictionary Auto filing NullSetInExtensionFields``1() method Summary !!! SYSTEM RULE: ClassList with joining fields names must be nullable before API operation !!! ClassName must contain: \"Extended\" WORD Extension field in Class - Dataset must be set as null before Database Operation else is joining to other dataset is valid and can be blocked by fail key Its Check Extended in ClassName - SYSTEM RULE Returns Parameters This method has no parameters. Generic Types Name Description T ParameterCheck(parameterName) method Summary Return Requested User or if not exist default DB parameter CamelCase Ignored Returns Parameters Name Type Description parameterName System.String TranslateFormFields``1() method Summary !!! SYSTEM RULE: naming of automatic gtanslating fields must be type_fieldname fieldname is Translated Over DB List !!! Translation List is Automatic Filling For Logged Agendas Function using Referenced Objects Defined: Grid[label,button],Label, Button, EXTEND this Fuction for every Parent a Direct Types For One Function Translatings !!! Translate only Empty Contents Returns Parameters This method has no parameters. DataViewSupport type Namespace EasyITSystemCenter.Classes Summary Actual List Item informations for Controls each Page in MainView DeserializedJson type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DocSrvDocTemplateListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationGroupListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocumentItemList type Namespace EasyITSystemCenter.GlobalClasses Summary Univessal Document List (Item) for Offer,Order,Invoice FileOperations type Namespace EasyITSystemCenter.GlobalOperations ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary / Returns Parameters Name Type Description from System.String From. to System.String To. CopyFiles(sourcePath,destinationPath) method Summary Prepared Method for Files Copy Parameters Name Type Description sourcePath System.String destinationPath System.String CreateDirectory(directory) method Summary Creates the directory. Parameters Name Type Description directory System.String The directory. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The path. DeleteDirectory(directory) method Summary Deletes the directory. Parameters Name Type Description directory System.String The directory. DeleteFile(file) method Summary Deletes the file. Returns Parameters Name Type Description file System.String The file. FileDetectEncoding(FileName) method Summary Prepared Method for Get Information of File encoding UTF8,WIN1250,etc Returns Parameters Name Type Description FileName System.String LoadSettings() method Summary Application Startup Check and configure Data Structure in folder ProgramData And required files, load client configuration config.json Returns Parameters This method has no parameters. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. SaveSettings() method Summary Function for saving Application Configuration This is client configuration only Returns Parameters This method has no parameters. UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. VncServerIniFile(path) method Summary Generate ini file for start vns server default password: groupware Returns Parameters Name Type Description path System.String WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. FormOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised Forms Functions for work with Types, methods, Formats, Logic, supported methods AnalphabetAndNumericOnlyValidated() method Summary TextInput allowing Analphabetical and numeric character Only Parameters This method has no parameters. DisplayAllToolTips_OnClick(userControl) method Summary Secventional Show All Tooltips On Shown Objects in System Parameters Name Type Description userControl System.Windows.FrameworkElement NumberOnlyValidated() method Summary Text Input Allowing Numeric Characters Only Parameters This method has no parameters. RemoveDisabledSpacesFromTextInput() method Summary Removes the disabled spaces from referenced Inpout. Parameters This method has no parameters. GeneratedInternalTypeHelper type Namespace XamlGeneratedNamespace Summary GeneratedInternalTypeHelper AddEventHandler() method Summary AddEventHandler Parameters This method has no parameters. CreateDelegate() method Summary CreateDelegate Parameters This method has no parameters. CreateInstance() method Summary CreateInstance Parameters This method has no parameters. GetPropertyValue() method Summary GetPropertyValue Parameters This method has no parameters. SetPropertyValue() method Summary SetPropertyValue Parameters This method has no parameters. GraphsPage type Namespace EasyITSystemCenter.Pages Summary GraphsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. HardwareOperations type Namespace EasyITSystemCenter.GlobalOperations ApplicationKeyboardMaping(e) method Summary Application Keyboard controller Parameters Name Type Description e System.Windows.Input.KeyEventArgs HostWin32AppPage type Namespace EasyITSystemCenter.Pages Summary HostWin32AppPage _appWin constants Summary Handle to the application Window _iscreated constants Summary Track if the application has been created _isdisposed constants Summary Track if the control is disposed exeName constants Summary The name of the exe to launch InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. OnResize(e) method Summary Update display of the executable Parameters Name Type Description e System.Object Not used OnSizeChanged(e) method Summary Force redraw of control when size changes Parameters Name Type Description e System.Object Not used OnVisibleChanged(e) method Summary Create control when visibility changes Parameters Name Type Description e System.Object Not used IconMaker type Namespace EasyITSystemCenter.GlobalGenerators Summary System Online Icon Generator from custom Path Its for working with Icon over Database Dynamically Icon(color,iconPath) method Summary Generate Custom Icon from Defined Path Returns Parameters Name Type Description color System.Windows.Media.Color The color. iconPath System.String The icon path. Info type Namespace EasyITSystemCenter Summary A markup extension that returns a InfoPopup control preconfigured with header and text information according to the Title and Body properties. #ctor() constructor Summary Empty default constructor. Parameters This constructor has no parameters. #ctor() constructor Summary Inits the Info markup extension with title and body. Parameters This constructor has no parameters. Body property Summary Either a tooltips main text or a resource key that can be used to look up the text. Title property Summary Either a title text or a resource key that can be used to look up the title. ProvideValue() method Summary Performs a lookup for the defined Title and Info and creates the tooltip control. Returns A ToolTip that contains the InfoPopup control. Parameters This method has no parameters. InfoPopup type Namespace EasyITSystemCenter BodyTextProperty constants Summary The information to be displayed through the popup. HeaderTextProperty constants Summary An optional title to be displayed. May be omitted. BodyText property Summary A property wrapper for the BodyTextProperty dependency property: The information to be displayed through the popup. HeaderText property Summary A property wrapper for the HeaderTextProperty dependency property: An optional title to be displayed. May be omitted. HeaderTextPropertyChanged(d,e) method Summary A static callback listener which is being invoked if the HeaderTextProperty dependency property has been changed. Invokes the OnHeaderTextPropertyChanged instance method of the changed instance. Parameters Name Type Description d System.Windows.DependencyObject The currently processed owner of the property. e System.Windows.DependencyPropertyChangedEventArgs Provides information about the updated property. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Language type Namespace EasyITSystemCenter.Classes Summary Language definition support LicSrvLicenseActivationFailListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseActivationFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvLicenseAlgorithmListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseAlgorithmListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvUsedLicenseListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvUsedLicenseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. MainWindow type Namespace EasyITSystemCenter Summary MainWindow #ctor() constructor Summary System Core AND ALL shared functionalities Parameters This constructor has no parameters. lastUserAction constants Summary MainControls Screen Variables DataGridSelected property Summary Indicator for Enable New DataGrid Button DataGridSelectedIdListIndicator property Summary DataGrid have selected record indicator DgRefresh property Summary Indicator for enable Refresh Button Indicator DownloadShow property Summary Indicator for show Downloading area DownloadStatus property Summary Downloading of update status variable MultiSameTabsEnabled property Summary Enable/Disable MultiSameTabs Forms OperationRunning property Summary Indicator for mark operation status for any programmatic operations ProgressRing property Summary ProgressRing Visibility indicator RunReleaseMode property ServerLoggerSource property Summary System Logger Source Status and Controller This is status of Settings System Logger Source ServiceRunning property Summary Service Status description ServiceStatus property Summary Service Status public Variable ShowSystemLogger property Summary System Logger Activator by Setted Parametr Can be setted for All Apps or Every User individually SystemLogger property Summary System Online Logger for EASY developing UserLogged property Summary User Logged Status VncRunning property AddOrRemoveTab(headerName,tabPage,tagText) method Summary Tabs Pages control for Insert/Move/Change Pages Parameters Name Type Description headerName System.String tabPage System.Object tagText System.String BtnKeyboardClick(sender,e) method Summary System tools controllers Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs BtnShowLoggerClick(sender,e) method Summary Show System On line Logger Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_LaunchHelp_Click(sender,e) method Summary Help button controller for Show Help File Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_ShowModulePanel_Click(sender,e) method Summary Show Metro Theme possibilities Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_about_click(sender,e) method Summary about applications information Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs CbFilterDropDownClosed(sender,e) method Summary Full dynamic apply sett ed filter Parameters Name Type Description sender System.Object e System.EventArgs CbPrintReportsSelected(sender,e) method Summary Print Report Selection Controller Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs FilterField_SelectionChanged(sender,e) method Summary Full dynamic set sign DataGrid advanced filter type Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadUserMenu() method Summary Load UserMenu After Login And Sort Parameters This method has no parameters. MainGrid_IsDraggingChanged(sender,e) method Summary Dragging and separate to more Applications: TabPanel drag Controller - not Used Parameters Name Type Description sender System.Object e System.Windows.RoutedPropertyChangedEventArgs{System.Boolean} MainWindow_Closing(sender,e) method Summary Applications Close Request Controller Parameters Name Type Description sender System.Object e System.ComponentModel.CancelEventArgs MainWindow_KeyDown(sender,e) method Summary MainWindow Keyboard pointer to Keyboard Central Application controller Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs MainWindow_Loaded(sender,e) method Summary Application Loaded Start Backend timer for check server set Theme Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs MainWindow_MouseLeave() method Summary Writing Last User action for monitoring Free Time Used by: SceenSaver Parameters This method has no parameters. Menu_action_Click(sender,e) method Summary THIS IS AUTOMATIC INCLUDE DATALIST VIEW MENU in FORMAT APIcallPage open or select existed TabPanel VERTICAL MENU - Copy and CHANGE ONLY Page Name AND Report CALL as /XXXX Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_filter_Click(sender,e) method Summary Full dynamic Show/Hidden DataGrid advanced Filter Menu Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_logout_Click(sender,e) method Summary Application Logout button Controller Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs RemoveFilterItem_Click(sender,e) method Summary Full dynamic Remove Item from DataGrid advanced Filter Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SetServiceStop() method Summary Server is unavailable All operations are blocked Parameters This method has no parameters. SetSystemModuleListPanel() method Summary Set System Module Content Parameters This method has no parameters. ShowLoginDialog() method Summary Application Login Dialog Parameters This method has no parameters. ShowMessageOnMainWindow(error,message,confirm) method Summary Central Application Message Dialog for All Info / Error / other messages for User Returns Parameters Name Type Description error System.Boolean message System.String confirm System.Boolean StringToFilter(filterBox,advancedFilter) method Summary Full dynamic build filter on selected page from saved advanced filter Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox advancedFilter System.String SystemLoggerSourceChanged_Click(sender,e) method Summary System Logger Source Selector Server Logger has Source From Client Settings by WebSocket URL Parameters Name Type Description sender System.Object The source of the event. e System.EventArgs The EventArgs instance containing the event data. SystemModulePanel_Click(sender,e) method Summary Open Selected System Module Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SystemTimerController(sender,e) method Summary Backend System Timer for check server connection Parameters Name Type Description sender System.Object e System.Timers.ElapsedEventArgs TabPanelOnSelectionChange(sender,e) method Summary Tab click selection change reload ID and Pointers for ListView Buttons Parameters Name Type Description sender System.Object The sender. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TiltOpenForm(translateHeader) method Summary Tilts: Standardized Opening or create Tilt documents Returns Parameters Name Type Description translateHeader System.String MathTypeOperations type Namespace EasyITSystemCenter.GlobalOperations CheckTypeValue() method Summary Global DataTypes Chwecker with Bool Result Used on System Parameters Parameters This method has no parameters. MediaOperations type Namespace EasyITSystemCenter.GlobalOperations ArrayToImage(array) method Summary Cresate Bitmap Image from DB array to Image for show preview Returns Parameters Name Type Description array System.Byte[] CreateImageFile(file,frame,fileType) method Summary Create More Image File Types NotUsed Parameters Name Type Description file System.IO.FileStream frame System.Windows.Media.Imaging.BitmapFrame fileType System.String GetImageImmediatelly(path) method Summary Important Closing connections of openned files by Form and binding this is solution for close oppened file after load Solution for All Files Parameters Name Type Description path System.String SaveAppScreenShot(MainWindow,returnArrayOnly) method Summary ScreenShot Function For Application Menu Tool If Return Array True, Image is returned in response Other Save Dialog is Opened Parameters Name Type Description MainWindow EasyITSystemCenter.MainWindow The main window. returnArrayOnly System.Boolean ProdGuidGroupListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidOperationListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPartListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPartListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPersonListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPersonListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidWorkListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidWorkListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ReportSelection type Namespace EasyITSystemCenter.Classes Summary Report naming support Resources type Namespace EasyITSystemCenter.Properties Summary Třída prostředků se silnými typy pro vyhledávání lokalizovaných řetězců atp. Culture property Summary Potlačí vlastnost CurrentUICulture aktuálního vlákna pro všechna vyhledání prostředků pomocí třídy prostředků se silnými typy. ResourceManager property Summary Vrací instanci ResourceManager uloženou v mezipaměti použitou touto třídou. no_photo property Summary Vyhledává lokalizovaný prostředek typu System.Drawing.Bitmap. ScreenSaverPage type Namespace EasyITSystemCenter.Pages Summary ScreenSaverPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerBrowsablePathListPage type Namespace EasyITSystemCenter.Pages Summary ServerBrowsablePathListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerCorsDefAllowedOriginListPage type Namespace EasyITSystemCenter.Pages Summary ServerCorsDefAllowedOriginListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerHealthCheckTaskListPage type Namespace EasyITSystemCenter.Pages Summary ServerHealthCheckTaskListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerLiveDataMonitorListPage type Namespace EasyITSystemCenter.Pages Summary ServerLiveDataMonitorListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerModuleAndServiceListPage type Namespace EasyITSystemCenter.Pages Summary ServerModuleAndServiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerSettingListPage type Namespace EasyITSystemCenter.Pages Summary ServerSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelDefinitionListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelDefinitionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolTypeListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailTemplateListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailerHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailerHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionFailListPage type Namespace EasyITSystemCenter.Pages Summary SolutionFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionLanguageListPage type Namespace EasyITSystemCenter.Pages Summary SolutionLanguageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageModuleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageTypeListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMixedEnumListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMixedEnumListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMottoListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMottoListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionOperationListPage type Namespace EasyITSystemCenter.Pages Summary SolutionOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionSchedulerListPage type Namespace EasyITSystemCenter.Pages Summary SolutionSchedulerListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionStaticFileListPage type Namespace EasyITSystemCenter.Pages Summary SolutionStaticFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserRoleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserRoleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionWebsiteListPage type Namespace EasyITSystemCenter.Pages Summary SolutionWebsiteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SpTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Generated Class TableList from Stored Procedure SystemSpGetTableList Startup type Namespace EasyITSystemCenter Summary Local WebServwer Startup SupportPage type Namespace EasyITSystemCenter.Pages Summary SupportPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemCustomPageListPage type Namespace EasyITSystemCenter.Pages Summary SystemCustomPageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentAdviceListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentAdviceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentTypeListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemIgnoredExceptionListPage type Namespace EasyITSystemCenter.Pages Summary SystemIgnoredExceptionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemLocalEnumSets type Namespace EasyITSystemCenter.GlobalClasses SpecificationScriptTypes constants Summary TODO FOR MOVE TO MICRODIAL languages constants Summary Client Setting Offline enum of Languages sections constants Summary Client Setting offline enum Menu Groups updateVariants constants Summary Client Setting offline enum Updater States SystemLoggerHelper type Namespace EasyITSystemCenter.SystemHelper Summary System Logger Helper Defined Central WebSocket Monitor Controller SystemLoggerWebSocketClass type Namespace EasyITSystemCenter.SystemHelper Summary System Logger WebSocket Monitor Controller Class Definition For Centralized Using SystemLoginHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SystemLoginHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemModuleListPage type Namespace EasyITSystemCenter.Pages Summary SystemModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMonitorPage type Namespace EasyITSystemCenter.Pages Summary SystemMonitorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationListPage type Namespace EasyITSystemCenter.Pages Summary SystemOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationMessage type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures SystemOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised System Functions for work with Types, methods, Formats, Logic, supported methods FilterToString(filterBox) method Summary SYSTEM Advanced Filter Conversion for API return existing filter for saving to string in selected Page Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox FirstLetterToLower(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetExceptionMessages(exception,msgCount) method Summary Mining All Exception Information For Central System Logger Ignore Some selected Fails is possible by Ignored Exception Settings Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetExceptionMessagesAll(exception,msgCount) method Summary Mining All Exception Information For Local System Logger EveryTime Show All fails for Best Developing On Expert Level Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 IncreaseFileVersionBuild() method Summary Automatic Increase version System Ideal for small systems with more release in 1 day Increase Windows Correct 3 position for Widows Installation In Debug is increase last 4 position Returns Parameters This method has no parameters. RandomString(length) method Summary Generate Random String with defined length Returns Parameters Name Type Description length System.Int32 The length. RemoveAppNamespaceFromString(stringForRemoveNamespace) method Summary Its Solution for this is a solution for demanding and multiplied servers Or Running SHARP and Test System By One Backend Server Service API Urls with Namespaces in Name are for Backend model with More Same Database Schemas Backend Databases count in One Server Service is Unlimited Parameters Name Type Description stringForRemoveNamespace System.String SendMailWithMailTo(address,subject,body,attach) method Summary System Mail sending Parameters Name Type Description address System.String subject System.String body System.String attach System.String SendMailWithServerSetting(message) method Summary Email Sender for send Direct Email by Server Configuration for Testing Parameters Name Type Description message System.String The message. SetLanguageDictionary(Resources,languageDefault) method Summary Settings Local Application Translation dictionaries (Resources Files) for Pages Will be replaced by DBDictionary, but for Offline Running must be possible Returns Parameters Name Type Description Resources System.Windows.ResourceDictionary languageDefault System.String StartExternalProccess(type,processCommand,startupPath,arguments) method Summary System External Process Starter for Conrtalized Using Return the processId when is started or null TODO create process Monitor save the monitored procceses to System Monitor must be refactored actual status Returns Parameters Name Type Description type System.String processCommand System.String startupPath System.String The startup path. arguments System.String The arguments. SystemParameterListPage type Namespace EasyITSystemCenter.Pages Summary SystemParameterListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportQueueListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportQueueListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemStatuses type Namespace EasyITSystemCenter.GlobalClasses Summary !!SYSTEM Global Definition for System Statuses SYSTEM Running mode In debug mode is disabled the System Logger Visual Studio Debugger difficult operation has problem If you want you can enable SystemLogger by change to: DebugWithSystemLogger Its Used as String EveryWhere Its good Soution for Centarized Statuses of System Errors Are Saved In SystemLogger or Database SystemSvgIconListPage type Namespace EasyITSystemCenter.Pages Summary SystemSvgIconListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemTranslatedTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Class for Using as customized list the List of API urls for Central using in the system One Api is One: Dataview / Right / Report Posibility / Menu Item / Page Exist rules for automatic processing in System Core Logic for simple Developing SystemTranslationListPage type Namespace EasyITSystemCenter.Pages Summary SystemTranslationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemWindowDataModel type Namespace EasyITSystemCenter.SystemStructure #ctor() constructor Summary Its Solution For MultiInstance Application If The InterTab Is Enabled Can be Dragged Tab To the New Application Parameters This constructor has no parameters. TemplateClassListAutoDBTranslationPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListAutoDBTranslationWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateClassListPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateDocumentViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For View document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSTLPage type Namespace EasyITSystemCenter.Pages Summary TemplateSTLPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSettingsPage type Namespace EasyITSystemCenter.Pages Summary TemplateSettingsPage #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. Languages constants Summary Define Collection For Combobox dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages BtnApiTest_Click(sender,e) method Summary Customized GET Call Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateVideoPage type Namespace EasyITSystemCenter.Pages Summary TemplateVideoPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateWebViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For internet pages document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TextBoxBehavior type Namespace EasyITSystemCenter.ProgramaticXamlBehaviors Summary TextBox Behavior SelectAll on Focus Example of Link in XAML xmlns:behaviors=\"clr-namespace:EasyITSystemCenter.ProgramaticXamlBehaviors\" in TextBox Add behaviors:TextBoxBehavior.SelectAllTextOnFocus=\"True\" TiltTargets type Namespace EasyITSystemCenter.GlobalClasses Summary Tilt Document Types Definitions ToolsOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Library With Extension Functions Of Exterrnal Tools AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) method Summary Avaloneditor Content Search Function With HighLight Parameters Name Type Description searchQuery System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) method Summary AvalonEditor Replace Matched Strings in Editor Parameters Name Type Description sourceString System.String targetString System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean selectedonly System.Boolean UpdateVariant type Namespace EasyITSystemCenter.GlobalClasses Summary Global class for using Name/Value - Example Reports, Language and others UserData type Namespace EasyITSystemCenter.GlobalClasses Summary Basic user data for login WebBannedIpAddressListPage type Namespace EasyITSystemCenter.Pages Summary WebBannedIpAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeEditorPage type Namespace EasyITSystemCenter.Pages Summary WebCodeEditorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCoreFileListPage type Namespace EasyITSystemCenter.Pages Summary WebCoreFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDeveloperNewsListPage type Namespace EasyITSystemCenter.Pages Summary WebDeveloperNewsListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGlobalPageBlockListPage type Namespace EasyITSystemCenter.Pages Summary WebGlobalPageBlockListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebModulePage type Namespace EasyITSystemCenter.Pages Summary WebModulePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebSettingListPage type Namespace EasyITSystemCenter.Pages Summary WebSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebVisitIpListPage type Namespace EasyITSystemCenter.Pages Summary WebVisitIpListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WelcomePage type Namespace EasyITSystemCenter.Pages Summary WelcomePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters."
  },
  "EASY-DATA/Docs/ExpertDocConfiguration.html": {
    "href": "EASY-DATA/Docs/ExpertDocConfiguration.html",
    "title": "Using Configurations",
    "keywords": "Using Configurations in application is simple config/config.js file Hre you set One of 3 Modes for Using Editor Run in 3 Modes - Standalone Editor - direct download file from URL/Editor. Static Spa. Need Run from SecuritedWeb - Cors - filesEditor - Manager Loading directly files from \"data\" folder, setted in config - Managing documentations with manually rewrite exported files - apiManager - Managing Api docs from Server with automatic versioning, Using Modern Features & Ideas Expert editor for managing each type Markdown Documentation Extended for multiMedia using Graphs, Structures, etc for unlimited simple Using You can Define Custom Default Template You can Export Html, Pdf file with Any Language only one language Mardown file for Automatic Online Translation / Export to ALL Languages Can be used Offline, Only tlanslating in offline mode is not available Automatic Versioning of Files Open immediatelly write every Changes by each User Automatic Translating can build Universal Web for Doc Viewer. Need only Copy to Web Server for Publishing Automatic Multilingual Exporting Pdf and HTML. MD is in One Language - More Languages Not Needed By Auto Translation Only Api mode automatic Update Source Files (accesible from DB) other modes you must Export and replace Manually Can be Used for Documentations of Processes, Flows, Project, Developing of Everythink, Easy Way for Updating for Requested News by Clients With Generated Summary.md Will be CONVERT TO Doc Book with FullText Seraching and published as WebPages Running as Standalone Application, All OS Support Run By click on index.hml -- Static Pages, WebPages, PC Application Full Code is Available for Buy and unlimited Developing EASY Configurations Can run by Click on index.html Static Pages directly as EASY Media Editor Configuration Standalone is for Manage/Show Saved files Configuration Api is for Manage/Show Api files with Automatic Versioning configuration class definition { Name,AutoVersion,Description,TimeStamp} !!! Select One Of Settings Option !!! Run Only First setted Variant !!! FilesEditor Variant // default [] // example ['test.md','test1.md'] let ConfigFiles = ['helpFullEn.md','help_en.md','MerMaid.md']; Api Documentation Manager Variant let ConfigApiServer = { BasicAuthLoginName: 'tester', BasicAuthLoginPassword: 'tester', ServerApiAddress: 'http:127.0.0.1:5000' } Standalone Offine/Online/StaticSpa/RunByClick Editor Variant // its only Load MarkDown file from URL for Modify and Export // Cors need running Https // default null // example \"https://some.com/makdown.md\" let ConfigUrlMdFile = \"https://kliknetezde.cz:5000/tools/EDC_ESB_InteliHelp/src/README.md\"; Additional Configurations // Default Template file from \"config\" Folder let ConfigDefaultTemplate = \"defaultTemplate.md\"; // Automatic Export file on saving to memory let ConfigExportFileOnSaving = true; //Enable Creting new doc (API - full process, FileManager Creation) let ConfigEnableCreateNewDoc = true; // System message Show Time let ConfigSystemMessageShowTime = 5; //Its needed for multiple export let ConfigMermaidConvertOnExport = true; //TODO not used let ConfigSelectedLanguages = ['cs','en','de','fr']; // Preparing Time for Multiple Export let ConfigWaitingTimeInterval = 10; // Enablwe Automatic Translation on Startup let ConfigAutoMultiTranslateEnabled = true; // Return to Language After Multi Translation let ConfigReturnToLanguage = 'en'; Developer Using //show original help $(\"#Mavon\")[0].__vue__.s_help = true //mavon toolbar control $(\"#Mavon\")[0].__vue__.$root.toolbar.save = false //WebServer Configuration https://www.npmjs.com/package/http-server Developer Next Implement Visions TODO mermaid.mermaidAPI.getConfig() posibilities Now Shown FEW Examples of Creation Sctructures Documentations Headers # h1 Heading 8-) ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Alternatively, for H1 and H2, an underline-ish style: Alt-H1 ====== Alt-H2 ------ h1 Heading 8-) h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Alternatively, for H1 and H2, an underline-ish style: Alt-H1 Alt-H2 Emphasis Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ **This is bold text** __This is bold text__ *This is italic text* _This is italic text_ ~~Strikethrough~~ Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this. This is bold text This is bold text This is italic text This is italic text Strikethrough Lists 1. First ordered list item 2. Another item ??* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number ??1. Ordered sub-list 4. And another item. ???You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ???To have a line break without a paragraph, you will need to use two trailing spaces.?? ???Note that this line is separate, but within the same paragraph.?? ???(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) * Unordered list can use asterisks - Or minuses + Or pluses 1. Make my changes 1. Fix bug 2. Improve formatting - Make the headings bigger 2. Push my commits to GitHub 3. Open a pull request * Describe my changes * Mention all the members of my team * Ask for feedback + Create a list by starting a line with `+`, `-`, or `*` + Sub-lists are made by indenting 2 spaces: - Marker character change forces new list start: * Ac tristique libero volutpat at + Facilisis in pretium nisl aliquet - Nulla volutpat aliquam velit + Very easy! First ordered list item Another item ??* Unordered sub-list. Actual numbers don't matter, just that it's a number ??1. Ordered sub-list And another item. ???You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ???To have a line break without a paragraph, you will need to use two trailing spaces.?? ???Note that this line is separate, but within the same paragraph.?? ???(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) Unordered list can use asterisks Or minuses Or pluses Make my changes Fix bug Improve formatting Make the headings bigger Push my commits to GitHub Open a pull request Describe my changes Mention all the members of my team Ask for feedback Create a list by starting a line with +, -, or * Sub-lists are made by indenting 2 spaces: Marker character change forces new list start: Ac tristique libero volutpat at Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Very easy! Task lists - [x] Finish my changes - [ ] Push my commits to GitHub - [ ] Open a pull request - [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item [x] Finish my changes [ ] Push my commits to GitHub [ ] Open a pull request [x] @mentions, #refs, links, formatting, and tags supported [x] list syntax required (any unordered or ordered list supported) [ ] this is a complete item [ ] this is an incomplete item Ignoring Markdown formatting You can tell GitHub to ignore (or escape) Markdown formatting by using \\ before the Markdown character. Let's rename \\*our-new-project\\* to \\*our-old-project\\*. Let's rename *our-new-project* to *our-old-project*. Links [I'm an inline-style link](https://www.google.com) [I'm an inline-style link with title](https://www.google.com \"Google's Homepage\") [I'm a reference-style link][Arbitrary case-insensitive reference text] [I'm a relative reference to a repository file](../blob/master/LICENSE) [You can use numbers for reference-style link definitions][1] Or leave it empty and use the [link text itself]. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <http://www.example.com> and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later. [arbitrary case-insensitive reference text]: https://www.mozilla.org [1]: http://slashdot.org [link text itself]: http://www.reddit.com I'm an inline-style link I'm an inline-style link with title I'm a reference-style link I'm a relative reference to a repository file You can use numbers for reference-style link definitions Or leave it empty and use the link text itself. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later. Images Here's our logo (hover to see the title text): Inline-style: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\") Reference-style: ![alt text][logo] [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\" ![Minion](https://octodex.github.com/images/minion.png) ![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") Like links, Images also have a footnote style syntax ![Alt text][id] With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Here's our logo (hover to see the title text): Inline-style: Reference-style: Like links, Images also have a footnote style syntax With a reference later in the document defining the URL location: Footnotes Footnote 1 link[^first]. Footnote 2 link[^second]. Inline footnote^[Text of inline footnote] definition. Duplicated footnote reference[^second]. [^first]: Footnote **can have markup** and multiple paragraphs. [^second]: Footnote text. Footnote 1 link1. Footnote 2 link2. Inline footnote^[Text of inline footnote] definition. Duplicated footnote reference2. Code and Syntax Highlighting Inline `code` has `back-ticks around` it. Inline code has back-ticks around it. using System.IO.Compression; #pragma warning disable 414, 3021 namespace MyApplication { [Obsolete(\"...\")] class Program : IInterface { public static List<int> JustDoIt(int count) { Console.WriteLine($\"Hello {Name}!\"); return new List<int>(new int[] { 1, 2, 3 }) } } } @font-face { font-family: Chunkfive; src: url('Chunkfive.otf'); } body, .usertext { color: #F0F0F0; background: #600; font-family: Chunkfive, sans; } @import url(print.css); @media print { a[href^=http]::after { content: attr(href) } } function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=\"${cls}\"`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i < classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log('undefined'); } } export $initHighlight; require_once 'Zend/Uri/Http.php'; namespace Location\\Web; interface Factory { static function _factory(); } abstract class URI extends BaseURI implements Factory { abstract function test(); public static $st1 = 1; const ME = \"Yo\"; var $list = NULL; private $var; /** * Returns a URI * * @return URI */ static public function _factory($stats = array(), $uri = 'http') { echo __METHOD__; $uri = explode(':', $uri, 0b10); $schemeSpecific = isset($uri[1]) ? $uri[1] : ''; $desc = 'Multi line description'; // Security check if (!ctype_alnum($scheme)) { throw new Zend_Uri_Exception('Illegal scheme'); } $this->var = 0 - self::$st; $this->list = list(Array(\"1\"=> 2, 2=>self::ME, 3 => \\Location\\Web\\URI::class)); return [ 'uri' => $uri, 'value' => null, ]; } } echo URI::ME . URI::$st1; __halt_compiler () ; datahere datahere datahere */ datahere Tables Colons can be used to align columns. | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown | Less | Pretty --- | --- | --- *Still* | `renders` | **nicely** 1 | 2 | 3 | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | | Command | Description | | --- | --- | | git status | List all new or modified files | | git diff | Show file differences that haven't been staged | | Command | Description | | --- | --- | | `git status` | List all *new or modified* files | | `git diff` | Show file differences that **haven't been** staged | | Left-aligned | Center-aligned | Right-aligned | | :--- | :---: | ---: | | git status | git status | git status | | git diff | git diff | git diff | | Name | Character | | --- | --- | | Backtick | ` | | Pipe | \\| | Colons can be used to align columns. Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown Less Pretty Still renders nicely 1 2 3 First Header Second Header Content Cell Content Cell Content Cell Content Cell Command Description git status List all new or modified files git diff Show file differences that haven't been staged Command Description git status List all new or modified files git diff Show file differences that haven't been staged Left-aligned Center-aligned Right-aligned git status git status git status git diff git diff git diff Name Character Backtick ` Pipe | Blockquotes > Blockquotes are very handy in email to emulate reply text. > This line is part of the same quote. Quote break. > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. > Blockquotes can also be nested... >> ...by using additional greater-than signs right next to each other... > > > ...or with spaces between arrows. Blockquotes are very handy in email to emulate reply text. This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. Blockquotes can also be nested... ...by using additional greater-than signs right next to each other... ...or with spaces between arrows. Inline HTML <dl> <dt>Definition list</dt> <dd>Is something people use sometimes.</dd> <dt>Markdown in HTML</dt> <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd> </dl> Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags. Horizontal Rules Three or more... --- Hyphens *** Asterisks ___ Underscores Three or more... Hyphens Asterisks Underscores YouTube Videos <a href=\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\" target=\"_blank\"> <img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\"> </a> [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE) All Documentation Graphics Code Posibilities Full documentation Codes and posibilities are on MerMaid All Codes needs Copy / Paste Only of codes to code block erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" flowchart LR a --> b & c--> d flowchart LR a --> b & c--> d sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts <br/>prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d classDiagram Class01 <|-- AveryLongClass : Cool Class03 -- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 -- C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label classDiagram Class01 <|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label gitGraph commit commit branch develop commit commit commit checkout main commit commit gitGraph commit commit branch develop commit commit commit checkout main commit commit erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! title: Animal example classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } --- title: Animal example --- classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (excludes accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness<br/>and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest config: sankey: showValues: false sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 --- config: sankey: showValues: false --- sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end Footnote can have markup and multiple paragraphs.↩ Footnote text.↩↩"
  },
  "EASY-DATA/Docs/ExpertDockonfigurace.html": {
    "href": "EASY-DATA/Docs/ExpertDockonfigurace.html",
    "title": "Použití konfigurací",
    "keywords": "Použití konfigurací v aplikaci je jednoduchý soubor config/config.js Zde nastavíte jeden ze 3 režimů použití Editor běží ve 3 režimech - Samostatný editor - přímé stažení souboru z URL/Editoru. Statické lázně. Need Run from SecuritedWeb - Cors - filesEditor - Manager Přímé načítání souborů ze složky \"data\", nastavená v config - Správa dokumentace s ručně přepisovanými exportovanými soubory - apiManager - Správa dokumentů Api ze serveru s automatickým verzováním, Používání moderních funkcí a nápadů Expertní editor pro správu každého typu Markdown Documentation Rozšířeno pro multimédia pomocí grafů, struktur atd. pro neomezené jednoduché použití Můžete definovat vlastní výchozí šablonu Můžete exportovat Html, Pdf soubor s libovolným jazykem pouze jeden jazykový soubor Mardown pro automatický online překlad / export do VŠECH jazyků Lze použít offline, pouze tlanslating v režimu offline není k dispozici Automatické verzování souborů Otevřít okamžitě zapsat všechny změny každým uživatelem Automatický překlad může vytvořit Universal Web pro Doc Viewer. Pro publikování potřebujete pouze Kopírovat na webový server Automatický vícejazyčný export PDF a HTML. MD je v jednom jazyce – automatický překlad nepotřebuje více jazyků Pouze režim Api automaticky aktualizuje zdrojové soubory (přístupné z DB), ostatní režimy musíte exportovat a nahradit ručně Může být použit pro dokumentaci procesů, toků, projektů, vývoje všeho, Snadný způsob aktualizace požadovaných novinek ze strany klientů S Generated Summary.md bude PŘEVEDEN NA DOKUMENTÁCI s fulltextovým vyhledáváním a publikován jako webové stránky Spuštění jako samostatná aplikace, Veškerá podpora OS Spustit kliknutím na index.hml -- Statické stránky, webové stránky, PC aplikace Celý kód je k dispozici pro nákup a neomezený vývoj SNADNÉ konfigurace Lze spustit kliknutím na index.html Statické stránky přímo jako EASY Media Editor Samostatná konfigurace je pro správu/zobrazení uložených souborů Configuration Api je pro správu/zobrazování souborů Api s automatickým verzováním definice konfigurační třídy { Name,AutoVersion,Description,TimeStamp} -!!! Vyberte jednu z možností nastavení!!! Spustit pouze první nastavenou variantu !!! Varianta FilesEditor // výchozí [] // příklad ['test.md','test1.md'] let ConfigFiles = ['helpFullEn.md','help_en.md','MerMaid.md']; Varianta Api Documentation Manager nech ConfigApiServer = { BasicAuthLoginName: 'tester', BasicAuthLoginPassword: 'tester', ServerApiAddress: 'http:127.0.0.1:5000' } Samostatná varianta editoru Offine/Online/StaticSpa/RunByClick // jeho jediné Načtení souboru MarkDown z adresy URL pro úpravy a export // Cors potřebuje spustit Https // výchozí null // příklad \"https://some.com/makdown.md\" let ConfigUrlMdFile = \"https://kliknetezde.cz:5000/tools/EDC_ESB_InteliHelp/src/README.md\"; Další konfigurace // Výchozí soubor šablony ze složky \"config\". let ConfigDefaultTemplate = \"defaultTemplate.md\"; // Automatický export souboru při uložení do paměti let ConfigExportFileOnSaving = true; //Povolit vytvoření nového dokumentu (API - úplný proces, vytvoření správce souborů) let ConfigEnableCreateNewDoc = true; // Systémová zpráva Zobrazit čas let ConfigSystemMessageShowTime = 5; //Je potřeba pro vícenásobný export let ConfigMermaidConvertOnExport = true; //TODO se nepoužívá let ConfigSelectedLanguages = ['cs','en','de','fr']; // Čas přípravy na vícenásobný export nech ConfigWaitingTimeInterval = 10; // Povolení automatického překladu při spuštění nech ConfigAutoMultiTranslateEnabled = true; // Návrat do jazyka po vícenásobném překladu let ConfigReturnToLanguage = 'en'; Použití vývojáře //zobrazit původní nápovědu $(\"#Mavon\")[0].__vue__.s_help = pravda //ovládání panelu nástrojů mavon $(\"#Mavon\")[0].__vue__.$root.toolbar.save = false //Konfigurace webového serveru https://www.npmjs.com/package/http-server"
  },
  "EASY-DATA/Docs/ExpertDocumentWebServerCZ.html": {
    "href": "EASY-DATA/Docs/ExpertDocumentWebServerCZ.html",
    "title": "",
    "keywords": "Portál dynamické multimediální dokumentace Tento bohatý modul s Web Expert Manager & Viewer a Server je univerzální řešení pro SNADNOU správu jakékoli dokumentace Můžete vytvořit jakoukoli multimediální webovou publikaci vaší dokumentace A naprosto snadná správa všech vašich informací Možnosti správy dokumentace Vícejazyčné - Automatické překlady Vyřešte svůj dokument do všech jazyků jazyků AutoVersionig - Poslední aktualizace automatického verzování s informacemi Historie změn – všechny staré změny jsou uloženy AutoCleaningHistory - Můžete povolit ukládání pouze poslední verze MultiMedial Web Editor - MultiMedia Web Editor & Viewer jsou zahrnuty MultiMedial WINDWS Editor - Multimediální systém Windows je zahrnut Kompletní dokumentace k formátování - přes automatický překlad máte všechny informace o možnostech SNADNÉ Knihovna kódů a formátů – Všechny informace můžete spravovat prostřednictvím knihovny kódů Všechny jazyky Word jsou možné Export všech vybraných jazyků do vybraného formátu jedním kliknutím Automatická konverze na webové stránky HTML Automatický převod na soubory dokumentace MD Automatický převod na obrázky Jazykové možnosti dokumentace Možnosti formování dokumentace Dokumentace Možnosti automatického exportu Web Manager má funkci MultiExport Pro export ve všech jazycích a dalších formátech Úplnou dokumentaci můžete exportovat jedním kliknutím do více vybraných jazyků ve vybraném formátu... Máte připravená data během několika sekund jedním kliknutím Po exportu lze použít jako: - Přizpůsobte MultiMedial Webportal -Automaticky generovaný MD Inteligentní fultextový vyhledávací webový portál - Soubory webových stránek HTML pro vložení na jiné webové stránky, sociální sítě, e-mail, - Soubory dokumentace MD pro vložení na jiné webové stránky, sociální sítě, e-mail, - Soubory obrázků pro vložení na jiné webové stránky, sociální sítě, e-mail, Dokumentace Možnosti webového portálu"
  },
  "EASY-DATA/Docs/ExpertDocumentWebServerEN.html": {
    "href": "EASY-DATA/Docs/ExpertDocumentWebServerEN.html",
    "title": "",
    "keywords": "Server Dynamic MultiMedial Documentation Portal This rich module with Web Expert Manager & Viewer And Server is Universal Solution For EASY Managing Any Documentation You Can create Any MultiMedial Web Publication of Your Documentation And absolute easy Manage All your Informations Documentation Managing Posibilities MultiLingual - Automatic Translations Solve Your Doc To All words Languages AutoVersionig - Automatic Versioning With Info last update Changes History - All Old Changes are saved AutoCleaningHistory - You can Enable Saving Only Last Version MultiMedial Web Editor - MultiMedia Web Editor& Viewer are Included MultiMedial WINDWS Editor - Multimedial Windows System are Included Full Formating Documentation - Over Automatic translating yo have all info about posibilities EASY Codes&Formatin Library - You can manage All Info over Code Library All Word Languages are possible All Selected Languages to Selected Format Export by One Click Auto convert to Html Webpages Auto convert to MD Documentation files Auto convert to Images Documentation Languages Posibilities Documentation Formating Posibilities Documentation AUTO Exporting Posibilities Web Manager has MultiExport functionality For Exporting in Any Languages and More Formats You can Export FullDocumentation By One Click To More Selected Languages in Selected Format... You have Prepared Data in Few Second By One Click After Export can Be used as: - Customize MultiMedial Webportal -Auto Generated MD Inteligent Fultext Search Documentation Web Portal - HTML Webpage Files for Insert to Another WebPages, Social, Email, - MD Documentation Files for Insert to Another WebPages, Social, Email, - Images Files for Insert to Another WebPages, Social, Email, Documentation Web Portal Posibilities"
  },
  "EASY-DATA/Docs/GlobálníFunkce.html": {
    "href": "EASY-DATA/Docs/GlobálníFunkce.html",
    "title": "",
    "keywords": "Typy Globálních Operací/Funkcí Datové Operace DB Operace Souborové Operace Hardwarové Operace Matematické Operace Mediální Operace Systémové Operace IMPLEMENTED TOOLS 05.12.23 Automatický Překlad Fpopisů Formuláře Vznikla první agenda s automaticky překládanými poli Úkol, aktualizovat všechny existující aonliner agendy na automatický překlad - Automatický Překlad sbírá pomocí funkce \"TranslateFormFields\" všechny Popisky-LAbel typy a Button Tlačítka Typy a překládá je oproti DB překladovému seznamu - Odpadá nutnost vupisovat typy polí - POZOR toto je možné jen preo ONLINE AGENDY seznam je načítaný ze serveru - Další Varianta Překladu je pomocí ruční definice popisku z názvu - použije \"fileType\" pro překlad *DBOperations.DBTranslation(lbl_fileType.Name.Split('_')[1]) nebo přes lokální Slovníky \"Languages\" pro použití OffLine * lbl_fileType.Content = Resources[\"fileType\"].ToString() - Menu je Celé kromě volby Nastavení Klienta zmeněno na automatický překlad DB slovníku - Odpadá nutnost kvůli nové online agendě importovat slovníky - Slovníky lze Generovat z Backendu a Vložit Do projektu Systému pro Offline Použití - Použité Jazyky CS,EN, neomezená možnost jednoduchého rozšíření Lang Tabulky"
  },
  "EASY-DATA/Docs/GrafickéUkázky.html": {
    "href": "EASY-DATA/Docs/GrafickéUkázky.html",
    "title": "",
    "keywords": "All Documentation Graphics Code Posibilities Full documentation Codes and posibilities are on MerMaid All Codes needs Copy / Paste Only of codes to code block erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" flowchart LR a --> b & c--> d flowchart LR a --> b & c--> d sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts <br/>prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d classDiagram Class01 <|-- AveryLongClass : Cool Class03 -- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 -- C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label classDiagram Class01 <|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label gitGraph commit commit branch develop commit commit commit checkout main commit commit gitGraph commit commit branch develop commit commit commit checkout main commit commit erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! title: Animal example classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } --- title: Animal example --- classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (excludes accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness<br/>and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest config: sankey: showValues: false sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 --- config: sankey: showValues: false --- sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end"
  },
  "EASY-DATA/Docs/KonfiguraceServeru.html": {
    "href": "EASY-DATA/Docs/KonfiguraceServeru.html",
    "title": "",
    "keywords": "public partial class ServerConfigSettings { #region Emailer Service /// /// Service email, for info about not available service from HeatchCheck Can be used for /// next Develop, automatic checking problems, missing data and all other Its Necessary for /// Correct running Server Internal Core Monitoring /// public static string EmailerServiceEmailAddress { get; set; } = \"Libor.Svoboda@GroupWare-Solution.Eu\"; /// /// SMTP Server Address for Login to External Mail Server Its Necessary for Correct running /// Server Internal Core Monitoring /// public static string EmailerSMTPServerAddress { get; set; } = \"imap.groupware-solution.eu\"; /// /// SMTP Port for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static int EmailerSMTPPort { get; set; } = 25; /// /// EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its /// Necessary for Correct running Server Internal Core Monitoring /// public static bool EmailerSMTPSslIsEnabled { get; set; } = false; /// /// SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static string EmailerSMTPLoginUsername { get; set; } = \"backendsolution@groupware-solution.eu\"; /// /// SMTP Password for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static string EmailerSMTPLoginPassword { get; set; } = \"password\"; #endregion Emailer Service #region Server Database /// /// Server Database Connection string for Full Service of Database /// Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for /// Read/Write/Exec is enabled /// public static string DatabaseConnectionString { get; set; } = \"Server=127.0.0.1;Database=EASYDATACenter;Trusted_Connection=True;TrustServerCertificate=True\"; /// /// Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic, /// Duplicit Functionality with Database Server in complex process can generate problems /// Recommended: false /// public bool DatabaseInternalCachingEnabled { get; set; } = false; /// /// Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with /// Database Server /// Recommended: 30 /// public int DatabaseInternalCacheTimeoutMin { get; set; } = 30; #endregion Server Database #region Server Future Technologies /// /// Server Service Name automatic figured in All IS/OS/Engines info /// Recommended: EASYDATACenter /// public static string SpecialServerServiceName { get; set; } = \"EASYDATACenter\"; /// /// User Web Root Path for Startup /// and Any missing address Automatic Redirection /// Not need Regex Configuration /// public string SpecialUserWebRootPath { get; set; } = \"/Dashboard\"; /// /// Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write /// to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All /// incorrect server statuses are monitored) Can be writen to Database - !!! Warning for /// infinite Cycling (DB shutdown example) /// Recommended: true /// public static bool SpecialCoreCheckerEmailSenderActive { get; set; } = false; /// /// Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets, /// For Optimize Traffic. For Example LanguageList - Static table with often reading /// Recommended: true - functionality must be implemented in Server Code /// public static bool SpecialUseDbLocalAutoupdatedDials { get; set; } = false; /// /// Server Language for Translating Server internal statuses /// Recommended: cz or en - other languages are not implemented /// public static string SpecialServerLanguage { get; set; } = \"cz\"; /// /// Server support mass emailing as Service /// You can enable Mass Email Api /// public static bool SpecialEnableMassEmail { get; set; } = true; #endregion Server Future Technologies #region ServerConfigurationServices /// /// Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API /// Controler and WebPages /// Recommended: 5000 /// public static int ConfigServerStartupPort { get; set; } = 5000; /// /// WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any /// communication socket is closed Set according to your need /// Recommended: 2 /// public static double ConfigWebSocketTimeoutMin { get; set; } = 2; /// /// Maximum socket message size for control Traffic /// Recomended: 10 /// public static int ConfigMaxWebSocketBufferSizeKb { get; set; } = 10; /// /// Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After /// Timeout connection Must Login Again. It is as needed. You Can Change Key for close All /// connections Immediately. Timeout is good for Webpages /// Recomended: 15 /// public static double ConfigApiTokenTimeoutMin { get; set; } = 15; /// /// Setting for Server URL Services. Logically can run only one Http or Https Server has /// more Security Setting Politics. /// Recommended: true /// public static bool ConfigServerStartupOnHttps { get; set; } = true; /// /// Setting for Automatic Obtain Lets Encrypt /// more Security Setting Politics. /// Recommended: true /// public static bool ConfigServerGetLetsEncrypt { get; set; } = false; /// /// Its Domain for include to Automatic Generated Certificate For Server running on HTTPS. /// Domain is for Your validation Certificate Domain. Can be Changed for commercial. /// Domain is Used for Lets Encrypt also /// Write with Comma separator /// Recommended: 127.0.0.1 /// public static string ConfigCertificateDomain { get; set; } = \"127.0.0.1\"; /// /// Password will be inserted to Server Generated Certificate for HTTPS. /// Recommended: empty = Maximal Security Randomly generated 20 chars string /// public static string ConfigCertificatePassword { get; set; } = ServerCoreFunctions.RandomString(20); /// /// Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each /// Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its /// AntiHacker Security Rule /// Recommended: empty = Maximal Security Randomly generated 40 chars string /// public static string ConfigJwtLocalKey { get; set; } = ServerCoreFunctions.RandomString(40); #endregion ServerConfigurationServices #region Server Engines /// /// Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using: /// Example for machine connection Or is Control last activity /// public static bool ServerTimeTokenValidationEnabled { get; set; } = false; /// /// Enable Razor WebPages support engine with Correct Configuration for Automaping form /// folder 'Pages' /// public static bool ServerRazorWebPagesEngineEnabled { get; set; } = true; /// /// Enable Mvc WebPages support engine with Correct Configuration /// public static bool ServerMvcWebPagesEngineEnabled { get; set; } = true; /// /// Enable JS WebPages support engine with Correct Configuration /// React, Nodejs, etc.. /// public static bool ServerJsWebPagesEngineEnabled { get; set; } = false; /// /// Definition of WebPage Startup npmscript command /// React, Nodejs, etc.. /// public static string ServerJsWebStartupCommand { get; set; } = \"start\"; /// /// Enable WebSocket Engine with Default Example Api Controller /// public static bool ServerWebSocketEngineEnabled { get; set; } = true; /// /// Enable FTP File Server oppened for every connection with full rights /// public static bool ServerFtpEngineEnabled { get; set; } = true; /// /// Enable FTP Security /// For access to FTP must be logged /// public static bool ServerFtpSecurityEnabled { get; set; } = true; /// /// Enable WebPages File Browsing from server Url on Server /// public static bool ServerWebBrowserEnabled { get; set; } = true; /// /// Server support online multi watch Logging /// Its Run on Websocket and the Log Messages are /// sent for All opened connections for wathing /// on Path: ServerCoreMonitor /// You can enable Mass Email Api /// public static bool ServerEnableWebSocketMonitor { get; set; } = true; #endregion Server Engines #region Server Modules /// /// Special Function: Server Automatically Generate Full Documentation of API structure AND /// Database Model. Plus Included API Interface for Online Testing All API Methods with /// Authentication Its Automatic Solution for Third Party cooperation. All changes are /// Reflected after restart server /// public static bool ModuleSwaggerApiDocEnabled { get; set; } = true; /// /// Special Function: AutoGenerated Database DataManager for working with Data Running only /// in Debug mode for simple Develop, can be modified. All changes are Reflected after /// restart server /// public static bool ModuleDataManagerEnabled { get; set; } = true; /// /// Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, /// Over Net can Control Other Company Services Also as Central Control Point With Email /// Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment /// Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health /// public static bool ModuleHealthServiceEnabled { get; set; } = true; /// /// Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, /// Over Net can Control Other Company Services Also as Central Control Point With Email /// Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment /// Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without /// HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/ /// public static int ModuleHealthServiceRefreshIntervalSec { get; set; } = 30; /// /// Enable Server Structure Documentation for Developers Using RootPath, - Block File /// Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy /// \"Only HTML\" /// public static bool ModuleMdDocumentationEnabled { get; set; } = true; /// /// Enable Automatic Database Diagram for Simple show Database structure with All bingings /// public static bool ModuleDbDiagramGeneratorEnabled { get; set; } = true;"
  },
  "EASY-DATA/Docs/LogikaaStuktura.html": {
    "href": "EASY-DATA/Docs/LogikaaStuktura.html",
    "title": "",
    "keywords": "SYSTEM PROJECT STRUCTURE - DECRIPTION APP Initialization Starting APP with Welcome Page by JSON Setting Initialize Technologies Including Core Styles and themes Set Global Properties Set Global DataLists (Parameters, Setting, Tilts, System Classes, UserData, Erroer Handlers, API Security, etc) Set CrashReporting join Welcome Page - Video Start Page with Mottos MainWindow - Central System Core Point where are All Global Shared methods for system core running LOGICAL HARD DEFINED SYSTEM STRUCTURE Namespaces Pages - ALL Agendas must BE in PAGES ALL 3 TYPED FORMS (Defined in Templates) Classes - EACH AGENDA has 2 FILES - CLASS WITH DB/BACKEND/CUSTOMIZED Class AND XAML FORM API Communications - Class File with API Definitions, All API URLs for communication with Backend, Response format, System Auth GET,POST,PUT,DELETE universal API Cals for full system (All agendas) - Communication control other Logics rules Are implemented in DB Structure - Foreign keys, Views, Procedures GLOBAL Styles - Styles for standardized show vies, form, menu, other or custom controls, inputs, list, menu, etc. GLOBAL Classes - Universal System Classes for correct work SYSTEM CORE -Parameters, Tilt Types, universal Doc Class, Server Set class, etc... GLOBAL Functions -MediaFunctions - Special methods for file formats work, mailSend, images functions, Project Version, System Dictionaries -FileFunctions - COPY,SAVE,DELETE,CHECK Files/Directories, etc. -ServerCoreFunctions - System Parameters, Advanced Filter Generator, etc. Languages Folder for XAML Language Files Manual Folder - WIN Developer Auto generated Help Files with All Core Reviews (F1 - Only for Developers) Generated by External OXYGEN TAB&SYSTEM - Methods and Definitions for CORE Graphics of SYSTEM Builder Tab control, definitions, models, crashReport, Delegates, Theme/Color Control, System Updater, Help etc. Data Folder - External image files, json, and all others external files, examples for system AGENDAS - Folder With All Agendas (Each Form=Agenda has unique defined format -> Class + Xaml Template Form or you can create custom any form) EACH Created FORM is AGENDA - EXAMPLE Calendar - One Table, unique (SETTING TYPE PAGE) Form All agendas you can create from SYSTEM Templates which existed in system. Its prepared for build Robust System, Multimedia system, Terminals, Etc. MarkDown Item Template"
  },
  "EASY-DATA/Docs/PopisZměnaVývoje.html": {
    "href": "EASY-DATA/Docs/PopisZměnaVývoje.html",
    "title": "",
    "keywords": "Projects Legend EB = EASYBuilder ED = Golden SD = EASYBuilderDataCenter SP = EASYBuilder application I = Install file DB = Database Each changes IN EB/SP can be deployed to the second program Each changes IN ED/SD can be deployed to the second program Project/Program Install file are for absolute simple Installation with all Dependencies Documentation And Software for Testing you find on https://groupware-solution.eu/webdav/Marketing/ login: marketing/marketing ALL Applications Prepared for Simple Installation / Buy in more installation Types - by user friendly Install file and License Server Application Clones FE + BE LicenseSrv - MultiOS License Server with listen API GET/POST server / generate Unlimited Static/Dynamic CODES and Client for managing PRUVODKY - Windows XP+ Implementation Production Guides for Production Companies For Office / Touch Panels using with unlimited Clients and printing possibilities ShoPingER - Windows XP+ MultiBranch Offer/Order/Invoice System with multimedia Files Supported with Unlimited Clients and Printing possibilities LicenceShoper - MultiOS License Server PLUS Windows XP+ MultiBranch Invoice system [LicenseSrv + ShoPingER] SOLUTION MAIN PARTS EASYBuilder Developing C# WPF Visual Studio Project With MustiVariable Menu Settings, With All DataForm Template types DATAView / DATADetail / With SubDATAview / With SubFullDataDetail / 3D / Document / Video for Build ANY Information / Multimedia / Control / Flow / Reporting and More Systems FOR NEXT COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO - Project LICENSE Golden - Universal Secure MultiPlatform MultiDATABASE Backend Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURE / SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR NEXT COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO - Project LICENSE FYI Reporting - FreeWare Full Report Designer and Viewer for Printing All document Types / Barcodes, EAN, QR, Graphs, SubReport, etc. SW Date Version Speed Development Description by one man Only EB/SP/I 1.12.2022 1.5.78.925 Start of Developing steps describing EB 1.12.2022 Added Link for FyiReportink 100 Examples to Help_Commands EB/SP/I 1.12.2022 1.5.78.944 Implemented DB Connection string to settings for All Report as param, centralized EB/SP 1.12.2022 Implemented new TreeView Menu for much more menu items in Menu SD/SP 1.12.2022 Implemented CurrencyList, UnitList, AddressList ItemList Agendas EB/SP 1.12.2022 Implemented Copy menu button for copy Each record in listview SD 1.12.2022 Describe existing API call to documentation EB/SP 2.12.2022 Changed Settings for much more application menu Types and implemented new Menu EB/SP 2.12.2022 1.5.78.954 Publish new version EASYBuilder installers on Google/WebDav/WebSite EB/ED/SD/SP 2.12.2022 Publish Development Info on WebSite And Marketing EB/SP 3.12.2022 Repaired filtering on null values EB/SP 3.12.2022 Centralized load Report List Control from ApiUrl definition List for these addresses SD 3.12.2022 Create TemplateList Table to 15.12.2022 5 Applications Created IN 14 DAYS WITH 20-40 DB tables / Agendas in ONE MAN ONLY 2023.07.07 FAST REcapitulation Exist Few Tasks For Better Settings Maily for EASY SYSTEM BUILDER (SET Full Automatic Translating for Example) But Yesterday Will Be Regenerated Older EDC & ESB Clones Over Automatized Solutions. EDC now MULTI Server (GroupWare Solution) Has Own System Clone As Basic Server Manager - Any Interest of This Solution (its not normal) Server for Testing With Posible FUNCTIONalities most Than commercial Products I have Problem Find Normal Work as alone Developer So in Week Will start The EASY-DATA-CENTER (Backend API from Start, but now + Media,Multi Web,FTP,Socket,DOCs,Emailing,HealthCheck, etc With Absolute News In WORLD) example: Remote Monitoring internal logger of Server over WebSocet, Automatic Translation Table Filler by First World Using in System and much more So News Are In Video, New Full Agenda from DB to System is Finished in 5min - Copy Similar To 5 Hours - Complicated for More Joing Example OCR for Max 2 Days For Implmenent almost perfect Solution for HTML Editing with Allmost HTML shits and Fails in Format. Perhaps Severu's Media Backend Generator, which will generate a RESTFUL API with a lot of other benefits, will awaken interest and I will finally find clients instead of mocking that I can't do IT. PS: i Start IT on ATARI 65XE in 1989 and this Year is 33 Years from My First Program Code. So Recap Solutions By Videos I Found Plan Implement Automatic LetsEncrypt for Server, Gihub Custom Server, cheap EDC Server Generator, Next Few cheap Generator which i build on this Way, ESB Generator, XAML Form Builder for EASY Build System By Clicking on Mouse. 05.12.23 Globální Změny Vznikla první agenda s automaticky překládanými poli Úkol, aktualizovat všechny existující aonliner agendy na automatický překlad - Automatický Překlad sbírá pomocí funkce \"TranslateFormFields\" všechny Popisky-LAbel typy a Button Tlačítka Typy a překládá je oproti DB překladovému seznamu - Odpadá nutnost vupisovat typy polí - POZOR toto je možné jen preo ONLINE AGENDY seznam je načítaný ze serveru - Další Varianta Překladu je pomocí ruční definice popisku z názvu - použije \"fileType\" pro překlad *DBOperations.DBTranslation(lbl_fileType.Name.Split('_')[1]) nebo přes lokální Slovníky \"Languages\" pro použití OffLine * lbl_fileType.Content = Resources[\"fileType\"].ToString() - Menu je Celé kromě volby Nastavení Klienta zmeněno na automatický překlad DB slovníku - Odpadá nutnost kvůli nové online agendě importovat slovníky - Slovníky lze Generovat z Backendu a Vložit Do projektu Systému pro Offline Použití - Použité Jazyky CS,EN, neomezená možnost jednoduchého rozšíření Lang Tabulky"
  },
  "EASY-DATA/Docs/PoužitéNástoje3rd.html": {
    "href": "EASY-DATA/Docs/PoužitéNástoje3rd.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help Migration between Database Types Install 'Mysql WorkBench' SW run migrations Help: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Download App Link Generator insert App detail link from web store Example: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Windows Apps & Windows Tools in start menu Windows Kits cmd Reset Store Settings wsreset.exe More Hundered Github Soucre Tools And Ideas are Not Used Hundered Finished Tools are Free For Fast Implement Simple Code Logic With Best System Logic Rules Minimalize the needs for implmenting News Example: https://github.com/search?q=wpf+tool&type=repositories Cheap And Fast Implementation News Example: RDP Remote support 1day, HTML Editor For Manage WebPages: 2 days Google Solve impossible Problem in one Day Few Tools Are Implemented Not Need Next For 95% Standard Systems (Example FYIReporting : Full Free Printing Solution) Example Question: How You Solve Update System? - Answer: Easy by Version Number in Filename WHY: Because Are Changes are implemented on AUTO Logic Strucuture or If Not will must be changed to AUTO Logic = Last manual Rewriting Every Each Logic is Failed. This is Actual Problem Of 95% existing Systems Implemented Free Unused Tools Are Best Solution Often More World Sources Are not Used Result is implemented tools In Both Solutions EASY DATA CENTER - More than 100 Free Technogies For Solve ANY Situation And Not Need Next Existed Cheap Solutions EASY SYSTEM BUILDER - From Implemented 50 Packages Are Used Only 10 with few Part of Possibilities actually MarkDown Item Template API Condition for Ignore In Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] API Description For Descripting In Swagger Docs [SwaggerTag(\"API Template with INSERT/UPDATE/DELETE/SELECT AND FILTERING APIs\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { MarkDown Item Template"
  },
  "EASY-DATA/Docs/StaticWebPortál.html": {
    "href": "EASY-DATA/Docs/StaticWebPortál.html",
    "title": "",
    "keywords": "Osnova [^first] Static Spa Web Portal Základní Popis [^druha] Implementované Funkcionality a jejich Možnosti [^first]: Static Spa Web Portal Základní Popis Funkce Dynamického Statického Web Portálu Implementovány Grafické Doplňky:Mermaid: UML, Grafy, Struktury,Schemata, a mnohem více viz Dokumentace, ukázky najdete Editoru Implementována Funkcionalita zvýraznění programovacích kódů HighLight, více viz Dokumentace , ukázky najdete Editoru Implementován Systém Metro4, pro vývoj libobolných stránek portálů, systémů atd..., více viz Dokumentace , ukázky najdete Editoru - Stránky Lze Stáhnout a spustit přímo ze složky nebo libovolného web Serveru, nutná pouze konfigurace Backend Serveru v souboru globalstorage.js [^druha]: Implementované Funkcionality a jejich Možnosti Funkce Dynamického Statického Web Portálu Implementovány Grafické Doplňky:Mermaid: UML, Grafy, Struktury,Schemata, a mnohem více viz Dokumentace, ukázky najdete Editoru Implementována Funkcionalita zvýraznění programovacích kódů HighLight, více viz Dokumentace , ukázky najdete Editoru Implementován Systém Metro4, pro vývoj libobolných stránek portálů, systémů atd..., více viz Dokumentace , ukázky najdete Editoru - Stránky Lze Stáhnout a spustit přímo ze složky nebo libovolného web Serveru, nutná pouze konfigurace Backend Serveru v souboru globalstorage.js Osnova [^first] Static Spa Web Portal Základní Popis [^druha] Implementované Funkcionality a jejich Možnosti"
  },
  "EASY-DATA/Docs/StructureCZ.html": {
    "href": "EASY-DATA/Docs/StructureCZ.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Nápověda pro Visual Studio",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Nápověda pro Visual Studio Migrace mezi typy databází Nainstalujte SW 'Mysql WorkBench' spustit migrace Nápověda: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Stáhnout App Link Generator vložte odkaz na podrobnosti aplikace z internetového obchodu Příklad: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Aplikace pro Windows a nástroje Windows v nabídce Start Windows Kits cmd Obnovit nastavení obchodu wsreset.exe Více stovek nástrojů a nápadů Github Soucre se nepoužívá Sto hotových nástrojů je zdarma pro rychlou implementaci Jednoduchá logika kódu s nejlepšími pravidly systémové logiky Minimalizujte potřeby pro implementaci zpráv Příklad: https://github.com/search?q=wpf+tool&type=repositories Levné a rychlé zprávy o implementaci Příklad: Vzdálená podpora RDP 1 den, HTML editor pro správu webových stránek: 2 dny Google vyřeší nemožný problém za jeden den Je implementováno jen málo nástrojů, není potřeba další pro 95 % standardních systémů (Příklad FYIRoporting: Kompletní bezplatné tiskové řešení) Příklad otázky: Jak řešíte aktualizaci systému? - Odpověď: Snadno podle čísla verze v názvu souboru PROČ: Protože jsou změny implementovány v logické struktuře AUTO nebo Pokud ne, bude nutné změnit na AUTO Logika = Poslední ruční přepisování Každá každá logika selhala. Toto je skutečný problém 95 % existujících systémů Implementované bezplatné nepoužívané nástroje jsou nejlepším řešením Často se nepoužívá více světových zdrojů Výsledkem jsou implementované nástroje v obou řešeních SNADNÉ DATOVÉ CENTRUM – Více než 100 bezplatných technologií pro vyřešení JAKÉKOLI situace a nepotřebujete další existující levná řešení EASY SYSTEM BUILDER – z implementovaných 50 balíčků se používá pouze 10 s několika částmi možností Zde je testament: EASYTools 3rd Free Addons Podmínka API pro ignorování v Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] Popis API pro popis v Swagger Docs [SwaggerTag(\"Šablona API s INSERT/UPDATE/DELETE/SELECT AND FILTERING API\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete Record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { Šablona položky MarkDown"
  },
  "EASY-DATA/Docs/StructureEN.html": {
    "href": "EASY-DATA/Docs/StructureEN.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help Migration between Database Types Install 'Mysql WorkBench' SW run migrations Help: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Download App Link Generator insert App detail link from web store Example: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Windows Apps & Windows Tools in start menu Windows Kits cmd Reset Store Settings wsreset.exe More Hundered Github Soucre Tools And Ideas are Not Used Hundered Finished Tools are Free For Fast Implement Simple Code Logic With Best System Logic Rules Minimalize the needs for implmenting News Example: https://github.com/search?q=wpf+tool&type=repositories Cheap And Fast Implementation News Example: RDP Remote support 1day, HTML Editor For Manage WebPages: 2 days Google Solve impossible Problem in one Day Few Tools Are Implemented Not Need Next For 95% Standard Systems (Example FYIReporting : Full Free Printing Solution) Example Question: How You Solve Update System? - Answer: Easy by Version Number in Filename WHY: Because Are Changes are implemented on AUTO Logic Strucuture or If Not will must be changed to AUTO Logic = Last manual Rewriting Every Each Logic is Failed. This is Actual Problem Of 95% existing Systems Implemented Free Unused Tools Are Best Solution Often More World Sources Are not Used Result is implemented tools In Both Solutions EASY DATA CENTER - More than 100 Free Technogies For Solve ANY Situation And Not Need Next Existed Cheap Solutions EASY SYSTEM BUILDER - From Implemented 50 Packages Are Used Only 10 with few Part of Possibilities actually Here is testament: EASYTools 3rd Free Addons API Condition for Ignore In Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] API Description For Descripting In Swagger Docs [SwaggerTag(\"API Template with INSERT/UPDATE/DELETE/SELECT AND FILTERING APIs\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { MarkDown Item Template"
  },
  "EASY-DATA/Docs/UkázkyFormátování.html": {
    "href": "EASY-DATA/Docs/UkázkyFormátování.html",
    "title": "Markdown Guide",
    "keywords": "@toc Markdown Guide Detailed: http://commonmark.org/help/ Bold **bold** __bold__ Italic *italic* _italic_ Header # h1 # h1 ==== ## h2 ## h2 ---- ### h3 ### #### h4 #### ##### h5 ##### ###### h6 ###### Dividing line *** --- ^Super^script & ~Sub~script super x^2^ sub H~2~0 ++Underline++ & Strikethrough ++underline++ ~~strikethrough~~ ==Mark== ==mark== Quote > quote 1 >> quote 2 >>> quote 3 ... List ol 1. 2. 3. ... ul - - ... Todo List [x] task 1 [ ] task 2 - [x] task 1 - [ ] task 2 Link Text Link [Text](www.baidu.com) Image Link ![Text](http://www.image.com) Code ``` type cscharp,sql,mermaid,javascript css,vbnet,xml,php,powershell and next 200 code block ``` ` code ` int main() { printf(\"hello world!\"); } code Table | th1 | th2 | th3 | | :-- | :--: | ----: | | left | center | right | th1 th2 th3 left center right ---------------------- ------------- ----------------- Footnote hello[^hello] Look at the bottom1 Emojis Detailed: https://www.webpagefx.com/tools/emoji-cheat-sheet/ :laughing: :blush: :smiley: :) ... 😆:blush::smiley::) \\(\\KaTeX\\) Mathematics We can render formulas for example:\\(x_i + y_i = z_i\\) and \\(\\sum_{i=1}^n a_i=0\\) We can also single-line rendering \\(\\sum_{i=1}^n a_i=0\\) Detailed: katex?katex function??latex Layout ::: hljs-left ::: hljs-left left ::: ::: ::: hljs-center ::: hljs-center center ::: ::: ::: hljs-right ::: hljs-right right ::: ::: deflist Term 1 : Definition 1 Term 2 with inline markup : Definition 2 { some code, part of Definition 2 } Third paragraph of definition 2. Term 1 : Definition 1 Term 2 with *inline markup* : Definition 2 { some code, part of Definition 2 } Third paragraph of definition 2. abbr The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C. ThirdParty Helps Mavon Editor Posibilities Mermaid Design Using footnote↩"
  },
  "EASY-DATA/Docs/VizeaNápadyaPostupy.html": {
    "href": "EASY-DATA/Docs/VizeaNápadyaPostupy.html",
    "title": "",
    "keywords": "LOW/NO/FULL code EXTREMELY EASY TO DEVELOP ANY SYSTEM For thinking, the development of tools and work with them worthy in the 21st century The development of FRONTEND as an entire IS system as you do not know it - only 3 choices are enough Logic - everything in the database is a LIST (list of invoices) -> This may or may not have a DETAIL (list of items) || OR it needs to be just settings, i.e. Detail (program settings, video processing, etc.) And the result can be a system that SAP or anyone else can only dream of. Almost like tennis, you can publish one table after another, and by evening you have a small system. DEFINITION OF 3 layer SYSTEM and necessary components Database - place for DATA Backend Server - A service that securely conveys data to applications Frontend/User Application - A nice application to easily work with data Print support - creation and printing of any reports START in 1 day you will start your new system in three steps Development in Golden UNIVERS RESTFULL/SOCKET BACKEND SERVER in three user steps Create any database Table. Use the TemplateList Template and just insert your boxes into it. Remember Indexes, Foreign Keys, or look at already existing tables or consult with me. It IS for a few minutes You export the tables as a model using the prepared CMD command to the BACKEND project [ EntityFramework 6 ] command: Scaffold-DbContext \"Server=IP;Database=DB;User ID=USER;Password=PW;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel done - the entire database is defined in the Backend server From existing calls, e.g. UserList, copy and rename the new API call for the new table [GET,POST,PUT,PATCH,DELETE] COPY file -> PASTE file -> Rename to new API for example: /skladList and Build&Run Done, the API Server is WAITING at http://vaseip/skladList for your call and deployment at the client, in the company, anywhere Development in EASYBuilder Modern WINDOWS XP+ thin application or system in three user steps You copy the table definition from the model created in the BACKEND project to the FRONTEND project COPY Class from BE Model -> PASTE into FE application -> add new APIURL Select the template you want, there are primarily 3 -> rename it, edit the form and connect it to the MAINMENU so you set the WHERE to search, COPY/PASTE boxes, write Translation in the dictionary and copy the connection to the MAINMENU done - the result is a new form with complete user control Build&Run - you check the work one after the other, because typos are part of us, aren't they the full logging option slaps you in detail where the error is or HURRY GOES Done, the Application is WAITING for your work or deployment at the client, in the company, anywhere evelopment of Press Reports in FYIREPORTING You simply copy the existing DATALIST/DETAIL report and open it in the editor Rename to the new name of your table. You edit your SQL SELECT and Test it, the parameters are already set ID/SEARCH/CONNECT Ideally in MSSQLMS or HEIDYSQL or something and debug it there. Remember everything is just a LIST or Detail. done - and you have the correct data that you just arrange for printing in the form. And you import into the system in the REPORTING list menu, where you set the required link to APIURL/SEARCH/ID Done, the press kit is WAITING for your work or deployment at the client, in the company, anywhere END OF KNOWLEDGE REQUIRED FOR SYSTEM DEVELOPMENT Basic listing of almost unlimited skill application Prepared with common agendas Operation possible on WINDOWS XP, 7, 8, 10, 11 C# WFP, XAML, Drag&Drop technology Complete management of any Agenda (Table) RESTORE/NEW/EDIT/COPY/DELETE Automatically generated list data view. Easy preparation of the form according to prepared templates and ready made agendas more than 100 types of input fields Search in content in the data list also optimized for TOUCH TERMINALS for MANUFACTURING or BUSINESS, SELF*SERVICE environments own printing system with direct printing support Almost unlimited development possibilities with the possibility of own involvement Support for controlling operating systems thousands of already free tools on GitHub connection to any third*party services support for all known protocols EMAIL, IMAP, HTTPS, FTP, SSH, SMTP, TELNET command line support, JavaScript, Telnet Option to connect to 3*party systems, IS and OS systems Support multimedia, hardware, 3D, devices, RFID readers, QR, BAR, EAN, VIDEO, SOUND, MS OFFICE, PDF, XPS, RTF, etc. development of any customized system from 20,000 CZK. System already prepared as a template for any more than just IS SYSTEM the possibility of creating any INFORMATION OR CONTROL, MONITORING, REPORTING system, and so on EASYTOOLS IMPLEMENTED ADD-ONS AddOns for touch panels, controls, data types, forms, media, documents, 3D, They are completely free to download (including every license pack) Open Source community to include more than 1000 tools in the system by community BUILT SYSTEMS IN 14 DAYS LicenseSrv MultiOS license server with listening API GET/POST server / generation of unlimited static/dynamic CODES and management client GUIDES Windows XP+ Implementation Production Guides for Production Companies For office / touch panels with unlimited clients and printing options ShoPingER Windows XP+ MultiBranch Quotation/Order/Invoicing System with multimedia files supported by unlimited clients and printing capabilities LicenceShoper MultiOS License Server PLUS Windows XP+ MultiBranch Billing System [LicenseSrv + ShoPingER] SOLUTION - WHERE TO FIND COMPLETE INFORMATION All documentation, license, case study, price list, media, developer information, help, manuals, technology information, installation, images, videos, downloads, etc. can be found here or: PROJECT IMPLEMENTATION CASE STUDY PROJECTS USING IDEAS For thinking, the development of tools and work with them worthy in the 21st century The first use of this solution was a big change in a manufacturing company For 1000 workers, but it was only four days work for the IT department Implementation of production guides as a task for 4 days CZ In Case Studies Creation of the Billing System as a replacement for the system with discontinued support. Creation of the ShoPingER Invoicing System with a large overlap in 14 days] All Windows Applications are available to try online in the Application ShowRoom https://KlikneteZde.Cz Golden - Backend Server Development Plan Create Backend Server Generator Create Full Customer Support with Project Managements EASYBuilder - WPF Fronted System Builder Development Plan Publish XAML Generator Graphical Tool with Templates Support implement Global Context menu for all DataLists with Count of API record request setting, Properties of Datalist, DataRequest,DataList Controller Convert WPF System to WebApplication for Windows/Linux with all graphics and possibilities Create SYSTEM Generator Create Metro4 Full compatible WEB SYSTEM Variant Implement FastReport Tool (Replace FYI Reporting) Recommended Practices Using References of Variables or Classes - Maximum Saving Memory Performance For All processes which is modified by One Person in One Time - Typical System Using In simple explanation and absolut ideally working with Data - Maximum Clean Code Data flow modify one Variable or Class on Way Over More Sequenced Methods From API List Logic You working only With Primary API Dataset and few sets of Dials For standard Using its best way For Maximum clean code without Exeption Is calculating that you Have Full or Extended Dataset for API everytime Point For Data loading \"'SetRecord' Method\" - load data from model to Dataset Variable Some Operations where you can change data values Point For Recapitulate full Dataset and Save Info Global Server Running: https://Kliknetezde.Cz:5000/ Generators & Client Support is Preparing: https://Kliknetezde.Cz:5000/DashBoard Youtube: https://www.youtube.com/playlist?list=PLmE7gP9LTBimNJQ444ypG8HVce23fa2Hb Facebook: https://www.facebook.com/GroupWareSolution LinkedIn: https://www.linkedin.com/in/libor-svoboda-7b96014a/ Eshop: https://GroupWare-Solutions.Eu WebPages: https://GroupWare-Solution.Eu Online Application for testing: Https://KlikneteZde.Cz GitHub Complete Information and Help: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873 16.11.2023 Spuštěna Centrální Dokumentace Která je online vždy po ruce Aktuální stav je již Robustní řešení, které nikdo nechápe a já škemrám o práci, přitom toto jsou plánované body udělat povečerech po práci během 3 dní (šlo by za 5 pracovních) - Monitorovaní Změn wwwroot a Update klientských spojení - hotovo - nastoje generovani XML, DB schema - v IS systemu Hotovo - dynamicke API z SQL - Vize 1Endpoint pro SQL dotazy (Agenda), vysledek Neomezený dynamický API Server bez nutnosti programovat - Zozčlenění Cwentrální dokumentace do všech vytvořených/použitých klientů chybí MD i do Docs - rozšířit server konfigurace z mnoha 1x nastavení lze udělat Server Agendy"
  },
  "EASY-DATA/Docs/ÚvodníInformace.html": {
    "href": "EASY-DATA/Docs/ÚvodníInformace.html",
    "title": "",
    "keywords": "EN: New in the menu \"Absolutely unique EASY SYSTEM BUILDER\" absolutely easy to create a 3-tier system (ANY DB, BACKEND-SERVER, FRONTEND-KLIENT) with excel knowledge Just create a Table for Data and a Form, all in graphic designers So you literally click on the system, 1 table every day = sales system with orders and offers per month And that's not all, by any chance. It doesn't have to be only a data system, but also a multimedia one without any problem, for cutting videos, working with photos or 3D or even a CONTROL SYSTEM for machine control (Currently SIEMENS PLC is supported), or any other Hardware after delivery of specifications. Or the Control system, Backup, DataWarehouse, Controlling, BI OLAP, Flow Processes, Production, Information or business touch Terminals. IT CAN ALSO BE USED ONLY AS AN EXTENSION OR CONNECTION OF SYSTEMS The starting cost for the core is only 10,000 CZK / 400 Euro, and you can try it yourself or order cheaply what you want to add there. Don't bow down to the system, GET A CUSTOMIZED SYSTEM. For idea: invoicing system with OBJ+NAB+MULTI BRANCHES, WAREHOUSE, CHECKOUT - 14 DAYS implementation of a touch terminal in production for work reports - 4 DAYS A system for hotels including room agency, invoicing and orders is currently being created - 1 MONTH Free updates, 1 development for all clients via shared project agendas in code Unlimited users, unlimited printing, unlimited options, tutorials, tips, tricks, advice, Prepared for all types of systems and terminals for MS WINDOWS INTELLIGENT DOCUMENTATION: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN/ CODE: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN ONLINE EXAMPLE: https://kliknetezde.cz SO DON'T DELAY AND CALL TODAY BEFORE THE PRICE GOES UP BACKEND SERVER CAN BE USED INDEPENDENTLY FOR ANY OTHER MULTIPLATFORM PROJECT IT Architect Libor Svoboda GroupWare-Solution.Eu Tel: 00420 724986873, email: Libor.Svoboda@GroupWare-Solution.Eu UNIVERSAL MODERN BE + MS FE SOLUTION FOR BUILDING ANY 3-layer technological software or its parts For thinking, the development of tools and work with them worthy in the 21st century Golden - Universal multi-platform MultiDatabase Backend server solution with all standard technologies implemented EASYSYSTEMBuilder - Universal modern Metro WPF Frontend System Builder solution for quick and easy development of any system with minimal knowledge Combined solution - is a simple solution for rapid development of any modern system, runs perfectly on prepared System Core and templates for Graphical/Click Development Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Complete free projects codes, templates, help, tips, trics, etc: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN GroupWare-Solutions FOR Universal IT World SolutionsVisions&Ideas.MD AUTO_STEPS_Look_First.md CoreStructureDefinition.md DATABASES.md Golden_Code_Help.MD EASYSYSTEMBuilder_Code_Help.md EASYTools_3rdFreeAddons.MD FIYReporting.md OS_GIT_GCLOUD_WIN_LIN_DOCKER_Help.md SolutionsChangeLog.MD 3rdPartyVisionsTips.md SUMMARY.md EASY-SYSTEM-Builder Visual Studio project solution EASYSYSTEMBuilder for C# WPF Low/no code solution For immediate development of your own SYSTEM: FOR EVERY Company/Data Management/IS/OS/HW Multilingual WPF application supported Full support for the creation of any MS system (modern SAP, etc.). Control system with graph support Support for a unique media system, Touch terminals supported Bussiness/City/Country/ANY touch touch terminals on Windows AIO monitors are supported NEXT YEAR Web Convert Support for LINUX/WINDOWS Thousands of IS/OS/etc. tools on Github for free Transparent clean code Low/no code development support - Click-to-click graphic development For standard IT/terminal systems development, the XAML graphical Builder with Class Copy is all you need for development System updates are free Code updates and all changes are public 1. DataWorking/IO/PRINT/SHOW With all types of data form templates for standardized: DATAView / DATADetail / DATAView with SubDATAview / DATAView with SubFullDataDetail 3D / Document / Video 1. To build ANY information / multimedia / control / flow / reporting and other systems COPY/PASTE DEVELOPMENT PRICE 5000CZK/200EURO - PROJECT LICENSE EASY-DATA-CENTER Visual Studio project solution Golden ASPNETCORE6 providing: Simple development of Universal secure Multiplatform MultiDB Backend Server With RESTFULL / WEBSOCKET implementations With all types of templates for INSERT / UPDATE / DELETE / SELECT / PROCEDURE / SUBFORMDATA / etc. WITH DATABASE, table template, Procerure template, view template, Backup/restore/set DB rights and other examples With tables, indexes, foreign keys in all standard DB uses **COPY/PASTE DEVELOPMENT PRICE 5000CZK/200EURO - PROJECT LICENSE** FYI Reporting - Report Editor / Viewer FreeWare Full Report Designer and Viewer for printing all types of documents / barcodes, EAN, QR EASYTOOLS Add-ons for touch panels, controls, data types, forms, media, documents, 3D, They are completely free to download (including every license pack) Open Source community to include more than 1000 tools in the system by community EXISTING CLONE SYSTEMS CREATED IN 14 DAYS LicenseSrv MultiOS license server with listening API GET/POST server / generation of unlimited static/dynamic license CODES and application client to manage the Server GUIDES Windows XP+ Implementation of production sources in the production of a production company For office / touch panels with an unlimited number of clients and the possibility of printing ShoPingER Windows XP+ Multi Branch Quotation/Order/Invoicing system with multimedia files supported by unlimited clients and printing capabilities LicenceShoper MultiOS License Server PLUS Windows XP+ MultiBranches Billing System [LicenseSrv + ShoPingER] SOLUTION - WHERE TO FIND COMPLETE INFORMATION All documentation, license, case study, price list, media, developer information, help, manuals, technology information, installation, images, videos, downloads, etc. can be found here: Info Global Server Running: https://Kliknetezde.Cz:5000/ Generators & Client Support is Preparing: https://Kliknetezde.Cz:5000/DashBoard Youtube: https://www.youtube.com/playlist?list=PLmE7gP9LTBimNJQ444ypG8HVce23fa2Hb Facebook: https://www.facebook.com/GroupWareSolution LinkedIn: https://www.linkedin.com/in/libor-svoboda-7b96014a/ Eshop: https://GroupWare-Solutions.Eu WebPages: https://GroupWare-Solution.Eu Online Application for testing: Https://KlikneteZde.Cz GitHub Complete Information and Help: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873"
  },
  "EASY-DATA/EICExamplesOnline.html": {
    "href": "EASY-DATA/EICExamplesOnline.html",
    "title": "Ukázka Veřejně Dostupných Nástrojů, Modulů Serveru",
    "keywords": "Ukázka Veřejně Dostupných Nástrojů, Modulů Serveru Implementovaný Automatický Překladač v celém Web řešení Udělao z vývoje Hračku. Na rovinu špatné nebo nedostatečné porozumění kolikrát hrozně napsané dokumentace jenejvětším kamenem úrazu. To je Veškerý Obsah otevřený přes Řešení EasyITcenter, protože vždy zabuduje překladač to stránky a přeloží ji. To znamená publikovat automaticky z jediného jazyka pro celý svět a naopak. viz ukázka Dokumentacích na: Nový Tento Nový Portál Dokumentace EIC&ESB ve 3 Dnech V přípravě Inteligentí nástroje pro Vývoj a Správu Projwektů Online Inteligentí Vývoj Projektů C# Online Inteligentní Vývoj Všech typů kódů s podporou Intelisense Online Porovnávání Souborů kódu s podporou Intelisense Online Mluvící Editor Kódu s možností Implementace InteliSense Online Database Desiger pro Vývoj DB Online Nový Online Developer Portal pro vývoj Projektů přes Internet z Editorů - ve fázi přípravy Webový Portál Generovaný pomocí Editoru v Systému Online Kompilace Kódu - připravuje se vlastní nástroj Další nástoje Serveru DB AutoManageApi Automaticky Generované API Rozhraní + Docs DB EasyDATABASE Manager Web Správa Databáze DB AutoEntity DB Schema Přehled Aktuální Struktury DB (/ServerCoreTools/csharpedit/) Inteligentní Vývoj C# Online Online Monitoring Serveru Dohledové Centrum Prahled Stavu Přehled Stavů Dohledového Centra Docs Prohlížeč verzované Dokumentace ExpertDocViewer Prohlížeč verzované Dokumentace pro Libovolné Webové Stránky ExpertDocEditor Editor verzované Dokumentace pro Libovolné Webové Stránky Ke stažení k Dispozici 30denní PLná Verze EIC + EBS včetně Databáze Privátní Github Server - Jestě ve vývoji XamlCZ - Export automaticky spracovaného Slovníku pro Řešení XamlEN - Export automaticky spracovaného Slovníku pro Řešení Automaticky udržovaný Slovník XamlEN Export Databazoveho Schematu ve formátu DGML Export DB Schema Robots Web Konfigurační Soubor Robot.txt sitemap InteliDocs Expert Prohlížeč sitemap Libovolné Vlastní Moduly ukázka PrintPage Webové Frameworky, Systémy, WebStránky, Nástroje, Editory, Generátoy Naleznetek prohlednutí Online na novém portálu Dokuemtace. Všechna řešení jsou statická takže není nutný žadný build a změny se projevují IHNED Nový Portál Dokumentace EIC&ESB ve 3 Dnech Implementované Nástroje Třetích stran Mermaid Grafika MarkDown Základy MarkDown Advance Mermaid Editor A velká spousta k implementaci Systémových a třetích stran"
  },
  "EASY-DATA/EICTemplates.html": {
    "href": "EASY-DATA/EICTemplates.html",
    "title": "",
    "keywords": "List Tabulek v Generické REST Full Správě Tyto Správy jsou v Serveru 2 s autorizací a bez. Pro Systém použijete vždy s autorizací, ale třeba pro Internet může být bez. Pro Vytvoření nového API musíte Vytvořit DB Dabulku v nějakém Editoru jako třeba zde přímo z Webových Stránek a zkopírovat Tento kód + Přejmenovat Tabulku Mě je ale mylejší vždy samostatná šablona, maximálně 1 Chyba, a vhodným umístěním v systému šablon, než se leknout jestli není smazaná a najít ji v seznamu generických. BEZ Šablony - Vložit Název tabulky do Seznamu Generických API //API URLis: http://localhost:8000/ServerGenericAuthApi/SystemParameterList [Route(\"ServerGenericAuthApi/[controller]\")] [ApiController] public class SystemParameterListController : AuthGenericProviderApi<EasyITCenterContext, SystemParameterList, int> { public SystemParameterListController(IRepositoryAsync<EasyITCenterContext, SystemParameterList> repo) : base(repo) { } } [Authorize] [Route(\"[controller]\")] [ApiController] public class SolutionWebsiteListController : StdAuthGenericProviderApi<EasyITCenterContext, SolutionWebsiteList, int> { public SolutionWebsiteListController(IRepositoryAsync<EasyITCenterContext, TemplateList> repo) : base(repo) { } } Základní REST Full Šablona která vám Vydrží Všiměte si že mám v ROUTE = URL API, prefix \"EasyITCenter\". To pro možnost Vytvořit zmíněný Test Server v 1 minutě. Zopírováním Adresáře s API voláním a pak jen přejmenovat \"EasyITCenterTemplateList\" na \"TestEasyITCenterTemplateList\" v celém projektu. Na každou drobnost je v projektu myšleno namespace EasyITCenter.Controllers { [Authorize] [ApiController] [Route(\"EasyITCenterTemplateList\")] public class EasyITCenterTemplateListApi : ControllerBase { [HttpGet(\"/EasyITCenterTemplateList\")] public async Task<string> GetTemplateList() { List<TemplateList> data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted //with NO LOCK })) { data = new EasyITCenterContext().TemplateLists.ToList(); } return JsonSerializer.Serialize(data); } [HttpGet(\"/EasyITCenterTemplateList/Filter/{filter}\")] public async Task<string> GetTemplateListByFilter(string filter) { List<TemplateList> data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted //with NO LOCK })) { data = new EasyITCenterContext().TemplateLists.FromSqlRaw(\"SELECT * FROM TemplateList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } return JsonSerializer.Serialize(data); } [HttpGet(\"/EasyITCenterTemplateList/{id}\")] public async Task<string> GetTemplateListKey(int id) { TemplateList data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { data = new EasyITCenterContext().TemplateLists.Where(a => a.Id == id).First(); } return JsonSerializer.Serialize(data); } [HttpPut(\"/EasyITCenterTemplateList\")] [Consumes(\"application/json\")] public async Task<string> InsertTemplateList([FromBody] TemplateList record) { try { record.User = null; //EntityState.Detached IDENTITY_INSERT is set to OFF var data = new EasyITCenterContext().TemplateLists.Add(record); int result = await data.Context.SaveChangesAsync(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = DataOperations.GetUserApiErrMessage(ex) }); } } [HttpPost(\"/EasyITCenterTemplateList\")] [Consumes(\"application/json\")] public async Task<string> UpdateTemplateList([FromBody] TemplateList record) { try { var data = new EasyITCenterContext().TemplateLists.Update(record); int result = await data.Context.SaveChangesAsync(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = DataOperations.GetUserApiErrMessage(ex) }); } } [HttpDelete(\"/EasyITCenterTemplateList/{id}\")] [Consumes(\"application/json\")] public async Task<string> DeleteTemplateList(int id) { try { TemplateList record = new() { Id = id }; var data = new EasyITCenterContext().TemplateLists.Remove(record); int result = await data.Context.SaveChangesAsync(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = DataOperations.GetUserApiErrMessage(ex) }); } } } } Primární Šablona pro API Hlavní Tabulky s rozsahem SubPoložek Použití je například pro Fakturu, Objednábku atd.. To vše ale jen zkopírujete z existujícího řešení. Ukládáte Hlavičky i položke v 1 API. Vazba je nastavena na úrovni DB. namespace EasyITCenter.Controllers { [Authorize] [ApiController] [Route(\"EasyITCenterTemplateRange\")] public class EasyITCenterTemplateRangeApi : ControllerBase { [HttpGet(\"/EasyITCenterTemplateRange/{documentNumber}\")] public async Task<string> GetTemplateRangeKey(string documentNumber) { List<OutgoingInvoiceSupportList> data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { data = new EasyITCenterContext().OutgoingInvoiceSupportLists.Where(a => a.DocumentNumber == documentNumber).ToList(); } return JsonSerializer.Serialize(data); } [HttpPut(\"/EasyITCenterTemplateRange\")] [Consumes(\"application/json\")] public async Task<string> InsertAllDocTemplateRange([FromBody] List<OutgoingInvoiceSupportList> record) { try { int result; EasyITCenterContext data = new EasyITCenterContext(); data.OutgoingInvoiceSupportLists.AddRange(record); result = data.SaveChanges(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = 0, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = ServerCoreFunctions.GetUserApiErrMessage(ex) }); } } [HttpDelete(\"/EasyITCenterTemplateRange/{documentNumber}\")] [Consumes(\"application/json\")] public async Task<string> DeleteItemList(string documentNumber) { try { List<OutgoingInvoiceSupportList> data; data = new EasyITCenterContext().OutgoingInvoiceSupportLists.Where(a => a.DocumentNumber == documentNumber).ToList(); EasyITCenterContext data1 = new EasyITCenterContext(); data1.OutgoingInvoiceSupportLists.RemoveRange(data); int result = data1.SaveChanges(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = 0, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = ServerCoreFunctions.GetUserApiErrMessage(ex) }); } } } } Sekundární Šablona k Hlavní s Volbou ukládat Odděleně Pokud Chcete oddelené ukládání ale rozsahu položek, k tomu slouží tato šablona. Ne Vždy je nutné ukládat i Hlavičku. using EasyITCenter.DBModel; namespace EasyITCenter.Controllers { [Authorize] [ApiController] [Route(\"EasyITCenterTemplateItemList\")] public class EasyITCenterTemplateItemListApi : ControllerBase { [HttpGet(\"/EasyITCenterTemplateItemList\")] public async Task<string> GetTemplateItemList() { List<ItemList> data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted //with NO LOCK })) { data = new EasyITCenterContext().ItemLists.ToList(); } return JsonSerializer.Serialize(data); } [HttpGet(\"/EasyITCenterTemplateItemList/Filter/{filter}\")] public async Task<string> GetTemplateItemListByFilter(string filter) { List<ItemList> data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted //with NO LOCK })) { data = new EasyITCenterContext().ItemLists.FromSqlRaw(\"SELECT * FROM TemplateItemList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } return JsonSerializer.Serialize(data); } [HttpGet(\"/EasyITCenterTemplateItemList/{id}\")] public async Task<string> GetTemplateItemListKey(int id) { ItemList data; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { data = new EasyITCenterContext().ItemLists.Where(a => a.Id == id).First(); } return JsonSerializer.Serialize(data); } [HttpPut(\"/EasyITCenterTemplateItemList\")] [Consumes(\"application/json\")] public async Task<string> InsertTemplateItemList([FromBody] ItemList record) { try { var data = new EasyITCenterContext().ItemLists.Add(record); int result = await data.Context.SaveChangesAsync(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = ServerCoreFunctions.GetUserApiErrMessage(ex) }); } } [HttpPost(\"/EasyITCenterTemplateItemList\")] [Consumes(\"application/json\")] public async Task<string> UpdateTemplateItemList([FromBody] ItemList record) { try { var data = new EasyITCenterContext().ItemLists.Update(record); int result = await data.Context.SaveChangesAsync(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = ServerCoreFunctions.GetUserApiErrMessage(ex) }); } } [HttpDelete(\"/EasyITCenterTemplateItemList/{id}\")] [Consumes(\"application/json\")] public async Task<string> DeleteTemplateItemList(string id) { try { if (!int.TryParse(id, out int Ids)) return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = \"Id is not set\" }); ItemList record = new() { Id = int.Parse(id) }; var data = new EasyITCenterContext().ItemLists.Remove(record); int result = await data.Context.SaveChangesAsync(); //Remove Item Attachments Previous delete Item HERE is not deleted BY foreign key List<BasicAttachmentList> Attachmentdata; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { Attachmentdata = new EasyITCenterContext().BasicAttachmentLists.Where(a => a.ParentType == \"ITEM\" && a.ParentId == int.Parse(id)).ToList(); } EasyITCenterContext itemData = new EasyITCenterContext(); itemData.BasicAttachmentLists.RemoveRange(Attachmentdata); itemData.SaveChanges(); if (result > 0) return JsonSerializer.Serialize(new DBResultMessage() { InsertedId = record.Id, Status = DBResult.success.ToString(), RecordCount = result, ErrorMessage = string.Empty }); else return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = result, ErrorMessage = string.Empty }); } catch (Exception ex) { return JsonSerializer.Serialize(new DBResultMessage() { Status = DBResult.error.ToString(), RecordCount = 0, ErrorMessage = ServerCoreFunctions.GetUserApiErrMessage(ex) }); } } } } Šablona Procedury s Návratem Libovolné Tabulky Universální Šablona pro unikátní Volání přes procedury. Toto Řešení zajišťuje právě Dynamické API už i bez Programování. namespace EasyITCenter.Controllers { [Authorize] [ApiController] [Route(\"EasyITCenterTemplateAnySProcedureData\")] public class EasyITCenterTemplateAnySProcedureDataListApi : ControllerBase { [HttpGet(\"/EasyITCenterTemplateAnySProcedureData\")] public async Task<string> GetTemplateAnySProcedureDataList() { List<CustomString> data = new(); data = new EasyITCenterContext().EasyITCenterCollectionFromSql<CustomString>(\"EXEC GetTables;\"); return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles, WriteIndented = true }); } } } Šablona Procedury s Návratem True/False Sice zbytečná, protože toto mohla řešit předchozí šablona, ale např pro Aktivaci Licenčního klíče ideální. Či pro Optimalizaci provozu na síti na každý bit. namespace EasyITCenter.Controllers { [ApiController] [Route(\"EasyITCenterTemplateProcedure\")] public class EasyITCenterTemplateProcedureApi : ControllerBase { [AllowAnonymous] [HttpGet(\"/EasyITCenterTemplateProcedure/{UnlockCode}/{PartNumber}\")] public async Task<string> GetTemplateProcedure(string unlockCode, string partNumber) { string data = string.Empty; List<SqlParameter> parameters = new(); bool allowed = false; bool catched = false; try { if (HttpContext.Connection.RemoteIpAddress != null) { string clientIPAddr = System.Net.Dns.GetHostEntry(HttpContext.Connection.RemoteIpAddress).AddressList.First(x => x.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork).ToString(); if (!string.IsNullOrWhiteSpace(clientIPAddr)) { parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new EasyITCenterContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); } } } catch { catched = true; } try { if (catched) { parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = \"Unknown\" }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new EasyITCenterContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); } } catch { } return JsonSerializer.Serialize(allowed); } [AllowAnonymous] [HttpPost(\"EasyITCenterTemplateProcedure\")] [Consumes(\"application/json\")] public async Task<string> PostTemplateProcedure([FromBody] LicenseActivator record) { string data = string.Empty; List<SqlParameter> parameters = new(); bool allowed = false; bool catched = false; try { if (HttpContext.Connection.RemoteIpAddress != null) { string clientIPAddr = System.Net.Dns.GetHostEntry(HttpContext.Connection.RemoteIpAddress).AddressList.First(x => x.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork).ToString(); if (!string.IsNullOrWhiteSpace(clientIPAddr)) { parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = record.UnlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = record.PartNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new EasyITCenterContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); } } } catch { catched = true; } try { if (catched) { parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = record.UnlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = record.PartNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = \"Unknown\" }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new EasyITCenterContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); } } catch { } return JsonSerializer.Serialize(allowed); } } } Šablona API pro Distribuci Obrázků / Souborů A poslední šablona která se dá použít častěji jak 1x ročně, je pro práci se soubory. Tento portál má Weby uložené v databázi. Komlpetně. tedy já ji použil pro ohromné výhody které tato logika přináší. namespace EasyITCenter.Controllers { [ApiController] [Route(\"EasyITCenterTemplateImageApi/Image\")] public class EasyITCenterTemplateImageApi : ControllerBase { [HttpGet(\"/EasyITCenterTemplateImageApi/Image/{id}\")] public async Task<IActionResult> GetSearchImageById(int? id = null) { int recId; ImageGalleryList data = null; if (!string.IsNullOrWhiteSpace(id.ToString()) && int.TryParse(id.ToString(), out recId)) { data = _dbContext.ImageGalleryLists.Where(a => a.Id == recId).FirstOrDefault(); } if (data != null) { return File(data.Attachment, MimeTypes.GetMimeType(data.FileName), data.FileName); } else { return BadRequest(new { message = DBOperations.DBTranslate(\"BadRequest\", \"en\") }); } } [HttpGet(\"/EasyITCenterTemplateImageApi/Image/{id}/{filename}\")] public async Task<IActionResult> GetSearchImageByKeys(int? id = null, string fileName = null) { int recId; ImageGalleryList data = null; if (!string.IsNullOrWhiteSpace(id.ToString()) && !string.IsNullOrWhiteSpace(fileName) && int.TryParse(id.ToString(), out recId)) { data = _dbContext.ImageGalleryLists.Where(a => a.Id == recId && a.FileName.ToLower() == fileName.ToLower()).FirstOrDefault(); } if (data != null) { return File(data.Attachment, MimeTypes.GetMimeType(data.FileName), data.FileName); } else { return BadRequest(new { message = DBOperations.DBTranslate(\"BadRequest\", \"en\") }); } } [HttpGet(\"/EasyITCenterTemplateImageApi/RoomImage/{id}/{roomId}\")] public async Task<IActionResult> GetRoomImageByKeys(int? id = null, int? roomId = null) { int hId; int rId; ImageGalleryList data = null; if (int.TryParse(id.ToString(), out hId) && int.TryParse(roomId.ToString(), out rId)) { data = _dbContext.ImageGalleryLists.Where(a => a.Id == hId && a.Id == rId).FirstOrDefault(); } if (data != null) { return File(data.Attachment, MimeTypes.GetMimeType(data.FileName), data.FileName); } else { return BadRequest(new { message = DBOperations.DBTranslate(\"BadRequest\", \"en\") }); } } } }"
  },
  "EASY-DATA/EICdocfx/index.html": {
    "href": "EASY-DATA/EICdocfx/index.html",
    "title": "Dokumentace EasyITcenter to je GroupWare",
    "keywords": "Dokumentace EasyITcenter to je GroupWare Krátký Úvod pro seznámení s Projektem Easy IT center a jeho významu a přínosem pro celý svět. Aktuální verzi EasyITcenter můžete vidět online. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz Dokumentace EasyITcenter to je Groupware EASY-IT-CENTER [EIC] je NETCORE6 C# Visual Studio Projekt zaměřený na extrémně snadný a rychlý vývoj Backend API serveru pomocí připravených Šablon Formulářů. Projekt se ale Rozrostl díky snadnosti tvorby do Nyní komplexní správy IT, protože jako bývalý IT admin v 15 firmách to byly první agyndy co mě napadly. ESB je tak Univerzální Server s Backend API a jeho vývojem pouhým kopírováním existujících API šablok ke jménům nově vztvořených Tabulek. A po Dynamickém API nebude potřeba AI to, a Backend Server si nastaví každý sám Dynamickým QueryBuilderem. Nyníí tedy Stačí pouze Vytvořit DB Tabulku - Podporovýny jsou všechny typy DB serverů i Všechny Typy OS. Po vytvoření Tabulky Scaffold Aktualizuje DB Schema a vy jen Doplníte API šablonu k novým Tabulkám. To je vše Co budete chtít vyvjíjet. A brzy toito již jen online a stažením updatovaného Projektu. Server Zabírá sám o sobě 60MB. API šablony jsou stále stejné = REST FULL a vy tedy nemusíte nic než nastavit správný názeb Tabulky. Vše ostatní je součástí šablony, která obsahuje Definici. Implementované Technologie Přes 100+ implemenovaných Technologií dává znát možnostem Tohoto Řešení. Tyto technologie nabídly zaimlpementovat celou podnikoou správu IT do jediného Serveru naví s administrací jakou můžou ostatní systémy jen závidět. Nyní je na programu multiWeb Hosting, Správa Portálů Online, a následně weřejný Portal pro vytváření webů, prezentací, galerií ATD. Ne v tomto Případě. Frameforků je implementováno hned 5. Metro, WPF NET, XCEED, WpfLightToolkit, HelixToolkit Tím máme vyřešeny objekty pro formuláře více než nadstadartně. A nejen to, lze implementovat i naprosto rozdílné technologie, jako např WEB aplikace pouhým vložením do rámečku Okna Windows a máte novou aplikaci. Systém totiž hostuje vlastní web server. Aktuálně je v Systému implementováno přes 100 pečlivě vybraných technologií, které nabízí tolik možností, že je není ani možné všechny využít. Modularní Server to jsou nová API Nové Moduly to jsou nová APi se službami. A takových bude přibývat ještě spousta. Primárně ale server slouží jako WebPortal a Backend Server, brzy ještě Multi WebHosting. Moduly Budou Přybývat ode mne jako nové API služby, např WEbScraping, Dynamic API Managemnt. Ten jje v plánu a Ani API už nebude otřeba Programovat. WebPortal Již nyní obsahuje Nativní Web Stránky a Celý je uložen v Databázi. Řešení EasyITcenter Obsahuje Servery Multi Backend API Server - Any DB support Server Plánovač Úloh Procesy, Emaily, Socket, SQL ANY IT Monitoring HW/SW/SERVICE/NET Hromadný Emailing API Privátní Git Server Privátní FTP Server Web Portal + Online Dev Licenční Server Server MultiMedia Dokumentace Web Project Task Managenent Server Web Portal s Online vývojem z Webu či Systému Data Service API pro Controling API pro Reporty, Pivot, Grafy Nástroje a Moduly AutoWeb s Popisem a Testem API Generátor DB Schema Web Dashboard DB Schema Online Web Dasboard Monitor HW / SW /Service / NET Web Administrace Serveru Dokumentace Web Administrace Portálu Web Project Task Management DashBoard WebStatic Studio Dashboad pro vývoj WEB online WebLiveDataMonitor Web DatabaseManager WebShareFolderOnline WebSocketServerMonitor Dev C#Online Private GitHub Dashboard Web Portal a Web Hosting s implementací 10+ Web Mopderních Frameworků 200+ Web Knihovny Funkcinalit 1000+ Web Knihovny Objektů 100+ Web Editory, Prohlížeče, Galerie 50x Moderní Web stránky 50 Předloh portálů,Systémů, Panelů Web Portal s Online Vývojem z Webu či ze Systému - Metro4 Web Server Slouží k provozu z úložiště DB,souborové,ftp 1x Generovaného Web Portál: s možností přenosu do Statické Stránky pro tvorbu dalšího portálu s Neomezeným počtem další statických webů, stránek, aplikací, Dashbordů, Galeríí, Dokumentací a všeho co si jen dokážete představit... s jednoduchým vývojem z editorů, Visual Studia, Systému ESB, Web Portálu, Notepadu, čeho chcete.. bez jakéhokoliv buildování a nasazování na server, to již provádíte přímo pouhou editací souborů... Vývojem App,Stránek,atd.. z Module Editoru pro vývoj pouhým editorem máte připraveno ihned k použití: original Dokumentace Použitých technologii ve VŠECH JAZYCÍCH do DETAILU: nyní již pochopíte všechny možnosti celých řešení Globální Knihovna kódů pro snadný vývoj kopírováním šablon,již obsahuje veškeré příklady nutné pro vývoj XX Html Editory pro editace a tvorbu Stránek Online, k implementaci atd.. XX Code Editory pro komplexní vývoj Webu z Editoru, Vývoj všech typů Webových Aplikací Database Editory SQLite pro možnost samostatného webu s interní DB Inteligentní Online Code Editory s InteliSense XX Statické UI Frameworky pro Tvorbu Webů,Portálů,Intranetů,Aplikací v různých designech XX Statické UI DashBordy pro Tvorbu Webů,Portálů,Intranetů,Aplikací v různých designech X Statické Generátory Dokumentací Static Filemanager , Soubory jsou řešeny přes API XX Statické Grafické nástroje Galerie,Animace,HighLight,Mermaid,Diagramy,Background Player,Video Galerie,... XX Statické Prohlížeče nejrůznějších formátů souborů, Panorama, Office, 3D, Grafy, XML, PDF, MD,.. XX Další Knihovny Stylů CSS pro dodatečné implemetace Animací, Objektů, Celků, Webů XX Javascript Knihovny pro implementaci všemožných funkcionalit do portálu XX šablony aplikací: Vue,React,Next, a všechny ostatní.. cca 50 typů 50 Šablony moderních Webových Stránek XX Generátory statických webových stránek - Celých webových stránek nebo listů webových stránek technoligií Drag&Drop s možností si přidávat pouhým zkopírováním Cokoliv dalšího z Github a internetu Technologický List Seznam Balíčků rozšiřující Jádro Serveru EIC microsoft.visualstudio.web.browserlink\\2.2.0\\ aspnetcore.healthchecks.applicationstatus\\6.0.0\\ aspnetcore.healthchecks.azurestorage\\6.1.2\\ aspnetcore.healthchecks.eventstore\\6.0.3\\ aspnetcore.healthchecks.mongodb\\6.0.2\\ aspnetcore.healthchecks.mysql\\6.0.2\\ aspnetcore.healthchecks.network\\6.0.4\\ aspnetcore.healthchecks.npgsql\\6.0.2\\ aspnetcore.healthchecks.oracle\\6.0.3\\ aspnetcore.healthchecks.prometheus.metrics\\6.0.2\\ aspnetcore.healthchecks.publisher.prometheus\\6.0.2\\ aspnetcore.healthchecks.sqlite\\6.0.2\\ aspnetcore.healthchecks.sqlserver\\6.0.2\\ aspnetcore.healthchecks.system\\6.0.5\\ aspnetcore.healthchecks.ui.client\\6.0.5\\ aspnetcore.healthchecks.ui.core\\6.0.5\\ aspnetcore.healthchecks.ui.inmemory.storage\\6.0.5\\ aspnetcore.healthchecks.ui.mysql.storage\\6.0.5\\ aspnetcore.healthchecks.ui.postgresql.storage\\6.0.4\\ aspnetcore.healthchecks.ui.sqlite.storage\\6.0.5\\ aspnetcore.healthchecks.ui.sqlserver.storage\\6.0.5\\ aspnetcore.healthchecks.ui\\6.0.5\\ aspnetcore.healthchecks.uris\\6.0.3\\ aspnetcore.markdowndocumenting\\2.3.1\\ codemirror.full\\3.1.0\\ dapper\\2.1.35\\ docfx.markdigengine.extensions\\2.75.3\\ docfx.markdigengine\\2.75.3\\ easydata.aspnetcore\\1.5.2\\ easydata.core\\1.5.2\\ easydata.entityframeworkcore.relational\\1.5.2\\ easydata.exporters.closedxml\\1.5.2\\ easydata.exporters.default\\1.5.2\\ easydata.exporters.pdfsharp\\1.5.2\\ erikej.entityframeworkcore.dgmlbuilder\\6.0.0\\ filecontextcore\\3.4.0\\ fubardev.ftpserver.commands\\3.1.2\\ fubardev.ftpserver.filesystem.dotnet\\3.1.2\\ fubardev.ftpserver\\3.1.2\\ ht.minify\\6.0.11\\ htmlagilitypack\\1.11.59\\ korzh.dbutils.export\\1.4.1\\ korzh.dbutils.import\\1.4.1\\ korzh.dbutils.sqlite\\1.4.1\\ korzh.dbutils.sqlserver\\1.4.1\\ korzh.dbutils\\1.4.1\\ leisn.markdigtoc\\0.1.3\\ lettuceencrypt\\1.3.0\\ libgit2sharp\\0.26.2\\ magick.net.core\\13.6.0\\ markdig\\0.36.2\\ markdigbadheaders\\2017.12.11\\ markdigextensions.syntaxhighlighting\\1.0.3\\ markdigextensions.urlrewriter\\1.0.0\\ microsoft.applicationinsights.aspnetcore\\2.22.0\\ microsoft.applicationinsights.eventcountercollector\\2.22.0\\ microsoft.applicationinsights.profiler.aspnetcore\\2.6.0\\ microsoft.aspnetcore.authentication.certificate\\6.0.27\\ microsoft.aspnetcore.authentication.jwtbearer\\6.0.27\\ microsoft.aspnetcore.components.analyzers\\6.0.27\\ microsoft.aspnetcore.components.authorization\\6.0.27\\ microsoft.aspnetcore.components.forms\\6.0.27\\ microsoft.aspnetcore.components.web\\6.0.27\\ microsoft.aspnetcore.components.webassembly.server\\6.0.27\\ microsoft.aspnetcore.components.webassembly\\6.0.27\\ microsoft.aspnetcore.components.webview\\6.0.27\\ microsoft.aspnetcore.components\\6.0.27\\ microsoft.aspnetcore.dataprotection.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.diagnostics.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.hosting.windowsservices\\6.0.27\\ microsoft.aspnetcore.http.connections.client\\6.0.27\\ microsoft.aspnetcore.http.connections.common\\6.0.27\\ microsoft.aspnetcore.identity.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.identity.ui\\6.0.27\\ microsoft.aspnetcore.mvc.core\\2.2.5\\ microsoft.aspnetcore.mvc.razor.extensions\\6.0.27\\ microsoft.aspnetcore.mvc.razor.runtimecompilation\\6.0.27\\ microsoft.codeanalysis.razor\\6.0.27\\ microsoft.dependencyvalidation.analyzers\\0.11.0\\ microsoft.entityframeworkcore.abstractions\\6.0.27\\ microsoft.entityframeworkcore.analyzers\\6.0.27\\ microsoft.entityframeworkcore.design\\6.0.27\\ microsoft.entityframeworkcore.inmemory\\6.0.27\\ microsoft.entityframeworkcore.relational\\6.0.27\\ microsoft.entityframeworkcore.sqlserver.nettopologysuite\\6.0.27\\ microsoft.entityframeworkcore.sqlserver\\6.0.27\\ microsoft.entityframeworkcore.tools\\6.0.27\\ microsoft.entityframeworkcore\\6.0.27\\ microsoft.extensions.configuration.abstractions\\6.0.0\\ microsoft.extensions.dependencyinjection.abstractions\\6.0.0\\ microsoft.extensions.diagnostics.healthchecks.abstractions\\6.0.27\\ microsoft.extensions.diagnostics.healthchecks.entityframeworkcore\\6.0.27\\ microsoft.extensions.diagnostics.healthchecks\\6.0.27\\ microsoft.extensions.fileproviders.abstractions\\6.0.0\\ microsoft.extensions.hosting.abstractions\\6.0.0\\ microsoft.extensions.hosting.windowsservices\\6.0.1\\ microsoft.extensions.hosting\\6.0.1\\ microsoft.extensions.identity.core\\6.0.27\\ microsoft.netcore.dotnethostpolicy\\6.0.27\\ microsoft.visualstudio.services.client\\16.205.1\\ microsoft.visualstudio.web.codegeneration.design\\6.0.16\\ microsoft.visualstudio.web.codegeneration.entityframeworkcore\\6.0.16\\ microsoft.visualstudio.web.codegeneration\\6.0.16\\ mimekit\\4.3.0\\ mimetypes\\2.4.1\\ mirrorsharp.aspnetcore\\4.0.0\\ mirrorsharp.common\\3.0.8\\ monaco.pathtree\\1.2.2\\ morincer.markdig.renderers.docx\\1.0.1\\ newtonsoft.json\\13.0.3\\ npoi\\2.6.2\\ nuglify\\1.21.4\\ opengraph-net\\4.0.1\\ pek.markdig.highlightjs\\0.5.1\\ quartz.aspnetcore\\3.8.1\\ quartz.extensions.dependencyinjection\\3.8.1\\ quartz.extensions.hosting\\3.8.1\\ quartz.jobs\\3.8.1\\ quartz.plugins\\3.8.1\\ simplemvcsitemap\\4.0.1\\ snickler.rsscore\\2.0.0\\ statik.files\\0.14.0\\ statik\\0.14.0\\ swashbuckle.aspnetcore.annotations\\6.5.0\\ swashbuckle.aspnetcore.newtonsoft\\6.5.0\\ swashbuckle.aspnetcore.schemabuilder\\1.6.0\\ swashbuckle.aspnetcore.swagger\\6.5.0\\ swashbuckle.aspnetcore.swaggergen\\6.5.0\\ swashbuckle.aspnetcore.swaggerui\\6.5.0\\ swashbuckle.aspnetcore\\6.5.0\\ system.appcontext\\4.3.0\\ system.diagnostics.contracts\\4.3.0\\ system.diagnostics.eventlog\\6.0.0\\ system.diagnostics.stacktrace\\4.3.0\\ system.diagnostics.textwritertracelistener\\4.3.0\\ system.diagnostics.tracesource\\4.3.0\\ system.reactive\\6.0.0\\ system.servicemodel.syndication\\6.0.0\\ system.serviceprocess.servicecontroller\\6.0.1\\ webstoating.markdig.prism\\1.0.0\\ westwind.aspnetcore.livereload\\0.4.2\\ westwind.aspnetcore.markdown\\3.16.0\\ Centrální Správa IT Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba, Systém je Tenký/Tlustý Klient Již Nyní Obsahuje Kompletní centrální Správu IT pro Vaši Společnost Chtějte od svého IT oddělení Více a pořidtě jim toto řešení ještě dnes Jednoduchý Vývoj API - Webů - Aplikací Vývoj je už jen kopírování a vytváření nových tabulek dle potřeby. Řešení nabízí 2x více než Kdokoliv. Dvojí administrace je možná jak ze Systému, Tak i z Webu, Vyvynutí jednoho nebo druhého je stejně snadné na obou stranách. Vývoj Webu je Čistě 1-stránková Statická Aplikace. Takže Změny provádíte hned. Vývoj Serveru a Systému se provádí pomocí Visual Studia nebo již Brzy Online z Portálu. Sstémy bude možné Updatovat a vznikne i Distibuce Agend pro klienty, tedy možnost přivýdělku. Spolupráce, či Cokoliv jinéhjo je vždy Vítána. Právě se Implementuje Subdomain Web Hosting - Multi WebServer React,Node,Next,Static Client Dev Portal s Online Nástroji pro správu Projektů C# Online Centrální Logika Server Distributor Serveru a Systému Online Generátor Serverů Online Generátor Systémů SSH Server Online Dev, Web, Info, Help Portal JS Knihovny Statické nástoje Dynamic User Api - pro Controling, Reporty, Pivot, Grafy Neomezené Možnosti v Jediném Řešení Toto Řešení tak již nyní nabízí doslova unikátní možnosti nastavení jak webových systému, Tak Desktopových Aplikací, A c chcete Více? Plnohodnotná Správa celého IT včetně vlastího IS je součástí Řešení. Vlastní Web s možností kdykoliv si cokoliv ONLINE upravit a navíc jak ze Systému přes Editory či Online pomocí Web Editorů. Chybí jen Vlastní Email Server, který je již taky předchystaný. I Tak Je nachystána další Stovka různých Řešení, která budou postupně Implementována a nabídnuta Zákazníkům k Aktualizaci či rozšíření. Už Bude na každém z vás Jestli se dále Vydáte Vlastní Cestou, nebo Své Úsilí spojíme v plodné a přínosné činnosti. Jednoduchá Instalace Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba Systém je (tlustší)Tenký Klient (tlustý jen vekostí díky vlastnímu serveru,lze očistit na velikost 20MB) Nejlevnější ŘEŠENÍ IT může být Nejlepší To vám nabízí toto řešení. Vyvynutí systému si můžete objednat a díky již existujícím řešením je vývoj raketově rychlý. Nemluvě o implementacích technoogií pouze 1x, Následně je zařazena do výbavy Systému a díky portálu a chystanému Centrálnímu Vývoji pro aktualizace, centralizovaný vývoj a Vývoj Systému Online přes internet pomocí Grafického Studia to bude jen zábava. A mnoho dalšího snad najde své Zájemce Toto byl jen malinký výčet co vše je v projektu obsaženo a kam míří. Pokud vás Projekt zaujal, neváhejte mne kontaktovat a pořídit si jej třeba ještě dnes. Žádná investice se vám nevrátí tak rychle, jako v tomto případě. Podívejte se na Server online hned Teď Aktuální verzi Serveru najdete na KlikneteZde.cz. Online dokumentace, příklady, Git, Knihovny kódů, Nástroje, Online Dev Studio a centrální správu projektů naleznete již nyní či v blízké budoucnosti na tomto portálu. Již Nyní k dispozici 30denní plná verze Serveru EIC i Systému ESB k vyzkoušení ZDARMA. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz EIC + ESB = Nerozlučná Dvojice, která spolu dokáže VŠE"
  },
  "EASY-DATA/ESBOnlineTools.html": {
    "href": "EASY-DATA/ESBOnlineTools.html",
    "title": "Ukázka Veřejně Dostupných Nástrojů, Modulů Serveru",
    "keywords": "Ukázka Veřejně Dostupných Nástrojů, Modulů Serveru Implementovaný Automatický Překladač v celém Web řešení Udělao z vývoje Hračku. Na rovinu špatné nebo nedostatečné porozumění kolikrát hrozně napsané dokumentace jenejvětším kamenem úrazu. To je Veškerý Obsah otevřený přes Řešení EasyITcenter, protože vždy zabuduje překladač to stránky a přeloží ji. To znamená publikovat automaticky z jediného jazyka pro celý svět a naopak. viz ukázka Dokumentacích na: Nový Tento Nový Portál Dokumentace EIC&ESB ve 3 Dnech V přípravě Inteligentí nástroje pro Vývoj a Správu Projwektů Online Inteligentí Vývoj Projektů C# Online Inteligentní Vývoj Všech typů kódů s podporou Intelisense Online Porovnávání Souborů kódu s podporou Intelisense Online Mluvící Editor Kódu s možností Implementace InteliSense Online Database Desiger pro Vývoj DB Online Nový Online Developer Portal pro vývoj Projektů přes Internet z Editorů - ve fázi přípravy Webový Portál Generovaný pomocí Editoru v Systému Online Kompilace Kódu - připravuje se vlastní nástroj Další nástoje Serveru DB AutoManageApi Automaticky Generované API Rozhraní + Docs DB EasyDATABASE Manager Web Správa Databáze DB AutoEntity DB Schema Přehled Aktuální Struktury DB (/ServerCoreTools/csharpedit/) Inteligentní Vývoj C# Online Online Monitoring Serveru Dohledové Centrum Prahled Stavu Přehled Stavů Dohledového Centra Docs Prohlížeč verzované Dokumentace ExpertDocViewer Prohlížeč verzované Dokumentace pro Libovolné Webové Stránky ExpertDocEditor Editor verzované Dokumentace pro Libovolné Webové Stránky Ke stažení k Dispozici 30denní PLná Verze EIC + EBS včetně Databáze Privátní Github Server - Jestě ve vývoji XamlCZ - Export automaticky spracovaného Slovníku pro Řešení XamlEN - Export automaticky spracovaného Slovníku pro Řešení Automaticky udržovaný Slovník XamlEN Export Databazoveho Schematu ve formátu DGML Export DB Schema Robots Web Konfigurační Soubor Robot.txt sitemap InteliDocs Expert Prohlížeč sitemap Libovolné Vlastní Moduly ukázka PrintPage Webové Frameworky, Systémy, WebStránky, Nástroje, Editory, Generátoy Naleznetek prohlednutí Online na novém portálu Dokuemtace. Všechna řešení jsou statická takže není nutný žadný build a změny se projevují IHNED Nový Portál Dokumentace EIC&ESB ve 3 Dnech Implementované Nástroje Třetích stran Mermaid Grafika MarkDown Základy MarkDown Advance Mermaid Editor A velká spousta k implementaci Systémových a třetích stran"
  },
  "EASY-DATA/ESBTemplates.html": {
    "href": "EASY-DATA/ESBTemplates.html",
    "title": "",
    "keywords": "Šablona Formuláře Funkční Strana šablony C# To je 48st 3ablonz kde je definováno co s čím se má stát. Je to seznam funkcionalit kderěé sjo pro každou šablonu stejnou protože jsou součástí stejného systému. Šablona Obsahuje XAML - Gafický Návrh šablony, C# - Funkční strana šablony Jejich rozdílnost je pouze v případech kdy vybočují, např Vložit Soubor Atd. K tomu ale nachstách Knihovnu Funkcionalit a vy jen vyberete funkcionalitu. Zde Standardní Šablona. Všechny šablony najdete na portálu vývoje. Šablon je celkem 10 Standardní Šablona agendy = Přehled + Editace Šablona pouze spřehledem = Přehled Standardní Šablona s Sub Přehledem = Šabolna má navíc přehled subpoložek Standardní Šablona s sub položkami = navíc subpoložky (Faktura) Šablona Dokument Viewer Šablona Video Player Šablona Webrowser Šablona 3D STL Viewer Šablona Grafy Šablona Hardware Monitor Šablona Vlastní Formulář Šablony jsou plněpopsány v portálu, při kopíriování popis jen překáží Ukázka XAML, na portále bude již grafický CLICK vývoj <UserControl x:Class=\"EasyITSystemCenter.Pages.TemplateClassListAutoDBTranslationPage\" xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\" xmlns:Controls=\"http://metro.mahapps.com/winfx/xaml/controls\" xmlns:d=\"http://schemas.microsoft.com/expression/blend/2008\" xmlns:local=\"clr-namespace:EasyITSystemCenter.Pages\" xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\" xmlns:xctk=\"http://schemas.xceed.com/wpf/xaml/toolkit\" Name=\"Form\" HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\" d:DesignHeight=\"500\" d:DesignWidth=\"600\" Tag=\"Form\" mc:Ignorable=\"d\"> <Grid Margin=\"0\" HorizontalAlignment=\"Stretch\" VerticalAlignment=\"Stretch\" Background=\"{DynamicResource AccentColorBrush}\"> <Grid x:Name=\"ListView\" Visibility=\"Visible\"> <DataGrid x:Name=\"DgListView\" Width=\"{Binding Path=ActualWidth, ElementName=Form}\" Height=\"{Binding Path=ActualHeight, ElementName=Form}\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" AutoGenerateColumns=\"True\" AutoGeneratedColumns=\"DgListView_Translate\" IsReadOnly=\"True\" MouseDoubleClick=\"DgListView_MouseDoubleClick\" SelectionChanged=\"DgListView_SelectionChanged\" SelectionMode=\"Single\" /> </Grid> <Grid x:Name=\"ListForm\" Background=\"{DynamicResource WhiteBrush}\" Visibility=\"Visible\"> <Grid.ColumnDefinitions> <ColumnDefinition Width=\"300\" /> <ColumnDefinition Width=\"*\" /> </Grid.ColumnDefinitions> <Grid.RowDefinitions> <RowDefinition Height=\"Auto\" /> <RowDefinition Height=\"Auto\" /> <RowDefinition Height=\"80\" /> <RowDefinition Height=\"Auto\" /> <RowDefinition Height=\"*\" /> <RowDefinition Height=\"110\" /> </Grid.RowDefinitions> <Label x:Name=\"lbl_id\" Grid.Row=\"0\" Grid.Column=\"0\" HorizontalAlignment=\"Right\" HorizontalContentAlignment=\"Right\" /> <Controls:NumericUpDown x:Name=\"txt_id\" Grid.Row=\"0\" Grid.Column=\"1\" Margin=\"0,2,0,2\" HorizontalContentAlignment=\"Left\" Controls:TextBoxHelper.ClearTextButton=\"False\" Controls:TextBoxHelper.Watermark=\"\" HideUpDownButtons=\"True\" IsEnabled=\"False\" ToolTip=\"This unique identificator is read only value which is filled automatically by system\" /> <Label x:Name=\"lbl_systemName\" Grid.Row=\"1\" Grid.Column=\"0\" HorizontalAlignment=\"Right\" HorizontalContentAlignment=\"Right\" /> <TextBox x:Name=\"txt_systemName\" Grid.Row=\"1\" Grid.Column=\"1\" Margin=\"0,2,0,2\" Controls:TextBoxHelper.ClearTextButton=\"true\" Controls:TextBoxHelper.IsWaitingForData=\"True\" Controls:TextBoxHelper.Watermark=\"\" /> <Label x:Name=\"lbl_description\" Grid.Row=\"2\" Grid.Column=\"0\" HorizontalAlignment=\"Right\" HorizontalContentAlignment=\"Right\" /> <TextBox x:Name=\"txt_description\" Grid.Row=\"2\" Grid.Column=\"1\" Margin=\"0,2,0,2\" Controls:TextBoxHelper.ClearTextButton=\"True\" Controls:TextBoxHelper.Watermark=\"\" AcceptsReturn=\"True\" TextWrapping=\"Wrap\" VerticalScrollBarVisibility=\"Visible\" /> <Label x:Name=\"lbl_active\" Grid.Row=\"3\" Grid.Column=\"0\" HorizontalAlignment=\"Right\" HorizontalContentAlignment=\"Right\" /> <CheckBox x:Name=\"chb_active\" Grid.Row=\"3\" Grid.Column=\"1\" VerticalAlignment=\"Center\" /> <Button Name=\"btn_save\" Grid.Row=\"5\" Grid.Column=\"0\" Width=\"200\" Height=\"40\" Margin=\"44,21,0,44\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Bottom\" Click=\"BtnSave_Click\" Style=\"{DynamicResource AccentedSquareButtonStyle}\" /> <Button Name=\"btn_cancel\" Grid.Row=\"5\" Grid.Column=\"1\" Width=\"200\" Height=\"40\" Margin=\"44,21,44,44\" HorizontalAlignment=\"Right\" VerticalAlignment=\"Bottom\" Click=\"BtnCancel_Click\" Style=\"{DynamicResource AccentedSquareButtonStyle}\" /> </Grid> </Grid> </UserControl> A nyní Ukázka C# šablony, kde opravíte názvy políček v přehledu, SAVE, LOAD a vše ostatní zůstává. 3x Uprava- seznam polí v přehledu, Načtení polí, uložení. namespace EasyITSystemCenter.Pages { public partial class TemplateClassListAutoDBTranslationPage : UserControl { public static DataViewSupport dataViewSupport = new DataViewSupport(); public static TemplateClassList selectedRecord = new TemplateClassList(); public TemplateClassListAutoDBTranslationPage() { InitializeComponent(); _ = SystemOperations.SetLanguageDictionary(Resources, App.appRuntimeData.AppClientSettings.First(a => a.Key == \"sys_defaultLanguage\").Value); try { _ = DataOperations.TranslateFormFields(ListForm); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } _ = LoadDataList(); SetRecord(false); } public async Task<bool> LoadDataList() { MainWindow.ProgressRing = Visibility.Visible; try { DgListView.ItemsSource = await CommApi.GetApiRequest<List<TemplateClassList>>(ApiUrls.EasyITCenterTemplateClassList, (dataViewSupport.AdvancedFilter == null) ? null : \"Filter/\" + WebUtility.UrlEncode(dataViewSupport.AdvancedFilter.Replace(\"[!]\", \"\").Replace(\"{!}\", \"\")), App.UserData.Authentification.Token); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } MainWindow.ProgressRing = Visibility.Hidden; return true; } //ZDE upravíte políčka která chcete vidět nebo skrýt v přehledu private async void DgListView_Translate(object sender, EventArgs ex) { try { ((DataGrid)sender).Columns.ToList().ForEach(async e => { string headername = e.Header.ToString(); if (headername == \"SystemName\") { e.Header = await DBOperations.DBTranslation(headername); e.DisplayIndex = 1; } else if (headername == \"Description\") { e.Header = await DBOperations.DBTranslation(headername); e.DisplayIndex = 2; } else if (headername == \"Active\") { e.Header = await DBOperations.DBTranslation(headername); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 2; } else if (headername == \"Timestamp\") { e.Header = await DBOperations.DBTranslation(headername); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 1; } else if (headername == \"Id\") e.DisplayIndex = 0; else if (headername == \"UserId\") e.Visibility = Visibility.Hidden; }); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } } public void Filter(string filter) { try { if (filter.Length == 0) { dataViewSupport.FilteredValue = null; DgListView.Items.Filter = null; return; } dataViewSupport.FilteredValue = filter; DgListView.Items.Filter = (e) => { TemplateClassList user = e as TemplateClassList; return user.SystemName.ToLower().Contains(filter.ToLower()) || !string.IsNullOrEmpty(user.Description) && user.Description.ToLower().Contains(filter.ToLower()); }; } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } } public void NewRecord() { selectedRecord = new TemplateClassList(); dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true); } public void EditRecord(bool copy) { selectedRecord = (TemplateClassList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true, copy); } public async void DeleteRecord() { selectedRecord = (TemplateClassList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; MessageDialogResult result = await MainWindow.ShowMessageOnMainWindow(false, Resources[\"deleteRecordQuestion\"].ToString() + \" \" + selectedRecord.Id.ToString(), true); if (result == MessageDialogResult.Affirmative) { DBResultMessage dBResult = await CommApi.DeleteApiRequest(ApiUrls.EasyITCenterTemplateClassList, selectedRecord.Id.ToString(), App.UserData.Authentification.Token); if (dBResult.RecordCount == 0) await MainWindow.ShowMessageOnMainWindow(true, \"Exception Error : \" + dBResult.ErrorMessage); await LoadDataList(); SetRecord(false); } } private void DgListView_MouseDoubleClick(object sender, MouseButtonEventArgs e) { if (DgListView.SelectedItems.Count == 0) return; selectedRecord = (TemplateClassList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true); } private void DgListView_SelectionChanged(object sender, SelectionChangedEventArgs e) { if (DgListView.SelectedItems.Count > 0) { selectedRecord = (TemplateClassList)DgListView.SelectedItem; } else { selectedRecord = new TemplateClassList(); } dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(false); } //ULOžení Záznamu Zde opravíte políčka, //Doslova opačná podmínka je v Načtení záznau private async void BtnSave_Click(object sender, RoutedEventArgs e) { try { DBResultMessage dBResult; selectedRecord.Id = (int)((txt_id.Value != null) ? txt_id.Value : 0); selectedRecord.SystemName = txt_systemName.Text; selectedRecord.Description = txt_description.Text; selectedRecord.UserId = App.UserData.Authentification.Id; selectedRecord.Active = (bool)chb_active.IsChecked; selectedRecord.TimeStamp = DateTimeOffset.Now.DateTime; string json = JsonConvert.SerializeObject(selectedRecord); StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, \"application/json\"); if (selectedRecord.Id == 0) { dBResult = await CommApi.PutApiRequest(ApiUrls.EasyITCenterTemplateClassList, httpContent, null, App.UserData.Authentification.Token); } else { dBResult = await CommApi.PostApiRequest(ApiUrls.EasyITCenterTemplateClassList, httpContent, null, App.UserData.Authentification.Token); } if (dBResult.RecordCount > 0) { selectedRecord = new TemplateClassList(); await LoadDataList(); SetRecord(false); } else { await MainWindow.ShowMessageOnMainWindow(true, \"Exception Error : \" + dBResult.ErrorMessage); } } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } } private void BtnCancel_Click(object sender, RoutedEventArgs e) { selectedRecord = (DgListView.SelectedItems.Count > 0) ? (TemplateClassList)DgListView.SelectedItem : new TemplateClassList(); SetRecord(false); } //Načtení Záznamu Zde opravíte Vaše Políčka jen otočte polička oproti uložení private void SetRecord(bool? showForm = null, bool copy = false) { txt_id.Value = (copy) ? 0 : selectedRecord.Id; txt_systemName.Text = selectedRecord.SystemName; txt_description.Text = selectedRecord.Description; chb_active.IsChecked = (selectedRecord.Id == 0) ? bool.Parse(App.appRuntimeData.AppClientSettings.First(a => a.Key == \"beh_activeNewInputDefault\").Value) : selectedRecord.Active; if (showForm != null && showForm == true) { MainWindow.DataGridSelected = true; MainWindow.DataGridSelectedIdListIndicator = selectedRecord.Id != 0; MainWindow.dataGridSelectedId = selectedRecord.Id; MainWindow.DgRefresh = false; ListView.Visibility = Visibility.Hidden; ListForm.Visibility = Visibility.Visible; dataViewSupport.FormShown = true; } else { MainWindow.DataGridSelected = true; MainWindow.DataGridSelectedIdListIndicator = selectedRecord.Id != 0; MainWindow.dataGridSelectedId = selectedRecord.Id; MainWindow.DgRefresh = true; ListForm.Visibility = Visibility.Hidden; ListView.Visibility = Visibility.Visible; dataViewSupport.FormShown = showForm == null && !bool.Parse(App.appRuntimeData.AppClientSettings.First(a => a.Key == \"beh_CloseFormAfterSave\").Value); } } } } Ukázka popsané šablony, smysl má jen C#, na XAML nen9 moc co popisovat Jen seznámení s pár globálními pravidly, která vám ulehčují život // This is Template Page ListView + UserForm + SubListView Only namespace EasyITSystemCenter.Pages { /// <summary> /// This standartized Template is only for list view od Data table Called from MainWindow.cs on /// open New Tab /// </summary> public partial class TemplateClassListAutoDBTranslationWithSubViewPage : UserControl { /// <summary> /// Standartized declaring static page data and selected record for All Pages this method is /// for global working with pages Called from MainWindow.cs for Control of Button Menu and /// Selections (Report,Filter and more) All is setted as global Classes for All Pages and /// Work is Fully automatized by System core /// /// HERE you Define All Data Variables For This Form /// </summary> public static DataViewSupport dataViewSupport = new DataViewSupport(); public static BasicCurrencyList selectedRecord = new BasicCurrencyList(); public BusinessExtendedExchangeRateList selectedSubRecord = new BusinessExtendedExchangeRateList(); /// <summary> /// Initialize page with loading Dictionary and start loding data Manual work needed /// Translate All XAML fields by Resources Runned on start /// </summary> public TemplateClassListAutoDBTranslationWithSubViewPage() { InitializeComponent(); _ = SystemOperations.SetLanguageDictionary(Resources, App.appRuntimeData.AppClientSettings.First(a => a.Key == \"sys_defaultLanguage\").Value); try { _ = DataOperations.TranslateFormFields(ListForm); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } _ = LoadDataList(); SetRecord(false); } /// <summary> /// Standartized Method for Loading data. Manual Changing is needed for simple form is All /// changed By CLASNAME Chage, but If you need More API data for selection Here are Defined /// All incoming Data Loading is same centralized only change ClasName For Diferent Dataset /// /// After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This /// is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and /// Tag=Setting in XAML part) this method is for global working with pages Called from /// MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change /// </summary> /// <returns></returns> public async Task<bool> LoadDataList() { MainWindow.ProgressRing = Visibility.Visible; try { if (MainWindow.serviceRunning) DgListView.ItemsSource = await CommApi.GetApiRequest<List<BasicCurrencyList>>(ApiUrls.EasyITCenterBasicCurrencyList, (dataViewSupport.AdvancedFilter == null) ? null : \"Filter/\" + WebUtility.UrlEncode(dataViewSupport.AdvancedFilter.Replace(\"[!]\", \"\").Replace(\"{!}\", \"\")), App.UserData.Authentification.Token); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } MainWindow.ProgressRing = Visibility.Hidden; return true; } /// <summary> /// Standartized method for translating column names of DatagidView (List Data) Manual /// Changing is needed for set Translate of Column Names via Dictionary Items Here you can /// set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style /// This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and /// Tag=Setting in XAML part) this method is for global working with page internal reaction /// on DatagrigView DataFiling on Start Page Runned On Page Loading /// </summary> /// <param name=\"sender\"></param> /// <param name=\"ex\"> </param> private async void DgListView_Translate(object sender, EventArgs ex) { ((DataGrid)sender).Columns.ToList().ForEach(async e => { string headername = e.Header.ToString(); if (headername == \"Name\") { e.Header = await DBOperations.DBTranslation(\"fname\"); e.DisplayIndex = 1; } else if (headername == \"ExchangeRate\") { e.Header = await DBOperations.DBTranslation(headername); e.DisplayIndex = 2; } else if (headername == \"Fixed\") { e.Header = await DBOperations.DBTranslation(headername); e.DisplayIndex = 3; } else if (headername == \"Description\") e.Header = await DBOperations.DBTranslation(headername); else if (headername == \"Default\") { e.Header = await DBOperations.DBTranslation(headername); e.DisplayIndex = DgListView.Columns.Count - 3; } else if (headername == \"Active\") { e.Header = await DBOperations.DBTranslation(headername); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 2; } else if (headername == \"Timestamp\") { e.Header = await DBOperations.DBTranslation(headername); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 1; } else if (headername == \"Id\") e.DisplayIndex = 0; else if (headername == \"UserId\") e.Visibility = Visibility.Hidden; }); } /// <summary> /// Standartized method for searching match in setted columns. Searched value is from the /// simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered /// columns by Search Value This is on Every page ('View' and 'Form' Types) without /// 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global /// working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs /// when Search value Inserted /// </summary> /// <param name=\"filter\"></param> public void Filter(string filter) { try { if (filter.Length == 0) { dataViewSupport.FilteredValue = null; DgListView.Items.Filter = null; return; } dataViewSupport.FilteredValue = filter; DgListView.Items.Filter = (e) => { BasicCurrencyList user = e as BasicCurrencyList; return user.Name.ToLower().Contains(filter.ToLower()) || !string.IsNullOrEmpty(user.Description) && user.Description.ToLower().Contains(filter.ToLower()); }; } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } } /// <summary> /// Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done /// By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on /// New button Click Only Set Record And Hide Dataview and Show Detail /// </summary> public void NewRecord() { selectedRecord = new BasicCurrencyList(); dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true); } /// <summary> /// Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done /// By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on /// Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record /// </summary> public void EditRecord(bool copy) { selectedRecord = (BasicCurrencyList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true, copy); } /// <summary> /// Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done /// By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on /// Delete button Click Show MainWindow Standartized Message with info About Delete and /// After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record /// </summary> public async void DeleteRecord() { selectedRecord = (BasicCurrencyList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; MessageDialogResult result = await MainWindow.ShowMessageOnMainWindow(false, Resources[\"deleteRecordQuestion\"].ToString() + \" \" + selectedRecord.Id.ToString(), true); if (result == MessageDialogResult.Affirmative) { DBResultMessage dBResult = await CommApi.DeleteApiRequest(ApiUrls.EasyITCenterBasicCurrencyList, selectedRecord.Id.ToString(), App.UserData.Authentification.Token); if (dBResult.RecordCount == 0) await MainWindow.ShowMessageOnMainWindow(true, \"Exception Error : \" + dBResult.ErrorMessage); _ = LoadDataList(); SetRecord(false); } } /// <summary> /// Standartized method for selecting and opening Detail Form. This is only View Page, that /// is only for Select record This is full automatic, not needed manual work This is on /// Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and /// Tag=Setting in XAML part) this method is for global working page its local control From XAML /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"> </param> private void DgListView_MouseDoubleClick(object sender, MouseButtonEventArgs e) { if (DgListView.SelectedItems.Count == 0) return; selectedRecord = (BasicCurrencyList)DgListView.SelectedItem; dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(true); } /// <summary> /// Standartized method for select one record only. This is full automatic, not needed /// manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type /// (Name=Setting and Tag=Setting in XAML part) this method is for global working page its /// local control From XAML /// </summary> /// <param name=\"sender\">The source of the event.</param> /// <param name=\"e\"> /// The <see cref=\"SelectionChangedEventArgs\"/> instance containing the event data. /// </param> private void DgListView_SelectionChanged(object sender, SelectionChangedEventArgs e) { if (DgListView.SelectedItems.Count > 0) { selectedRecord = (BasicCurrencyList)DgListView.SelectedItem; } else { selectedRecord = new BasicCurrencyList(); } dataViewSupport.SelectedRecordId = selectedRecord.Id; SetRecord(false); } /// <summary> /// Standartized method for Save Record And return to Dataview. Manual work need, Here is /// Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM /// to SELECTED RECORD By ClasName Replacing All other changes are automaticaly /// (API,DatasetType), just must define and control Each Field Of Dataset this method is for /// global working page its local control From XAML /// </summary> /// <param name=\"sender\">The source of the event.</param> /// <param name=\"e\"> /// The <see cref=\"RoutedEventArgs\"/> instance containing the event data. /// </param> private async void BtnSave_Click(object sender, RoutedEventArgs e) { try { DBResultMessage dBResult; selectedRecord.Id = (int)((txt_id.Value != null) ? txt_id.Value : 0); selectedRecord.Name = txt_name.Text; selectedRecord.ExchangeRate = (decimal)txt_exchangeRate.Value; selectedRecord.Fixed = (bool)chb_fixed.IsChecked; selectedRecord.Description = tb_description.Text; selectedRecord.Default = (bool)chb_default.IsChecked; selectedRecord.UserId = App.UserData.Authentification.Id; selectedRecord.Active = (bool)chb_active.IsChecked; selectedRecord.TimeStamp = DateTimeOffset.Now.DateTime; string json = JsonConvert.SerializeObject(selectedRecord); StringContent httpContent = new StringContent(json, System.Text.Encoding.UTF8, \"application/json\"); if (selectedRecord.Id == 0) { dBResult = await CommApi.PutApiRequest(ApiUrls.EasyITCenterBasicCurrencyList, httpContent, null, App.UserData.Authentification.Token); } else { dBResult = await CommApi.PostApiRequest(ApiUrls.EasyITCenterBasicCurrencyList, httpContent, null, App.UserData.Authentification.Token); } if (dBResult.RecordCount > 0) { selectedRecord = new BasicCurrencyList(); await LoadDataList(); SetRecord(null); } else { await MainWindow.ShowMessageOnMainWindow(true, \"Exception Error : \" + dBResult.ErrorMessage); } } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } } /// <summary> /// Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This /// is full automatic, not needed manual work This is on Every page ('View' and 'Form' /// Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is /// for global working page its local control From XAML /// </summary> /// <param name=\"sender\">The source of the event.</param> /// <param name=\"e\"> /// The <see cref=\"RoutedEventArgs\"/> instance containing the event data. /// </param> private void BtnCancel_Click(object sender, RoutedEventArgs e) { selectedRecord = (DgListView.SelectedItems.Count > 0) ? (BasicCurrencyList)DgListView.SelectedItem : new BasicCurrencyList(); SetRecord(false); } /// <summary> /// Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to /// Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset /// (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other /// changes are automaticaly (API,DatasetType), just must define and control Each Field Of /// Dataset this method is for global working page its local control From XAML /// /// In this type Form Here Are loaded Data for SublistView (on knows selected record for /// correct join) /// </summary> /// <param name=\"showForm\">if set to <c>true</c> [show form].</param> /// <param name=\"copy\"> if set to <c>true</c> [copy].</param> private void SetRecord(bool? showForm = null, bool copy = false) { txt_id.Value = (copy) ? 0 : selectedRecord.Id; txt_name.Text = selectedRecord.Name; txt_exchangeRate.Value = (double)selectedRecord.ExchangeRate; chb_fixed.IsChecked = selectedRecord.Fixed; tb_description.Text = selectedRecord.Description; chb_default.IsChecked = selectedRecord.Default; chb_active.IsChecked = (selectedRecord.Id == 0) ? bool.Parse(App.appRuntimeData.AppClientSettings.First(a => a.Key == \"beh_activeNewInputDefault\").Value) : selectedRecord.Active; if (showForm != null && showForm == true) { MainWindow.DataGridSelected = true; MainWindow.DataGridSelectedIdListIndicator = selectedRecord.Id != 0; MainWindow.dataGridSelectedId = selectedRecord.Id; MainWindow.DgRefresh = false; ListView.Visibility = Visibility.Hidden; ListForm.Visibility = Visibility.Visible; dataViewSupport.FormShown = true; if (!selectedRecord.Fixed) { SubListView.Visibility = Visibility.Visible; LoadSubDataList(); } else { SubListView.Visibility = Visibility.Hidden; } } else { MainWindow.DataGridSelected = true; MainWindow.DataGridSelectedIdListIndicator = selectedRecord.Id != 0; MainWindow.dataGridSelectedId = selectedRecord.Id; MainWindow.DgRefresh = true; ListForm.Visibility = Visibility.Hidden; ListView.Visibility = Visibility.Visible; dataViewSupport.FormShown = showForm == null && !bool.Parse(App.appRuntimeData.AppClientSettings.First(a => a.Key == \"beh_CloseFormAfterSave\").Value); } } /// <summary> /// Standartized Method for Loading SubData. Manual Changing is needed for simple form is /// All changed By CLASNAME Chage, but If you need More API data for selection Here are /// Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset /// /// After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This /// is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and /// Tag=Setting in XAML part) this method is for global working with pages Called from /// MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change /// </summary> /// <returns></returns> public async void LoadSubDataList() { MainWindow.ProgressRing = Visibility.Visible; List<BusinessExchangeRateList> exchangeRateList = new List<BusinessExchangeRateList>(); List<BusinessExtendedExchangeRateList> BusinessExtendedExchangeRateList = new List<BusinessExtendedExchangeRateList>(); try { if (MainWindow.serviceRunning) exchangeRateList = await CommApi.GetApiRequest<List<BusinessExchangeRateList>>(ApiUrls.EasyITCenterBusinessExchangeRateList, null, App.UserData.Authentification.Token); exchangeRateList.Where(a => a.CurrencyId == selectedRecord.Id).ToList().ForEach(record => { BusinessExtendedExchangeRateList item = new BusinessExtendedExchangeRateList() { Id = record.Id, CurrencyId = record.CurrencyId, Value = record.Value, ValidFrom = record.ValidFrom, ValidTo = record.ValidTo, Description = record.Description, UserId = record.UserId, Active = record.Active, TimeStamp = record.TimeStamp, Currency = selectedRecord.Name }; BusinessExtendedExchangeRateList.Add(item); }); DgSubListView.ItemsSource = BusinessExtendedExchangeRateList; DgSubListView.Items.Refresh(); } catch (Exception autoEx) { App.ApplicationLogging(autoEx); } MainWindow.ProgressRing = Visibility.Hidden; } /// <summary> /// Standartized method for translating column names of SubDatagidView (List Data) Manual /// Changing is needed for set Translate of Column Names via Dictionary Items Here you can /// set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style /// This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and /// Tag=Setting in XAML part) this method is for global working with page internal reaction /// on DatagrigView DataFiling on Start Page Runned On Page Loading /// </summary> /// <param name=\"sender\"></param> /// <param name=\"ex\"> </param> private void DgSubListView_Translate(object sender, EventArgs ex) { ((DataGrid)sender).Columns.ToList().ForEach(e => { string headername = e.Header.ToString(); if (headername == \"Currency\") e.Header = Resources[\"currency\"].ToString(); else if (headername == \"Value\") e.Header = Resources[\"value\"].ToString(); else if (headername == \"ValidFrom\") e.Header = Resources[\"validFrom\"].ToString(); else if (headername == \"ValidTo\") e.Header = Resources[\"validTo\"].ToString(); else if (headername == \"Description\") e.Header = Resources[\"description\"].ToString(); else if (headername == \"Active\") { e.Header = Resources[\"active\"].ToString(); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 2; } else if (headername == \"Timestamp\") { e.Header = Resources[\"timestamp\"].ToString(); e.CellStyle = ProgramaticStyles.gridTextRightAligment; e.DisplayIndex = DgListView.Columns.Count - 1; } else if (headername == \"Id\") e.DisplayIndex = 0; else if (headername == \"UserId\") e.Visibility = Visibility.Hidden; else if (headername == \"CurrencyId\") e.Visibility = Visibility.Hidden; }); } /// <summary> /// Standartized method for Loading Data for Selected Record This is full automatic, not /// needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' /// Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page /// its local control From XAML /// </summary> /// <param name=\"sender\">The source of the event.</param> /// <param name=\"e\"> /// The <see cref=\"RoutedEventArgs\"/> instance containing the event data. /// </param> private void Fixed_Checked(object sender, RoutedEventArgs e) => SubListView.Visibility = Visibility.Hidden; private void Fixed_UnChecked(object sender, RoutedEventArgs e) { SubListView.Visibility = Visibility.Visible; LoadSubDataList(); } } }"
  },
  "EASY-DATA/ESBdocfx/index.html": {
    "href": "EASY-DATA/ESBdocfx/index.html",
    "title": "Dokumentace EasySYSTEMbuilder to je GroupWare",
    "keywords": "Dokumentace EasySYSTEMbuilder to je GroupWare Krátký Úvod pro seznámení s Projektem Easy SYSTEM buider a jeho významu a přínosem pro celý svět. Aktuální verzi EasySYSTEMBuilder můžete vyzkoušet online. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz Co je EasySYSTEMbuilder? EASY-SYSTEM-BUILDER [ESB] je C# WPF Visual Studio Projekt zaměřený na extrémně snadný a rychlý vývoj JAKÉHOKOLI SYSTÉMU pomocí připravených Šablon Formulářů. ESB je tak Univerzální SYSTÉMOVÁ ŠABLONA pro další vývoj pouze pomocí grafických Formulářů a brzy již v Grafickém Studiu, kde se vám FORMULÁŘ i sám Vygeneruje na základě struktury Dat dané Tabulky [Faktury,seznam adres] a vy jen doladíte. Systémové šablony jsou stále stejné a vy tedy nemusíte nic než nastavit správně nová políčka. Vše ostatní je součástí šablony, která obsahuje Obsluhující funkcionality. Systém jako takový není totiž Nic jiného než Seznam Formulářů s rozdílnými Daty. A přesně takto je postaven EasySYSTEMbuilder. Dokonale nastavené Jádro systému, spravuje vše další potřebné k plnohodnotnému chodu. Systém disponuje všemi běžnými funkcionalitami, Tiskem, správou ,MultiJazyčností, MultiMedia, 3D, i jako Centrální Klient více Serverů najednou tedy více systémů a mnohem Více. Tento Systém je plně kompatibilní s každým možným typem Systému. Ať už Informační, Dotykový, Nadstavba, Controling, Reporting, Monitor Hardware, Dotykové Kiosky, Plánovací či Řidící či Monitorovací Terminály a Systémy, Výrobní Terminály a již Bzy i jako Ovladací Panely výrobních Strojů SIEMENS. A to Zdaleka není jedniná Výhoda. Jen na Github.com máte stovku ne-li Tisíce téměř hotových nástrojů, funkcionalit, editorů, prohlížečů, designů, příkladů, nápadů řešení, která vás posunou Vpřed. Implementované Technologie V dnešní Době Frameworků, což se dá nazvat technologií, je nepřeberné množstí možností. Obecně platí že se používá 1 Framework aby nedocházelo ke kolizi. Ne v tomto Případě. Frameforků je implementováno hned 5. Metro, WPF NET, XCEED, WpfLightToolkit, HelixToolkit Tím máme vyřešeny objekty pro formuláře více než nadstadartně. A nejen to, lze implementovat i naprosto rozdílné technologie, jako např WEB aplikace pouhým vložením do rámečku Okna Windows a máte novou aplikaci. Systém totiž hostuje vlastní web server. Aktuálně je v Systému implementováno přes 100 pečlivě vybraných technologií, které nabízí tolik možností, že je není ani možné všechny využít. Modularní SYSTÉM to jsou jen různé typy Šablon Přesně tak. A ty jsou již připraveny pro 90% všech standartních systémů. A snadno lze vytvořit nové, Díky Internetu je i Sebesložitější Formulář, jen Formulář. Stříhání Videa je zaimplementováno do týdne. Tak si představte co můžete mít do 1 roku. Systemé již aktálně funguje jako Administrace celého IT odvětví a malý Fakturační Systém. Během 5dnů Byl i dodán Dotykový Terminál pro Vykazování práce ve Výrobní společnosti, Šablony se zkladají z Designu - Ten si snadno upravíte dle již existujícíh Agend, a obsluhujících funkcionalit, kde jen upravíte nová datová pole. Řešení system EasySYSTEMbuilder obsahuje 15x Rozšiřující Nástroje, Editory, Generátory, Funkcionality 500+ Objektů pro tvorbu Formlářů pro každý Typ Systému Pluginy - Chystá se Celé Aplikace jako plugin = Formulář, proces(např WorkWlow) 10x Hostované Windows či Jiné nativní Aplikace : React, Electron 20x Hostované Web aplikace spuštěné v jádru systému (web serveru) Multi Pobočkový Fakturační, Nabídkový, Objednávkový Systém s Pokladnou Modul Vykazování Práce ve Výrobě včetně Reportingu Kopletní Správa Serverovýh Agend Emailing,WebBlog, NewsLetter, Notifikace, Privátní Zprávy Dohledové Centrum Sdílení na Internetu, Live Web Data Monitoring Reporting včetně Report Builderu Agendy Nástrojů, Hormadných Operací Atd. Kompletní Správa Multimedia Online Dokumentace Licenční Server Komlpetní Správa a Vývoj Web Portálu Online + Dynamické Moduly Pránovač Úloh, Zasílání Emailů, spouštení Procesů, Socket, SQL Calendář A to není zdaleka vše. Na spoustu věcí mít web nikdy nebude. Aktuálně Vytvořená správsa serveru včetně webového portálu se spravuje snáz z aplikace než přímo z webu. Aktuálně již nyní slouží systém k online Vývoji webového portálu. Technologický List Seznam Balíčků rozšiřující Jádro Systému ESB avalonia\\11.0.0\\ref\\net461\\Avalonia.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Base.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Controls.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.DesignerSupport.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Dialogs.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Markup.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Markup.Xaml.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.Metal.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.MicroCom.dll avalonia\\11.0.0\\ref\\net461\\Avalonia.OpenGL.dll avalonia.remote.protocol\\11.0.0\\lib\\netstandard2.0\\Avalonia.Remote.Protocol.dll avalonia.avaloniaedit\\11.0.0\\lib\\netstandard2.0\\AvaloniaEdit.dll caliburn.micro.core\\2.0.2\\lib\\net45\\Caliburn.Micro.dll caliburn.micro\\2.0.2\\lib\\net45\\Caliburn.Micro.Platform.dll cefsharp.common\\116.0.230\\lib\\net462\\CefSharp.dll cefsharp.common\\116.0.230\\lib\\net462\\CefSharp.Core.dll cefsharp.wpf\\116.0.230\\lib\\net462\\CefSharp.Wpf.dll cefsharp.wpf.hwndhost\\116.0.230\\lib\\net462\\CefSharp.Wpf.HwndHost.dll controlzex\\3.0.2.4\\lib\\net462\\ControlzEx.dll cyotek.drawing.bitmapfont\\2.0.0\\lib\\net462\\Cyotek.Drawing.BitmapFont.dll deviceid\\6.6.0\\lib\\net40\\DeviceId.dll deviceid.windows\\6.6.0\\lib\\net40\\DeviceId.Windows.dll deviceid.windows.wmi\\6.6.0\\lib\\net40\\DeviceId.Windows.Wmi.dll DotNetProjects.DataVisualization.Toolkit.dll dDotNetToolkit.Wpf.Metro.Dialogs.dll dragablz\\0.0.3.234\\lib\\net45\\Dragablz.dll fluent.ribbon\\10.0.4\\lib\\net462\\Fluent.dll geminiwpf\\0.7.0\\lib\\net45\\Gemini.dll gemini.commandline\\1.0.3\\lib\\net40\\Gemini.CommandLine.dll gemini.modules.codecompiler\\0.7.0\\lib\\net45\\Gemini.Modules.CodeCompiler.dll gemini.modules.codeeditor\\0.7.0\\lib\\net45\\Gemini.Modules.CodeEditor.dll gemini.modules.errorlist\\0.7.0\\lib\\net45\\Gemini.Modules.ErrorList.dll gemini.modules.grapheditor\\0.7.0\\lib\\net45\\Gemini.Modules.GraphEditor.dll gemini.modules.inspector\\0.7.0\\lib\\net45\\Gemini.Modules.Inspector.dll gemini.modules.metro\\0.5.0\\lib\\net40\\Gemini.Modules.Metro.dll gemini.modules.output\\0.7.0\\lib\\net45\\Gemini.Modules.Output.dll gemini.modules.propertygrid\\0.7.0\\lib\\net45\\Gemini.Modules.PropertyGrid.dll gemini.services\\1.0.2\\lib\\dotnet5.4\\Gemini.Services.dll gu.localization\\6.1.0\\lib\\net45\\Gu.Localization.dll gu.wpf.localization\\6.1.0\\lib\\net45\\Gu.Wpf.Localization.dll helixtoolkit\\2.24.0\\lib\\netstandard2.0\\HelixToolkit.dll helixtoolkit.wpf\\2.24.0\\lib\\net462\\HelixToolkit.Wpf.dll helixtoolkit.wpf.input\\2.24.0\\lib\\net462\\HelixToolkit.Wpf.Input.dll helixtoolkit.wpf.sharpdx\\2.24.0\\lib\\net462\\HelixToolkit.Wpf.SharpDX.dll htmlagilitypack\\1.11.53\\lib\\Net45\\HtmlAgilityPack.dll avalonedit\\6.3.0.90\\lib\\net462\\ICSharpCode.AvalonEdit.dll icsharpcode.wpfdesigner\\8.1.49\\lib\\net45\\ICSharpCode.WpfDesign.dll icsharpcode.wpfdesigner\\8.1.49\\lib\\net45\\ICSharpCode.WpfDesign.Designer.dll ICSharpCode.WpfDesign.Designer.ExpressionBlendInteractionAddon.dll ICSharpCode.WpfDesign.XamlDom.dll Itenso.Windows.Controls.ListViewLayout.dll itextsharp.4.1.6.0\\4.1.6\\lib\\itextsharp.dll wpftoolsawesome\\1.0.9.2\\lib\\net45\\JPB.WPFToolsAwesome.dll livecharts\\0.9.7\\lib\\net45\\LiveCharts.dll livecharts.wpf\\0.9.7\\lib\\net45\\LiveCharts.Wpf.dll log4net\\2.0.15\\lib\\net45\\log4net.dll mahapps.metro\\1.6.5\\lib\\net46\\MahApps.Metro.dll MahApps.Metro.IconPacks.dll MahApps.Metro.IconPacks.BootstrapIcons.dll MahApps.Metro.IconPacks.BoxIcons.dll MahApps.Metro.IconPacks.Codicons.dll MahApps.Metro.IconPacks.Coolicons.dll mahapps.metro.iconpacks.fontawesome\\4.11.0\\lib\\net46\\MahApps.Metro.IconPacks.Core.dll MahApps.Metro.IconPacks.Entypo.dll MahApps.Metro.IconPacks.EvaIcons.dll MahApps.Metro.IconPacks.FeatherIcons.dll MahApps.Metro.IconPacks.FileIcons.dll MahApps.Metro.IconPacks.Fontaudio.dll mahapps.metro.iconpacks.fontawesome\\4.11.0\\lib\\net46\\MahApps.Metro.IconPacks.FontAwesome.dll MahApps.Metro.IconPacks.Fontisto.dll MahApps.Metro.IconPacks.ForkAwesome.dll MahApps.Metro.IconPacks.Ionicons.dll MahApps.Metro.IconPacks.JamIcons.dll MahApps.Metro.IconPacks.Material.dll MahApps.Metro.IconPacks.MaterialDesign.dll MahApps.Metro.IconPacks.MaterialLight.dll MahApps.Metro.IconPacks.Microns.dll MahApps.Metro.IconPacks.Modern.dll MahApps.Metro.IconPacks.Octicons.dll MahApps.Metro.IconPacks.PicolIcons.dll MahApps.Metro.IconPacks.PixelartIcons.dll MahApps.Metro.IconPacks.RadixIcons.dll MahApps.Metro.IconPacks.RemixIcon.dll MahApps.Metro.IconPacks.RPGAwesome.dll MahApps.Metro.IconPacks.SimpleIcons.dll MahApps.Metro.IconPacks.Typicons.dll MahApps.Metro.IconPacks.Unicons.dll MahApps.Metro.IconPacks.VaadinIcons.dll MahApps.Metro.IconPacks.WeatherIcons.dll MahApps.Metro.IconPacks.Zondicons.dll mahapps.metro.simplechildwindow\\1.5.0\\lib\\net45\\MahApps.Metro.SimpleChildWindow.dll xaml.mapcontrol\\9.0.1\\lib\\net462\\MapControl.WPF.dll microcom.runtime\\0.11.0\\lib\\netstandard2.0\\MicroCom.Runtime.dll microsoft.bcl.asyncinterfaces\\8.0.0\\lib\\net462\\Microsoft.Bcl.AsyncInterfaces.dll microsoft.codeanalysis.common\\1.1.1\\lib\\net45\\Microsoft.CodeAnalysis.dll microsoft.codeanalysis.csharp\\1.1.1\\lib\\net45\\Microsoft.CodeAnalysis.CSharp.dll C:\\Program Files (x86)\\Reference Microsoft.CSharp.dll caching.abstractions\\8.0.0\\lib\\net462\\Caching.Abstractions.dll caching.memory\\8.0.0\\lib\\net462\\Caching.Memory.dll dependencyinjection.abstractions\\8.0.0\\lib\\net462\\DependencyInjection.Abstractions.dll logging.abstractions\\8.0.0\\lib\\net462\\Logging.Abstractions.dll options\\8.0.0\\lib\\net462\\Options.dll primitives\\8.0.0\\lib\\net462\\Primitives.dll microsoft.maps.mapcontrol.wpf\\1.0.0.3\\lib\\net40-Client\\Microsoft.Maps.MapControl.WPF.dll \\4.2.2\\lib\\net45.dll .diagnostics\\4.2.2\\lib\\net45.Diagnostics.dll .filesystems\\4.2.2\\lib\\net45.FileSystems.dll .host.httplistener\\4.2.2\\lib\\net45.Host.HttpListener.dll .host.systemweb\\4.2.2\\lib\\net45.Host.SystemWeb.dll .hosting\\4.2.2\\lib\\net45.Hosting.dll .staticfiles\\4.2.2\\lib\\net45.StaticFiles.dll microsoft.web.webview2\\1.0.2420.47\\lib\\net45\\Microsoft.Web.WebView2.Core.dll microsoft.web.webview2\\1.0.2420.47\\lib\\net45\\Microsoft.Web.WebView2.WinForms.dll microsoft.web.webview2\\1.0.2420.47\\lib\\net45\\Microsoft.Web.WebView2.Wpf.dll E:\\Program Files\\Microsoft visual Microsoft.Win32.Primitives.dll microsoft.xaml.behaviors.wpf\\1.1.39\\lib\\net45\\Microsoft.Xaml.Behaviors.dll C:\\Program Files (x86)\\Reference mscorlib.dll E:\\Program Files\\Microsoft visual netfx.force.conflicts.dll E:\\Program Files\\Microsoft visual netstandard.dll newtonsoft.json\\13.0.3\\lib\\net45\\Newtonsoft.Json.dll newtonsoft.json.bson\\1.0.2\\lib\\net45\\Newtonsoft.Json.Bson.dll nhotkey\\2.1.0\\lib\\net45\\NHotkey.dll nhotkey.wpf\\2.1.0\\lib\\net45\\NHotkey.Wpf.dll * notifications.wpf\\0.1.1\\lib\\net461\\Notifications.Wpf.dll owin\\1.0.0\\lib\\net40\\Owin.dll * panandzoom\\2.2.0\\lib\\net461\\PanAndZoom.dll C:\\Program Files (x86)\\Reference PresentationCore.dll C:\\Program Files (x86)\\Reference PresentationFramework.dll C:\\Program Files (x86)\\Reference PresentationFramework.Aero.dll * sharpdx\\4.2.0\\lib\\net45\\SharpDX.dll sharpdx.d3dcompiler\\4.2.0\\lib\\net45\\SharpDX.D3DCompiler.dll sharpdx.direct2d1\\4.2.0\\lib\\net45\\SharpDX.Direct2D1.dll sharpdx.direct3d11\\4.2.0\\lib\\net45\\SharpDX.Direct3D11.dll sharpdx.direct3d9\\4.2.0\\lib\\net45\\SharpDX.Direct3D9.dll sharpdx.dxgi\\4.2.0\\lib\\net45\\SharpDX.DXGI.dll sharpdx.mathematics\\4.2.0\\lib\\net45\\SharpDX.Mathematics.dll C:\\Program Files (x86)\\Reference System.dll E:\\Program Files\\Microsoft visual System.AppContext.dll system.buffers\\4.5.1\\ref\\net45\\System.Buffers.dll System.Collections.dll System.Collections.Concurrent.dll system.collections.immutable\\1.6.0\\lib\\netstandard2.0\\System.Collections.Immutable.dll System.Collections.NonGeneric.dll System.Collections.Specialized.dll System.ComponentModel.dll ComponentModel.Annotations.dll C:\\Program Files (x86)\\Reference System.ComponentModel.Composition.dll C:\\Program Files (x86)\\Reference System.ComponentModel.DataAnnotations.dll System.ComponentModel.EventBasedAsync.dll System.ComponentModel.Primitives.dll System.ComponentModel.TypeConverter.dll System.Configuration.dll System.Console.dll System.Core.dll System.Data.dll System.Data.Common.dll System.Data.DataSetExtensions.dll System.Diagnostics.Contracts.dll System.Diagnostics.Debug.dll System.Diagnostics.FileVersionInfo.dll System.Diagnostics.Process.dll System.Diagnostics.StackTrace.dll System.Diagnostics.TextWriterTraceListener.dll System.Diagnostics.Tools.dll System.Diagnostics.TraceSource.dll System.Diagnostics.Tracing.dll System.DirectoryServices.AccountManagement.dll System.Drawing.dll System.Drawing.Primitives.dll System.Dynamic.Runtime.dll System.Globalization.dll System.Globalization.Calendars.dll System.Globalization.Extensions.dll System.IO.dll System.IO.Compression.dll System.IO.Compression.FileSystem.dll System.IO.Compression.ZipFile.dll System.IO.FileSystem.dll System.IO.FileSystem.DriveInfo.dll System.IO.FileSystem.Primitives.dll System.IO.FileSystem.Watcher.dll System.IO.IsolatedStorage.dll System.IO.MemoryMappedFiles.dll System.IO.Pipes.dll System.IO.UnmanagedMemoryStream.dll System.Linq.dll System.Linq.Expressions.dll System.Linq.Parallel.dll System.Linq.Queryable.dll System.Management.dll * system.memory\\4.5.5\\lib\\net461\\System.Memory.dll C:\\Program Files (x86)\\Reference * System.Net.dll System.Net.Http.dll microsoft.aspnet.webapi.client\\6.0.0\\lib\\net45\\System.Net.Http.Formatting.dll System.Net.NameResolution.dll System.Net.NetworkInformation.dll System.Net.Ping.dll System.Net.Primitives.dll System.Net.Requests.dll System.Net.Security.dll System.Net.Sockets.dll System.Net.WebHeaderCollection.dll System.Net.WebSockets.dll System.Net.WebSockets.Client.dll System.Numerics.dll system.numerics.vectors\\4.5.0\\ref\\net46\\System.Numerics.Vectors.dll System.ObjectModel.dll System.Reflection.dll Facades\\System.Reflection.Emit.dll Facades\\System.Reflection.Emit.ILGeneration.dll Facades\\System.Reflection.Emit.Lightweight.dll System.Reflection.Extensions.dll system.reflection.metadata\\1.1.0\\lib\\dotnet5.2\\System.Reflection.Metadata.dll System.Reflection.Primitives.dll system.reflection.typeextensions\\4.3.0\\ref\\net462\\System.Reflection.TypeExtensions.dll System.Resources.Reader.dll System.Resources.ResourceManager.dll System.Resources.Writer.dll System.Runtime.dll C:\\Program Files\\IIS\\Microsoft Web Deploy System.Runtime.CompilerServices.VisualC.dll System.Runtime.Extensions.dll System.Runtime.Handles.dll System.Runtime.InteropServices.dll System.Runtime.InteropServices.RuntimeInformation.dll Facades\\System.Runtime.InteropServices.WindowsRuntime.dll System.Runtime.Numerics.dll System.Runtime.Serialization.dll System.Runtime.Serialization.Formatters.dll System.Runtime.Serialization.Json.dll System.Runtime.Serialization.Primitives.dll System.Runtime.Serialization.Xml.dll System.Security.dll System.Security.Claims.dll System.Security.Cryptography.Algorithms.dll System.Security.Cryptography.Csp.dll System.Security.Cryptography.Encoding.dll System.Security.Cryptography.Primitives.dll System.Security.Cryptography.X509Certificates.dll System.Security.Principal.dll System.Security.SecureString.dll Facades\\System.ServiceModel.Duplex.dll Facades\\System.ServiceModel.Http.dll Facades\\System.ServiceModel.NetTcp.dll Facades\\System.ServiceModel.Primitives.dll Facades\\System.ServiceModel.Security.dll System.ServiceProcess.dll System.Text.Encoding.dll System.Text.Encoding.Extensions.dll System.Text.RegularExpressions.dll System.Threading.dll System.Threading.Overlapped.dll System.Threading.Tasks.dll System.Threading.Tasks.Extensions.dll System.Threading.Tasks.Parallel.dll System.Threading.Thread.dll System.Threading.ThreadPool.dll System.Threading.Timer.dll system.valuetuple\\4.5.0\\ref\\net461\\System.ValueTuple.dll System.Web.dll System.Web.Extensions.dll microsoft.aspnet.webapi.core\\5.3.0\\lib\\net45\\System.Web.Http.dll microsoft.aspnet.webapi.owin\\5.3.0\\lib\\net45\\System.Web.Http.Owin.dll microsoft.aspnet.webapi.selfhost\\5.3.0\\lib\\net45\\System.Web.Http.SelfHost.dll System.Windows.Forms.dll controlzex\\3.0.2.4\\lib\\net462\\System.Windows.Interactivity.dll System.Xaml.dll System.Xml.dll System.Xml.Linq.dll System.Xml.ReaderWriter.dll System.Xml.XmlDocument.dll System.Xml.XmlSerializer.dll System.Xml.XPath.dll System.Xml.XPath.XDocument.dll wpftaskdialog\\1.7.1\\lib\\net40-Client\\TaskDialog.dll helixtoolkit.wpf.input\\2.24.0\\lib\\net462\\TDx.TDxInput.dll TROKA.Software.SimpleCodeEditor.dll UIAutomationProvider.dll UIAutomationTypes.dll WindowsFormsIntegration.dll withouthaste.datafiles\\1.0.0\\lib\\net462\\WithoutHaste.DataFiles.dll wpf.controls.panandzoom\\2.2.0\\lib\\net461\\Wpf.Controls.PanAndZoom.dll wpf.matrixextensions\\2.2.0\\lib\\net461\\Wpf.MatrixExtensions.dll wpfappbar\\3.0.0\\lib\\net45\\WpfAppBar.dll wpfcustommessagebox\\1.0.7\\lib\\WPFCustomMessageBox.dll wpfextensions\\1.0.0\\lib\\WPFExtensions.dll wpffolderbrowser\\1.0.2\\lib\\WPFFolderBrowser.dll wpflighttoolkit\\1.0.3\\lib\\net45\\WpfLightToolkit.dll wpflocalizeextension\\3.9.4\\lib\\net452\\WPFLocalizeExtension.dll wpfmath\\0.13.1\\lib\\net452\\WpfMath.dll wpfmath\\0.13.1\\lib\\net452\\WpfMath.Shared.dll wpfmediakit\\2.2.0\\lib\\WPFMediaKit.dll xamlmarkupextensions\\2.1.3\\lib\\net462\\XAMLMarkupExtensions.dll extended.wpf.toolkit\\4.5.0\\lib\\net40\\Xceed.Wpf.AvalonDock.dll extended.wpf.toolkit\\4.5.0\\lib\\net40\\Xceed.Wpf.AvalonDock.Themes.Aero.dll extended.wpf.toolkit\\4.5.0\\lib\\net40\\Xceed.Wpf.AvalonDock.Themes.Metro.dll extended.wpf.toolkit\\4.5.0\\lib\\net40\\Xceed.Wpf.AvalonDock.Themes.VS2010.dll Xceed.Wpf.AvalonDock.Themes.VS2013.dll extended.wpf.toolkit\\4.5.0\\lib\\net40\\Xceed.Wpf.Toolkit.dll xwt\\0.2.218\\lib\\net40\\Xwt.dll xwt.wpf\\0.2.218\\lib\\net40\\Xwt.WPF.dll Centrální Správa IT Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba, Systém je Tenký/Tlustý Klient Již Nyní Obsahuje Kompletní centrální Správu IT pro Vaši Společnost Chtějte od svého IT oddělení Více a pořidtě jim toto řešení ještě dnes Jednoduchý Vývoj API - Webů - Aplikací Vývoj je už jen kopírování a vytváření nových tabulek dle potřeby. Řešení nabízí 2x více než Kdokoliv. Dvojí administrace je možná jak ze Systému, Tak i z Webu, Vyvynutí jednoho nebo druhého je stejně snadné na obou stranách. Vývoj Webu je Čistě 1-stránková Statická Aplikace. Takže Změny provádíte hned. Vývoj Serveru a Systému se provádí pomocí Visual Studia nebo již Brzy Online z Portálu. Sstémy bude možné Updatovat a vznikne i Distibuce Agend pro klienty, tedy možnost přivýdělku. Spolupráce, či Cokoliv jinéhjo je vždy Vítána. Právě se Implementuje SubServers Management Online C# Vývoj Projektů Online ze Systému Správa Separátního Statického souborového uložiště Neomezené Možnosti v Jediném Řešení Toto Řešení tak již nyní nabízí doslova unikátní možnosti nastavení jak webových systému, Tak Desktopových Aplikací, A c chcete Více? Plnohodnotná Správa celého IT včetně vlastího IS je součástí Řešení. Vlastní Web s možností kdykoliv si cokoliv ONLINE upravit a navíc jak ze Systému přes Editory či Online pomocí Web Editorů. Chybí jen Vlastní Email Server, který je již taky předchystaný. I Tak Je nachystána další Stovka různých Řešení, která budou postupně Implementována a nabídnuta Zákazníkům k Aktualizaci či rozšíření. Už Bude na každém z vás Jestli se dále Vydáte Vlastní Cestou, nebo Své Úsilí spojíme v plodné a přínosné činnosti. Jednoduchá Instalace Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba Systém je (tlustší)Tenký Klient (tlustý jen vekostí díky vlastnímu serveru,lze očistit na velikost 20MB) Nejlevnější ŘEŠENÍ IT může být Nejlepší To vám nabízí toto řešení. Vyvynutí systému si můžete objednat a díky již existujícím řešením je vývoj raketově rychlý. Nemluvě o implementacích technoogií pouze 1x, Následně je zařazena do výbavy Systému a díky portálu a chystanému Centrálnímu Vývoji pro aktualizace, centralizovaný vývoj a Vývoj Systému Online přes internet pomocí Grafického Studia to bude jen zábava. A mnoho dalšího snad najde své Zájemce Toto byl jen malinký výčet co vše je v projektu obsaženo a kam míří. Pokud vás Projekt zaujal, neváhejte mne kontaktovat a pořídit si jej třeba ještě dnes. Žádná investice se vám nevrátí tak rychle, jako v tomto případě. Vyzkoušejte MS SYSTÉM online Hned Teď Aktuální verzi EasySYSTEMBuilder můžete vyzkoušet online. Online dokumentace, příklady, Git, Knihovny kódů, Nástroje, Online Dev Studio naleznete již nyní či v blízké budopucnosti na tomto portálu. Již Nyní k dispozici 30denní plná verze Serveru EIC i Systému ESB k vyzkoušení ZDARMA. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz EIC + ESB = Nerozlučná Dvojice, která spolu dokáže VŠE"
  },
  "EASY-DATA/EasyITCenter-Server.html": {
    "href": "EASY-DATA/EasyITCenter-Server.html",
    "title": "EasyITCenter",
    "keywords": "EasyITCenter Contents AuthenticateResponse Expiration Id Name Role Surname Token AutoGenConnectionString AutoGenRequest AutoScheduledJob BackendServer ServerConfigSettings ServerRuntimeData BuildWebHost(args) CheckLicense() LoadConfigurationFromDb() LoadConfigurationFromFile() Main(args) RestartServer() ServerStartupDbDataLoading() StartServer() CarouselImage CarouselVideo CommunicationController GetUserId() GetUserName() GetUserRole() IsAdmin() IsLogged() IsSystemUser() IsWebUser() CoreOperations CallGetApiUrl(url) CheckTokenValidityFromString(tokenString) GetSelfSignedCertificate(password) GetSelfSignedCertificateFromFile() RunSystemProcess(processDefinition) SendEmail(mailRequest,sendImmediately) SendMassEmail(mailRequests) ValidAndGetTokenParameters() CustomFtpUser #ctor(name) Name IsInGroup() CustomString DBResult DBResultMessage ErrorMessage InsertedId RecordCount Status DBWebApiResponses DataOperations ConvertGenericClassToStandard``1(data) FirstCharToLowerCase(str) GetByteArrayFrom64Encode(strContent) GetSystemErrMessage(exception,msgCount) GetUserApiErrMessage(exception,msgCount) IsValidEmail(email) MarkDownLineEndSpacesResolve(input) RandomString(length) RemoveDiacritism(Text) RemoveWhitespace(input) StringToUTF8(text) UnicodeToUTF8(strFrom) Utf8toUnicode(utf8String) DatabaseContextExtensions DbOperations BindList``1(dt) CheckServerModuleExists(word,language) CheckServerModuleOffline(modulePath) CheckServerModuleOnline(modulePath) DBTranslate(word,language) DBTranslateOffline(word,language) DBTranslateOnline(word,language) GetWebGlobalPageBlockLists(modulePath) GetWebGlobalPageBlockListsOnline(modulePath) GetWebPortalJsCssScripts(specType,fileName) GetWebPortalJsCssScriptsOffline(specType,fileName) GetWebPortalJsCssScriptsOnline(specType,fileName) LoadOrRefreshStaticDbDials(onlyThis) DelegateHealthCheckPublisher EasyITCenterAuthenticationApi Authenticate(username,password) LifetimeValidator(notBefore,expires,token,params) RefreshUserToken(username,token) EasyITCenterBackendCheckApi GetBackendCheckApi() EasyITCenterContext EasyITCenterStoredProceduresListApi GetSystemSpGetTableList() GetSystemSpGetUserMenuList() GetSystemTableList() EmailVerification ExpertDocApi GetDocumentationGroupedList(id) GetDocumentationGroupedList(id) FileOperations ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) ConvertSystemFilePathFromUrl(webpath) CopyDirectory(directory) CopyFile(from,to) CopyFiles(sourcePath,destinationPath) CreateDirectory(directory) CreateFile(file) CreatePath(path) DeleteDirectory(directory) DeleteFile(file) FileDetectEncoding(FileName) LoadOrCreateSettings() ReadFile(fileName) WriteToFile(file,content) GeneratorMarkDownCode GenericTable GetOperatingSystemInfo GitAuthenticationService CheckCredentials(username,password) HostedFtpServer #ctor(ftpServerHost) StartAsync() StopAsync() HostedFtpServerMembershipProvider ValidateUser(username,password) ValidateUserAsync(username,password) IdFilter IndexModel GetManagedBodyPartForLayout() GetManagedCentralCssFiles() GetManagedCentralCssLayoutFiles() GetManagedCentralJsFiles() GetManagedCentralJsLayoutFiles() GetManagedCssFilesForLayout() GetManagedFooterPartForLayout() GetManagedGlobalCssFiles() GetManagedGlobalCssLayoutFiles() GetManagedGlobalJsFiles() GetManagedGlobalJsLayoutFiles() GetManagedHeaderPostScriptsForLayout() GetManagedHeaderPreCssForLayout() GetManagedHeaderPreScriptsForLayout() GetManagedJsFilesForLayout() GetManagedMultiLangCssFiles() GetManagedMultiLangCssLayoutFiles() GetManagedMultiLangJsFiles() GetManagedMultiLangJsLayoutFiles() OnGet() MailRequest MessageModuleApi GetNewsletterPreview(id) SaveNewsletterPreview() MimeTypes FallbackMimeType GetMimeType(fileName) GetMimeTypeExtensions(mimeType) TryGetMimeType(fileName,mimeType) NameFilter ObservableFileSystemWatcher #ctor(watcher) #ctor() ProcessClass RSSLoad GetRssFeed(rssUrl) RobotsController ServerConfigSettings BrowserLinkEnabled ConfigApiTokenTimeoutMin ConfigCertificateDomain ConfigCertificatePassword ConfigCertificatePath ConfigCoreServerRegisteredName ConfigJwtLocalKey ConfigLogWarnPlusToDbEnabled ConfigManagerEmailAddress ConfigServerGetLetsEncrypt ConfigServerStartupHTTPAndHTTPS ConfigServerStartupHttpPort ConfigServerStartupHttpsPort ConfigServerStartupOnHttps ConfigTimeTokenValidationEnabled DatabaseConnectionString DatabaseInternalCacheTimeoutMin DatabaseInternalCachingEnabled DefaultStaticWebFilesFolder EmailerSMTPLoginPassword EmailerSMTPLoginUsername EmailerSMTPPort EmailerSMTPServerAddress EmailerSMTPSslIsEnabled EmailerServiceEmailAddress EnableAutoShowMdAsHtml GitServerEnabled ModuleAutoSchedulerEnabled ModuleCSharpCodeBuilder ModuleDBEntitySchemaEnabled ModuleDBEntitySchemaPath ModuleDbDiagramGeneratorEnabled ModuleHealthServiceEnabled ModuleHealthServiceMessageOnChangeOnly ModuleHealthServicePath ModuleHealthServiceRefreshIntervalSec ModuleMdDocumentationEnabled ModuleSwaggerApiDocEnabled ModuleSwaggerApiDocPath ModuleWebDataManagerEnabled RedirectOnPageNotFound RedirectPath ServerCorsAllowAnyHeader ServerCorsAllowAnyMethod ServerCorsAllowAnyOrigin ServerCorsAllowCredentials ServerCorsEnabled ServerFtpEngineEnabled ServerFtpSecurityEnabled ServerFtpStorageRootPath ServerProviderModeEnabled ServerPublicUrl ServiceCoreCheckerEmailSenderActive ServiceEnableMassEmail ServiceServerLanguage ServiceUseDbLocalAutoupdatedDials WebBrowserContentEnabled WebLiveDataMonitorEnabled WebMvcPagesEngineEnabled WebRSSFeedsEnabled WebRazorPagesCompileOnRuntime WebRazorPagesEngineEnabled WebRobotTxtFileEnabled WebSitemapFileEnabled WebSocketEngineEnabled WebSocketGlobalNotifyPath WebSocketMaxBufferSizeKb WebSocketServerMonitorEnabled WebSocketTimeoutMin ServerConfigurationServices ConfigureAuthentication(services) ConfigureCentralServicesProviders(services) ConfigureControllers(services) ConfigureCookie(services) ConfigureDatabaseContext(services) ConfigureFTPServer(services) ConfigureLetsEncrypt(services) ConfigureLogging(services) ConfigureScoped(services) ConfigureServerWebPages(services) ConfigureSingletons(services) ConfigureThirdPartyApi(services) ConfigureTransient(services) ConfigureWebSocketLoggerMonitor(services) ServerCoreAutoGeneratorApi ServerCoreAutoScheduler ServerCoreLoggerWS Echo(context,webSocket) Get() GetBySocketAPIPath(id) ServerCorePostFileRotatorApi GetApiFileRotator(filename) PostApiFileRotator() PutApiFileRotator() ServerCoreWebHelpers AddSocketConnectionToCentralList(newWebSocket,socketAPIPath) DisposeSocketConnectionsWithTimeOut() ListenClientWebSocketMessages(webSocket,socketAPIPath) SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) SendMessageToClientSocket(webSocket,message) ServerCoreWebToolsGenApi GenerateCarouselGallery(imageList) GenerateCarouselVideoGallery(videoList) GenerateEasyGallery(imageList) GenerateImageBook(imageList) GenerateMdToMdBook(fileList) GenerateMedialPresentation(imageList) GenerateVideoPlayList(videoList) GenerateXmlToMd(fileList) ServerDbDgmlSchemaApi #ctor(context) Get() GetDgml() ServerDocApi _hostingEnvironment GenerateMdBook() ServerDynamicSqlApi ServerEmailerApi ServerEnablingServices EnableCors() EnableEndpoints() EnableLogging() EnableWebSocket(app) ServerLocalDbDials ServerManagementApi FtpServerStart() FtpServerStop() ServerRestart() ServerSchedulerStart() ServerMarkDownApi ServerModules ConfigureDBEntitySchema(services) ConfigureDocumentation(services) ConfigureGitServer(services) ConfigureHealthCheck(services) ConfigureLiveDataMonitor(services) ConfigureMarkdownAsHtmlFiles(services) ConfigureScheduler(services) ConfigureSwagger(services) ServerModulesEnabling EnableDBEntitySchema() EnableDocumentation() EnableLiveDataMonitor() EnableMarkdownAsHtmlFiles(app) EnableSwagger() ServerOpenGraphApi GetFromUrl(request) ServerRssFeedApi ServerRuntimeData CentralWebSocketList FileRotatorRuntineLibrary LocalDBTableList ServerArgs ServerAutoSchedulerProvider ServerCancelToken ServerCoreStatus ServerFTPProvider ServerRestartRequest ServerServiceProvider ConfigFile ContentRootPath DataPath DebugMode Setting_folder Startup_path UserPath WebRoot_path ServerStatuses ServerSystemControlApi ServerToolsMinifierApi MinifyAndReturn(filelist) MinifyAndSaveMinToPath(filelist) ServerWebPagesExportApi ExportMinimalStaticWebPages() ExportXamlCz() ExportXamlEn() ServerWebPagesLogin ServerWebPagesToken ServerWebProviderGetOnlyApi GetManagedCssJsScriptList() GetSolutionToolList() GetTemplateWebMenuList() ServerWebsiteStaticFilesApi GetFiles(request) SetReportFilter SitemapController SoftwareTriggers WriteVisit(ipAddress,userId,userName) WriteWebVisit(ipAddress) SomeRSSProvider Startup Configure(app,serverLifetime) ConfigureServices(services) ServerOnStarted() StdAuthGenericProviderApi`3 StdFreeGenericProviderApi`3 SystemBuilderOnlinePreviewApi GetWebBuilderCodePreview() GetWebBuilderGlobalBodyBlockPreview(id) GetWebBuilderMenuPreview(id) SystemOperationMessage SystemStdAuthGenericProviderApi`3 SystemStdFreeGenericProviderApi`3 SystemWebDocApi _hostingEnvironment GetMdDocumentPreview() GetMdLibraryPreview() UploadFileData UploadGeneratorFiles UserConfig WebMessage WebPagesAdminGroupMenuListApi DeleteWebGroupMenuList(id) InsertOrUpdateGroupWebMenuList(record) WebPagesMessagesListApi GetWebPageMessagesList() InsertWebPageMessagesList(webdata) WebPagesSystemDataGetOnlyApi GetDeveloperNewsList(rec) GetMottoList() WebPagesSystemToolsApi SaveNewMinifiedFile(rec) WebPagesUserApi PostSendVerifyCode(email) WebRegistration WebSocketExtension WebSocketLogProvider WebSocketLogger Log``1(logLevel,eventId,state,exception,formatter) WebToolsOperations DeleteWebSourceFile(hostingEnvironment,record) SaveWebSourceFile(hostingEnvironment,record) WorkFlowContext WorkflowContextExtensions AuthenticateResponse type Namespace EasyITCenter.DBModel Summary The authenticate response. Expiration property Summary Gets or Sets the expiration. Id property Summary Gets or Sets the id. Name property Summary Gets or Sets the name. Role property Summary Gets or Sets the role. Surname property Summary Gets or Sets the surname. Token property Summary Gets or Sets the token. AutoGenConnectionString type Namespace EasyITCenter.DBModel Summary Custom Class For Check ConnectionString AutoGenRequest type Namespace EasyITCenter.DBModel Summary Custom Class For Server Generator Request Monitoring AutoScheduledJob type Namespace EasyITCenter.ServerCoreStructure Summary Autoscheduler Process Scheduled Task definitions Returns Parameters Name Type Description context T:EasyITCenter.ServerCoreStructure.AutoScheduledJob BackendServer type Namespace EasyITCenter Summary Server Main Definition Starting Point Of Project ServerConfigSettings constants Summary Startup Server Initialization Server Setting Data ServerRuntimeData constants Summary Startup Server Initialization Server Runtime Data BuildWebHost(args) method Summary Final Preparing Server HostBuilder Definition Exit 10 Is missing or Format Problem with Configuration File Returns Parameters Name Type Description args System.String[] CheckLicense() method Summary Checking Valid License on StartUp Parameters This method has no parameters. LoadConfigurationFromDb() method Summary Server Core: Load Configuration From Database First Must be From File With DB Connection, Others File Settings than DBconnection is Optional Parameters This method has no parameters. LoadConfigurationFromFile() method Summary Server Core: Load Configuration From Config File In Startup Folder/Data/config.json Parameters This method has no parameters. Main(args) method Summary Server Startup Process Parameters Name Type Description args System.String[] RestartServer() method Summary Server Restart Controller Parameters This method has no parameters. ServerStartupDbDataLoading() method Summary Server Startup DB Data loading for minimize DB Connect TO Frequency Dials Without Changes With Full Auto Filling Non Exist Records Example: LanguageList Parameters This method has no parameters. StartServer() method Summary Server Start Controller Parameters This method has no parameters. CarouselImage type Namespace EasyITCenter.DBModel Summary Generator Carousel Image Class CarouselVideo type Namespace EasyITCenter.DBModel Summary Generator Carousel Video Class CommunicationController type Namespace EasyITCenter.ServerCoreStructure Summary Server Communication Extensions for Controlling Data Implmented FullUserTokenData For More Info Modify Auth Claims And Add Get Info Here GetUserId() method Summary Get UserId Returns Parameters This method has no parameters. GetUserName() method Summary Get UserName Returns Parameters This method has no parameters. GetUserRole() method Summary Get UserRole Returns Parameters This method has no parameters. IsAdmin() method Summary Extension for check Admin Role Parameters This method has no parameters. IsLogged() method Summary Check HTTP if is the Request Logged Returns Parameters This method has no parameters. IsSystemUser() method Summary Extension for check user Role Parameters This method has no parameters. IsWebUser() method Summary Extension for check webuser Role Parameters This method has no parameters. CoreOperations type Namespace EasyITCenter.ServerCoreStructure Summary Specific Server Core Operations Library CallGetApiUrl(url) method Summary Calls the GET API URL with string Response Returns Parameters Name Type Description url System.String The URL. CheckTokenValidityFromString(tokenString) method Summary Token Validator Extension For Server WebPages Returns Parameters Name Type Description tokenString System.String The token string. GetSelfSignedCertificate(password) method Summary Gets the self signed certificate For API Security HTTPS. Returns Parameters Name Type Description password System.String The password. GetSelfSignedCertificateFromFile() method Summary Set Imported Certificate from file on Server for Https File must has Valid path from Startup Data Path Returns Parameters This method has no parameters. RunSystemProcess(processDefinition) method Summary Server Function For Running External Processes Returns Parameters Name Type Description processDefinition EasyITCenter.ServerCoreStructure.ProcessClass The process definition. SendEmail(mailRequest,sendImmediately) method Summary System Mailer sending Emails To service email with detected fail for analyze and corrections on the Way provide better services every time !!! This You can implement everywhere, !!! In Debug mode is written to Console, in Release will be sent email Empty Sender And Recipients set email for Service Recipient Parameters Name Type Description mailRequest EasyITCenter.ServerCoreStructure.MailRequest sendImmediately System.Boolean SendMassEmail(mailRequests) method Summary Sends the mass mail. Parameters Name Type Description mailRequests System.Collections.Generic.List{EasyITCenter.ServerCoreStructure.MailRequest} The mail requests. ValidAndGetTokenParameters() method Summary Server Token Validation Parameters definition For Api is Used if is ON/Off for Api is On everyTime Returns Parameters This method has no parameters. CustomFtpUser type Namespace EasyITCenter.ServerCoreServers.HostedFtpServerMembershipProvider Summary Custom FTP user implementation #ctor(name) constructor Summary Initializes a new instance of the CustomFtpUser instance. Parameters Name Type Description name System.String The user name Name property Summary Inherit from parent. IsInGroup() method Summary Inherit from parent. Parameters This method has no parameters. CustomString type Namespace EasyITCenter.DBModel Summary Custom Definition for Returning string List from Stored Procedures Name is ColumnName from Stored Procedure Result DBResult type Namespace EasyITCenter.DBModel Summary Database response types definition DBResultMessage type Namespace EasyITCenter.DBModel Summary The DB result message. ErrorMessage property Summary Gets or Sets the error message. InsertedId property Summary Gets or Sets the inserted id. RecordCount property Summary Gets or Sets the record count. Status property Summary Gets or Sets the status. DBWebApiResponses type Namespace EasyITCenter.ServerCoreWebPages Summary WebApi Responses DataOperations type Namespace EasyITCenter.ServerCoreStructure Summary Data Formating and similar Operations Library ConvertGenericClassToStandard``1(data) method Summary Convert Generic Tabla To Standard Table For Use Standard System Fields Returns Parameters Name Type Description data ``0 Generic Types Name Description T FirstCharToLowerCase(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetByteArrayFrom64Encode(strContent) method Summary Separate ByteArray from 64 encode file For inserted file types Returns Parameters Name Type Description strContent System.String Content of the string. GetSystemErrMessage(exception,msgCount) method Summary Mined-ed Error Message For System Save to Database For Simple Solving Problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetUserApiErrMessage(exception,msgCount) method Summary Mined-ed Error Message For Answer in API Error Response with detailed info about problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 IsValidEmail(email) method Summary Determines whether [is valid email] [the specified email]. Returns true if [is valid email] [the specified email]; otherwise, false. Parameters Name Type Description email System.String The email. MarkDownLineEndSpacesResolve(input) method Summary MarkDown Global Resolve End Spaces Characters On Insert/Update API CALS of Managing Returns Parameters Name Type Description input System.String The input. RandomString(length) method Summary Randoms the string. Returns Parameters Name Type Description length System.Int32 The length. RemoveDiacritism(Text) method Summary Remove Diactritics Returns Parameters Name Type Description Text System.String RemoveWhitespace(input) method Summary Removes the whitespace from the String. Returns Parameters Name Type Description input System.String The input. StringToUTF8(text) method Summary Convert String to UTF8 Returns Parameters Name Type Description text System.String UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. Utf8toUnicode(utf8String) method Summary Convert UTF8 to UNICODE Returns Parameters Name Type Description utf8String System.String DatabaseContextExtensions type Namespace EasyITCenter.ServerCoreDBSettings Summary Database Context Extensions for All Types Procedures For Retun Data in procedure can be Simple SELECT * XXX and you Create Same Class for returned DataSet DbOperations type Namespace EasyITCenter.ServerCoreStructure Summary All Server Definitions of Database Operation method BindList``1(dt) method Summary Extension For Using Custom Defined Tables from Database Procedures Its used as Database Context Extension as 'CollectionFromSql' Method in Database Context Returns Parameters Name Type Description dt System.Data.DataTable The dt. Generic Types Name Description T CheckServerModuleExists(word,language) method Summary Default Operation for Call CHEckModuleExist Returns Parameters Name Type Description word System.String CheckServerModuleOffline(modulePath) method Summary Get Check ServerModule from OneTime Load Server List Returns Parameters Name Type Description modulePath System.String CheckServerModuleOnline(modulePath) method Summary Get Check ServerModule from DB Returns Parameters Name Type Description modulePath System.String DBTranslate(word,language) method Summary Default Operation for Call Translation Returns Parameters Name Type Description word System.String language System.String DBTranslateOffline(word,language) method Summary Database LanuageList for Off-line Using Definitions Returns Parameters Name Type Description word System.String language System.String DBTranslateOnline(word,language) method Summary Database LanuageList for On-line Using Definitions Returns Parameters Name Type Description word System.String language System.String GetWebGlobalPageBlockLists(modulePath) method Summary Default Operation For Generate Web Portal Returns Parameters Name Type Description modulePath System.String GetWebGlobalPageBlockListsOnline(modulePath) method Summary Get Check ServerModule from DB Returns Parameters Name Type Description modulePath System.String GetWebPortalJsCssScripts(specType,fileName) method Summary Default Operation For Working Wihth Portal Scripts From Local Tables. Returns Parameters Name Type Description specType System.String fileName System.String GetWebPortalJsCssScriptsOffline(specType,fileName) method Summary Default Operation For Working Wihth Portal Scripts From Local Tables Offline Returns Parameters Name Type Description specType System.String fileName System.String GetWebPortalJsCssScriptsOnline(specType,fileName) method Summary Default Operation For Working Wihth Portal Scripts From Local Tables. Online Returns Parameters Name Type Description specType System.String fileName System.String LoadOrRefreshStaticDbDials(onlyThis) method Summary Method for All Server Defined Table for Local Using As Off line AutoUpdated Tables Parameters Name Type Description onlyThis System.Nullable{EasyITCenter.ServerCoreStructure.ServerLocalDbDials} DelegateHealthCheckPublisher type Namespace EasyITCenter.ServerCoreStructure Summary HeathCheck Handler For Sending Information About Fails EasyITCenterAuthenticationApi type Namespace EasyITCenter.ControllersExtensions Authenticate(username,password) method Summary API Authenticated and Generate Token Returns Parameters Name Type Description username System.String password System.String LifetimeValidator(notBefore,expires,token,params) method Summary API Token LifeTime Validator Returns Parameters Name Type Description notBefore System.Nullable{System.DateTime} expires System.Nullable{System.DateTime} token Microsoft.IdentityModel.Tokens.SecurityToken params Microsoft.IdentityModel.Tokens.TokenValidationParameters RefreshUserToken(username,token) method Summary API Refresh User Token Returns Parameters Name Type Description username System.String token EasyITCenter.DBModel.AuthenticateResponse EasyITCenterBackendCheckApi type Namespace EasyITCenter.ControllersExtensions Summary Simple Api for Checking Avaiability See Also Microsoft.AspNetCore.Mvc.ControllerBase GetBackendCheckApi() method Summary Gets the backend check API. Returns Parameters This method has no parameters. EasyITCenterContext type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Main Database Settings Here is Included ScaffoldContext which is connected via Visual Studio Tool Here can Be added customization which are not on the server Here is Extended the Context with Insert News Functionality Customizing and implement Settings for Automatic Adopted Database Schema for Unlimited Working and Operations For Specifics API schemas EasyITCenterStoredProceduresListApi type Namespace EasyITCenter.Controllers Summary StoredSpocedures Central Library With Return Dynamic DataList See Also Microsoft.AspNetCore.Mvc.ControllerBase GetSystemSpGetTableList() method Summary Gets Table List for Reporting Returns Parameters This method has no parameters. GetSystemSpGetUserMenuList() method Summary Api For Logged User with Menu Datalist Returns Parameters This method has no parameters. GetSystemTableList() method Summary Gets Form Agendas Pages List For System Menu Definition. Returns Parameters This method has no parameters. EmailVerification type Namespace EasyITCenter.ServerCoreWebPages Summary WebPages User Verification class ExpertDocApi type Namespace EasyITCenter.Controllers GetDocumentationGroupedList(id) method Summary ExpertDocManager Group Documentation Request Api Returns Parameters Name Type Description id M:EasyITCenter.Controllers.ExpertDocApi.GetDocumentationGroupedList The identifier. GetDocumentationGroupedList(id) method Summary ExpertDocManager Group Documentation Request Api Returns Parameters Name Type Description id System.Int32 The identifier. FileOperations type Namespace EasyITCenter.ServerCoreStructure ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. ConvertSystemFilePathFromUrl(webpath) method Summary Return Full File path to the operating system default slashes. Parameters Name Type Description webpath System.String CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary / Returns Parameters Name Type Description from System.String From. to System.String To. CopyFiles(sourcePath,destinationPath) method Summary Prepared Method for Files Copy Parameters Name Type Description sourcePath System.String destinationPath System.String CreateDirectory(directory) method Summary Creates the directory. Parameters Name Type Description directory System.String The directory. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The System.IO.Path. DeleteDirectory(directory) method Summary Deletes the directory. Parameters Name Type Description directory System.String The directory. DeleteFile(file) method Summary Deletes the file. Returns Parameters Name Type Description file System.String The file. FileDetectEncoding(FileName) method Summary Prepared Method for Get Information of File encoding UTF8,WIN1250,etc Returns Parameters Name Type Description FileName System.String LoadOrCreateSettings() method Summary Server Local Startup Configuration Its Running as First - Load from Congig.Json After DB connection Before Server Start Is This configuration Replaced By Data from DB And next Server Start. Its for situation - Bad Connection Server Start with Configuration from File Parameters This method has no parameters. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. GeneratorMarkDownCode type Namespace EasyITCenter.ToolsControllers Summary Server Tool Generation Markdown Documentation From Project Codes in Advanced Document Format https://github.com/punker76/MarkdownSnippets/tree/main/docs GenericTable type Namespace EasyITCenter.DBModel Summary Generic Table Snadard Fileds Public Class For Get Informations By System GetOperatingSystemInfo type Namespace EasyITCenter.ServerCoreStructure.CoreOperations Summary Extension For Checking Operation System of Server Running GitAuthenticationService type Namespace EasyITCenter.GitServer.Services Summary Static class for handling git authentication CheckCredentials(username,password) method Summary Checks if credentials are valid. Returns true if authentication was successful, otherwise false. Parameters Name Type Description username System.String The username password System.String The corresponding password HostedFtpServer type Namespace EasyITCenter.ServerCoreServers #ctor(ftpServerHost) constructor Summary Initializes a new instance of the HostedFtpServer class. Parameters Name Type Description ftpServerHost FubarDev.FtpServer.IFtpServerHost The FTP server host that gets wrapped as a hosted service. StartAsync() method Summary Inherit from parent. Parameters This method has no parameters. StopAsync() method Summary Inherit from parent. Parameters This method has no parameters. HostedFtpServerMembershipProvider type Namespace EasyITCenter.ServerCoreServers Summary Custom membership provider for Authentication Validation Actual is Set by UserName and Password in Database ValidateUser(username,password) method Summary FTP User Validation Its for Open FTP and User Validation Returns Parameters Name Type Description username System.String The username. password System.String The password. ValidateUserAsync(username,password) method Summary FTP User Validation Async Its for Open FTP and User Validation Returns The result of the validation. Parameters Name Type Description username System.String The user name. password System.String The password. IdFilter type Namespace EasyITCenter.DBModel Summary Custom Class Definition for Filtering by record Id IndexModel type Namespace ServerCorePages Summary Default Page for Every Web Request Here are defined Main Pages Sections THIs Page Is Alone For GetManagedBodyPartForLayout() method Summary Get Allowed Global Body HTML Code Its HTML Content Computed by Guest/webuser/admin Rights From DB Table WebGlobalBodyBlockList Returns Parameters This method has no parameters. GetManagedCentralCssFiles() method Summary Central CSS Library Files List Returns Parameters This method has no parameters. GetManagedCentralCssLayoutFiles() method Summary Central CSS Stylisation Template Controler Returns Parameters This method has no parameters. GetManagedCentralJsFiles() method Summary Central JS Library Files List Returns Parameters This method has no parameters. GetManagedCentralJsLayoutFiles() method Summary Central JS Library Files Template Controler Returns Parameters This method has no parameters. GetManagedCssFilesForLayout() method Summary Generation Css Script Section In Server Pages Returns Parameters This method has no parameters. GetManagedFooterPartForLayout() method Summary Get Allowed Global Footer HTML Code Its HTML Content Computed by Guest/webuser/admin Rights From DB Table WebGlobalBodyBlockList Returns Parameters This method has no parameters. GetManagedGlobalCssFiles() method Summary Global CSS Library Files List Returns Parameters This method has no parameters. GetManagedGlobalCssLayoutFiles() method Summary Global CSS Stylisation Template Controler Returns Parameters This method has no parameters. GetManagedGlobalJsFiles() method Summary Global JS Library Files List Returns Parameters This method has no parameters. GetManagedGlobalJsLayoutFiles() method Summary Global JS Library Files Template Controler Returns Parameters This method has no parameters. GetManagedHeaderPostScriptsForLayout() method Summary Gets HeaderPostScripts the managed header pre CSS for layout. Returns Parameters This method has no parameters. GetManagedHeaderPreCssForLayout() method Summary Gets HeaderPreCss the managed header pre CSS for layout. Returns Parameters This method has no parameters. GetManagedHeaderPreScriptsForLayout() method Summary Gets HeaderPreCss the managed header pre CSS for layout. Returns Parameters This method has no parameters. GetManagedJsFilesForLayout() method Summary Generation JS Script Section In Server Pages Returns Parameters This method has no parameters. GetManagedMultiLangCssFiles() method Summary MultiLang CSS Library Files List Returns Parameters This method has no parameters. GetManagedMultiLangCssLayoutFiles() method Summary MultiLang CSS Stylisation Template Controler Returns Parameters This method has no parameters. GetManagedMultiLangJsFiles() method Summary MultiLang JS Library Files List Returns Parameters This method has no parameters. GetManagedMultiLangJsLayoutFiles() method Summary MultiLang JS Library Files Template Controler Returns Parameters This method has no parameters. OnGet() method Summary Checking Cookie TOKEN FROM Metro for User/UserRole checking on Server Side This Is Use For User Checking In Razor/MVC Server Web Pages This is Use For User Role and his Rights If is Logged Checking Has Loaded User Claims with Full Token Info Parameters This method has no parameters. MailRequest type Namespace EasyITCenter.ServerCoreStructure Summary Class Definition for Server Emailer In List of this claas you can use Mass Emailer MessageModuleApi type Namespace EasyITCenter.Controllers GetNewsletterPreview(id) method Summary Message Module NewsLetter Preview API Redirect todsaved Index.html after POST save Returns Parameters Name Type Description id M:EasyITCenter.Controllers.MessageModuleApi.GetNewsletterPreview SaveNewsletterPreview() method Summary Message Module NewsLetter Preview API Saving To index.html Returns Parameters This method has no parameters. MimeTypes type Namespace EasyITCenter Summary Provides utilities for mapping file names and extensions to MIME-types. FallbackMimeType property Summary The fallback MIME-type. Defaults to application/octet-stream. GetMimeType(fileName) method Summary Gets the MIME-type for the given file name, or FallbackMimeType if a mapping doesn't exist. Returns The MIME-type for the given file name. Parameters Name Type Description fileName System.String The name of the file. GetMimeTypeExtensions(mimeType) method Summary Attempts to fetch all available file extensions for a MIME-type. Returns All available extensions for the given MIME-type Parameters Name Type Description mimeType System.String The name of the MIME-type TryGetMimeType(fileName,mimeType) method Summary Tries to get the MIME-type for the given file name. Returns true if a MIME-type was found, false otherwise. Parameters Name Type Description fileName System.String The name of the file. mimeType System.String@ The MIME-type for the given file name. NameFilter type Namespace EasyITCenter.DBModel Summary Custom Class Definition for Filtering by string ObservableFileSystemWatcher type Namespace DynamicRun.Builder Summary This is a wrapper around a file system watcher to use the Rx framework instead of event handlers to handle notifications of file system changes. #ctor(watcher) constructor Summary Pass an existing FileSystemWatcher instance, this is just for the case where it's not possible to only pass the configuration, be aware that disposing this wrapper will dispose the FileSystemWatcher instance too. Parameters Name Type Description watcher System.IO.FileSystemWatcher #ctor() constructor Summary Pass a function to configure the FileSystemWatcher as desired, this constructor will manage creating and applying the configuration. Parameters This constructor has no parameters. ProcessClass type Namespace EasyITCenter.ServerCoreStructure Summary Server Process class for running external prrocesses RSSLoad type Namespace EasyITCenter.ServerCoreDBSettings GetRssFeed(rssUrl) method Summary Load RSS Feed Returns Parameters Name Type Description rssUrl System.String RobotsController type Namespace EasyITCenter.ServerCoreDBSettings Summary robots.txt routing See Also Microsoft.AspNetCore.Mvc.Controller ServerConfigSettings type Namespace EasyITCenter.ServerCoreStructure Summary The server settings. BrowserLinkEnabled property Summary Okamžitý Rerresh při vytvoření jakékoliv změny na Webu, Pomůcka vývoje ConfigApiTokenTimeoutMin property Summary Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After Timeout connection Must Login Again. It is as needed. You Can Change Key for close All connections Immediately. Timeout is good for Webpages Recomended: 15 ConfigCertificateDomain property Summary Its Domain for include to Automatic Generated Certificate For Server running on HTTPS. Domain is for Your validation Certificate Domain. Can be Changed for commercial. Domain is Used for Lets Encrypt also Write with Comma separator Recommended: 127.0.0.1 ConfigCertificatePassword property Summary Password will be inserted to Server Generated Certificate for HTTPS. Recommended: empty = Maximal Security Randomly generated 20 chars string ConfigCertificatePath property Summary Certificate file NextFrom'DATA'Path\\Filename.pfx For import External Certificate Its Path from Data Startup Folder,example \"groupware.pfx\" is in Data Path The Password must be inserted in ConfigCertificatePassword Settings Other for ignore this Setting set empty string \"\" This settings has Higest Priority before LesEncrypt enabled ConfigCoreServerRegisteredName property Summary Server Service Name automatic figured in All IS/OS/Engines info Recommended: EASY-IT-CENTER ConfigJwtLocalKey property Summary Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its AntiHacker Security Rule Recommended: empty = Maximal Security Randomly generated 40 chars string ConfigLogWarnPlusToDbEnabled property Summary Enable Logging Server Warn and Errors To Database ConfigManagerEmailAddress property Summary Emailová adresa do obchodních kontaktů ConfigServerGetLetsEncrypt property Summary Setting for Automatic Obtain Lets Encrypt more Security Setting Politics. Recommended: true ConfigServerStartupHTTPAndHTTPS property Summary Startup Server On HTTP and HTTPS on Defined Port Aktivuje Provoz na protokolech HTTP i HTTPS současně, pro definici HTTP jej nastavte na zapnuto a dále dle nastaveni pro HTTPS ConfigServerStartupHttpPort property Summary Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API Controler and WebPages Recommended: 5000 ConfigServerStartupHttpsPort property Summary Set Server Startup HTTPS Port on Http/HttpS/WebSocket and for All Engines, Modules, API Controler and WebPages Recommended: 5001 ConfigServerStartupOnHttps property Summary Setting for Server URL Services. Logically can run only one Http or Https Server has more Security Setting Politics. Recommended: true ConfigTimeTokenValidationEnabled property Summary Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using: Example for machine connection Or is Control last activity DatabaseConnectionString property Summary Server Database Connection string for Full Service of Database Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for Read/Write/Exec is enabled In Config File Must Be Only This Paramneter DatabaseInternalCacheTimeoutMin property Summary Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with Database Server Recommended: 30 DatabaseInternalCachingEnabled property Summary Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic, Duplicit Functionality with Database Server in complex process can generate problems Recommended: false DefaultStaticWebFilesFolder property Summary Root Složka pro Statické soubory Webu EmailerSMTPLoginPassword property Summary SMTP Password for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPLoginUsername property Summary SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPPort property Summary SMTP Port for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPServerAddress property Summary SMTP Server Address for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPSslIsEnabled property Summary EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerServiceEmailAddress property Summary Service email, for info about not available service from HeatchCheck Can be used for next Develop, automatic checking problems, missing data and all other Its Necessary for Correct running Server Internal Core Monitoring EnableAutoShowMdAsHtml property Summary Zapíná/Vypína Automatické zobrazení MD souboru jako HTML v rozsahu celého Web Serveru GitServerEnabled property Summary Zapíná Vypíná privátní Git Server ModuleAutoSchedulerEnabled property Summary Server Scheduler Module for Automatization Tasks ModuleCSharpCodeBuilder property Summary Online Správa Projektu Serveru a vývoj ModuleDBEntitySchemaEnabled property Summary Modul Zobrazení DB Entitity Schema ModuleDBEntitySchemaPath property Summary Cestana které se Schema Zobrazí, default: /DBEntitySchema ModuleDbDiagramGeneratorEnabled property Summary Enable Automatic Database Diagram for Simple show Database structure with All bingings ModuleHealthServiceEnabled property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health ModuleHealthServiceMessageOnChangeOnly property Summary Zaznamenávat Logování/zaslání zprávy pouze při změně z OK->FAIL, jinak bude zaznamenáno v každém cyklu ModuleHealthServicePath property Summary Api URL cesta Serveru na které bude Dohledové centrum k dispozici ModuleHealthServiceRefreshIntervalSec property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/ ModuleMdDocumentationEnabled property Summary Enable Server Structure Documentation for Developers Using RootPath, - Block File Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy \"Only HTML\" ModuleSwaggerApiDocEnabled property Summary Special Function: Server Automatically Generate Full Documentation of API structure AND Database Model. Plus Included API Interface for Online Testing All API Methods with Authentication Its Automatic Solution for Third Party cooperation. All changes are Reflected after restart server ModuleSwaggerApiDocPath property Summary Api URL cesta Serveru na které bude API Dokumentace a Testovací rozhraní k dispozici ModuleWebDataManagerEnabled property Summary Module: AutoGenerated Database DataManager for working with Data Running only in Debug mode for simple Develop, can be modified. All changes are Reflected after restart server RedirectOnPageNotFound property Summary Aktivuje Presmerovani na Zadanou cestu v případě Stránka nenalezena RedirectPath property Summary Cesta na kterou se přesměruje Webová Stránka v případě 404 stránka nenalezena. Je také nastavena jako Výchozí Stránka ServerCorsAllowAnyHeader property Summary CORS Hlavčky HTTP Requestů příchozích na server WEB + API, Povolit jakýkoliv Header ServerCorsAllowAnyMethod property Summary CORS Hlavčky HTTP Requestů příchozích na server WEB + API, Povolit jakoukoliv Metodu ServerCorsAllowAnyOrigin property Summary CORS Hlavčky HTTP Requestů příchozích na server WEB + API, Povolit jakýkoli původ ServerCorsAllowCredentials property Summary CORS Hlavčky HTTP Requestů příchozích na server WEB + API , Povolit jakékoliv Pověření - Autorizaci ServerCorsEnabled property Summary Server Filtrování Dle CORS Zapnuto ServerFtpEngineEnabled property Summary Enable FTP File Server oppened for every connection with full rights ServerFtpSecurityEnabled property Summary Enable FTP Security For access to FTP must be logged ServerFtpStorageRootPath property Summary FTP Server Storage Path Definition It Will be under wwwroot for Posibility Share Data or For WebAccess/Browser Over WebPortal ServerProviderModeEnabled property Summary Enabling Provider APIs More Informations are Published on WepPages Are Published Core Informations With Full Solutions Info/Tools/Codes/Etc Published ServerPublicUrl property Summary Veřejná URL adresa serveru použita v modulech ServiceCoreCheckerEmailSenderActive property Summary Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All incorrect server statuses are monitored) Can be writen to Database - !!! Warning for infinite Cycling (DB shutdown example) Recommended: true ServiceEnableMassEmail property Summary Server support mass emailing as Service You can enable Mass Email Api ServiceServerLanguage property Summary Server Language for Translating Server internal statuses Recommended: cz or en - other languages are not implemented ServiceUseDbLocalAutoupdatedDials property Summary Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets, For Optimize Traffic. For Example LanguageList - Static table with often reading Recommended: true - functionality must be implemented in Server Code WebBrowserContentEnabled property Summary Enable WebPages File Browsing from server Url on Server WebLiveDataMonitorEnabled property Summary Enable Server Static Folder Monitor for Data Changes And immediatelly update all Api, Endpoints, Client Browser WebMvcPagesEngineEnabled property Summary Enable Mvc WebPages support engine with Correct Configuration WebRSSFeedsEnabled property Summary Zapnout Generování RSS fédů z položek, novinek WebRazorPagesCompileOnRuntime property Summary Provádí kompilaci Za běhu Serveru. Tzn.. Podporuje Vkládání Stránek Externě WebRazorPagesEngineEnabled property Summary Enable Razor WebPages support engine with Correct Configuration for Automaping from folder 'ServerCorePages' WebRobotTxtFileEnabled property Summary zapnout zobrazení souboru Robot.txt, obsah se bere z nastavení Portálu WebSitemapFileEnabled property Summary Generovaný Soubor Sitemap z Menu Portálu WebSocketEngineEnabled property Summary Enable WebSocket Engine with Default Example Api Controller WebSocketGlobalNotifyPath property Summary TODO planned WebPortal Global Notify Path on WebSocket for sending messages from scheduler With Create Command Library, can be Generated Web Objects on Message Incoming Action WebSocketMaxBufferSizeKb property Summary Maximum socket message size for control Traffic Recomended: 10 WebSocketServerMonitorEnabled property Summary Server support online multi watch Logging Its Run on Websocket and the Log Messages are sent for All opened connections for wathing on Path: ServerCoreMonitor You can enable Mass Email Api WebSocketTimeoutMin property Summary WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any communication socket is closed Set according to your need Recommended: 2 ServerConfigurationServices type Namespace EasyITCenter.ServerCoreConfiguration Summary Server Core Configuration Settings of Security, Communications, Technologies, Modules Rules, Rights, Conditions, Formats, Services, Logging, etc.. ConfigureAuthentication(services) method Summary Server Core: Configure Server Authentication Support Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureCentralServicesProviders(services) method Summary Server Core: Configure Hosted Service to Runtime Core For Access to Root Functionalities Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureControllers(services) method Summary Server Core: Configure Server Controllers options.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes = [ValidateNever] in Class options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore = [JsonIgnore] in Class Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureCookie(services) method Summary Server Core: Configure Cookie Politics Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDatabaseContext(services) method Summary Server Core: Configure Custom Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureFTPServer(services) method Summary Custom Secure FTP Server Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLetsEncrypt(services) method Summary Server core: Configures LetsEncrypt using. Certificate will be saved in DataPath Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLogging(services) method Summary Server Core: Configure Server Logging Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureScoped(services) method Summary Server Core: Configure Custom Core Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureServerWebPages(services) method Summary Configures the MVC server pages on Server format \"cshtml\" Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureSingletons(services) method Summary Server Core: Configures the singletons. Its Register Custom Listeners For Actions Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureThirdPartyApi(services) method Summary Server Core: Configure HTTP Client for work with third party API Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureTransient(services) method Summary Server Core: Configures the Transient. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureWebSocketLoggerMonitor(services) method Summary Server core: Configures the WebSocket logger monitor. For multi monitoring and for Example Posibilities Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ServerCoreAutoGeneratorApi type Namespace EasyITCenter.ControllersExtensions Summary Server Auto Cloner Controller ServerCoreAutoScheduler type Namespace EasyITCenter.ServerCoreStructure Summary Server AutoSchedule Planner ServerCoreLoggerWS type Namespace EasyITCenter.ServerCoreDBSettings Summary WEBSocket Template still not used Ideal for Terminal Panels, chat, controlling services Echo(context,webSocket) method Summary WebSocket Communication Set Examle Returns Parameters Name Type Description context Microsoft.AspNetCore.Http.HttpContext The context. webSocket System.Net.WebSockets.WebSocket The web socket. Get() method Summary WebSocket Registration Connection API Example Returns Parameters This method has no parameters. GetBySocketAPIPath(id) method Summary Universal WebSocket API Definitions for Connection Paths and Registering To Server Central List ow WebSocket Connections Returns Parameters Name Type Description id System.String ServerCorePostFileRotatorApi type Namespace EasyITCenter.ControllersExtensions Summary Server Root Controller GetApiFileRotator(filename) method Summary WebApi ContentTool SubmitRotator Returns Parameters Name Type Description filename System.String PostApiFileRotator() method Summary WebApi ConentTool WebBuilder File Responser Returns Parameters This method has no parameters. PutApiFileRotator() method Summary WebApi ConentTool WebBuilder File Responser Returns Parameters This method has no parameters. ServerCoreWebHelpers type Namespace EasyITCenter.ServerCoreStructure Summary Server Web Helpers for EASY working Here are extension for Database Model, WebSocket AddSocketConnectionToCentralList(newWebSocket,socketAPIPath) method Summary Add WeSocket Connection To Central List Parameters Name Type Description newWebSocket System.Net.WebSockets.WebSocket The new web socket. socketAPIPath System.String The socket path. DisposeSocketConnectionsWithTimeOut() method Summary !! Global Method for Simple Using WebSockets WebSocket Disposed - Cleaning monitored Sockets from Central List. Are Closed and Disposed Only with Timeout or with closed Connection Parameters This method has no parameters. ListenClientWebSocketMessages(webSocket,socketAPIPath) method Summary Register Listening Client WebSocket Communication Ist for Receive messages from Client Returns Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket socketAPIPath System.String SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) method Summary Sends the message and update web sockets in specific path. Parameters Name Type Description socketAPIPath System.String The socket API path. message System.String The message. SendMessageToClientSocket(webSocket,message) method Summary Sends the message to client WebSocket. This Is Used by \"SendMessageAndUpdateWebSocketsInSpecificPath\" For Update Informaions on All Connections in Same WebSocket Path Its Solution FOR Teminals, Group Communications, etc. Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket The web socket. message System.String The message. ServerCoreWebToolsGenApi type Namespace EasyITCenter.ControllersExtensions Summary Server Root Controller GenerateCarouselGallery(imageList) method Summary Image Carousel Generator Returns Parameters Name Type Description imageList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateCarouselVideoGallery(videoList) method Summary Video Carousel Generator Returns Parameters Name Type Description videoList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateEasyGallery(imageList) method Summary Easy Image Gallery Generator Returns Parameters Name Type Description imageList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateImageBook(imageList) method Summary ImageBook Generator Returns Parameters Name Type Description imageList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateMdToMdBook(fileList) method Summary MdToMdBook Generator Returns Parameters Name Type Description fileList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateMedialPresentation(imageList) method Summary MedialPresentation from Images Generator Returns Parameters Name Type Description imageList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateVideoPlayList(videoList) method Summary Video Player + PlayList Generator Returns Parameters Name Type Description videoList EasyITCenter.DBModel.UploadGeneratorFiles The image list. GenerateXmlToMd(fileList) method Summary XmlToMD Generator Returns Parameters Name Type Description fileList EasyITCenter.DBModel.UploadGeneratorFiles The image list. ServerDbDgmlSchemaApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Database Schema Diagram Controller See Also Microsoft.AspNetCore.Mvc.Controller #ctor(context) constructor Summary Initializes a new instance of the class. Parameters Name Type Description context EasyITCenter.ServerCoreDBSettings.EasyITCenterContext The context. Get() method Summary Get Full DataBase SQL Script Returns Parameters This method has no parameters. GetDgml() method Summary Creates a DGML class diagram of most of the entities in the project wher you go to localhost/dgml See https://github.com/ErikEJ/SqlCeToolbox/wiki/EF-Core-Power-Tools Returns a DGML class diagram Parameters This method has no parameters. ServerDocApi type Namespace EasyITCenter.Controllers _hostingEnvironment constants Summary For wwwroot folder Update with detect changes and modify static pages GenerateMdBook() method Summary Server Inteligent Documentation Generator Api StratupPath is WebFolder On Development is need WebRootPath WegbRootPath is Development Folder Parameters This method has no parameters. ServerDynamicSqlApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerEmailerApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Email sender Api for logged Communication See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerEnablingServices type Namespace EasyITCenter.ServerCoreConfiguration Summary Server Core Enabling Settings of Security, API Communications, Technologies, Modules,Rules, Rights, Rules, Rights, Conditions, Cors, Cookies, Formats, Services, Logging, etc.. EnableCors() method Summary Server Cors Configuration Parameters This method has no parameters. EnableEndpoints() method Summary Server Endpoints Configuration Parameters This method has no parameters. EnableLogging() method Summary Enable Server Logging in Debug Mode Parameters This method has no parameters. EnableWebSocket(app) method Summary Server WebSocket Configuration Returns Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ ServerLocalDbDials type Namespace EasyITCenter.ServerCoreStructure Summary Special Functions: Definition of Selected tables for Optimal Using to Data nature Its saves traffic, increases availability and for Example implemented Language is in Develop Auto Fill Table when is First Using Its can be used for more Dials ServerManagementApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase FtpServerStart() method Summary FtpServerStart Api Returns Parameters This method has no parameters. FtpServerStop() method Summary FtpServerStop Api Returns Parameters This method has no parameters. ServerRestart() method Summary Core Server Restart Control Api Returns Parameters This method has no parameters. ServerSchedulerStart() method Summary AutoScheduler Server Controls Returns Parameters This method has no parameters. ServerMarkDownApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Database Schema Diagram Controller See Also Microsoft.AspNetCore.Mvc.Controller ServerModules type Namespace EasyITCenter.ServerCoreConfiguration Summary Configure Server Ad-dons and Modules ConfigureDBEntitySchema(services) method Summary Module Entity Schema Design Generator Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDocumentation(services) method Summary Server Module: Generted Developer Documentation for Defvelopers Documentation contain full Server Structure for extremelly simple developing Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureGitServer(services) method Summary Server Module: GitServer Startup Configuration Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureHealthCheck(services) method Summary Server Module: Automatic DB Data Manager for work with data directly Extreme Posibilities https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureLiveDataMonitor(services) method Summary Server Module: Generted Developer Documentation for Defvelopers Documentation contain full Server Structure for extremelly simple developing Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureMarkdownAsHtmlFiles(services) method Summary Server Module: Configure Automatic MDtoHtml Files Show in WebPages Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureScheduler(services) method Summary Server Module: Configures the Scheduler Module. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureSwagger(services) method Summary Server Module: Swagger Api Doc Generator And Online Tester Configuration Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ServerModulesEnabling type Namespace EasyITCenter.ServerCoreConfiguration Summary Enable Configured Server Ad-dons and Modules EnableDBEntitySchema() method Summary Server Module: Enable DBEntitySchema Web Page Parameters This method has no parameters. EnableDocumentation() method Summary Server Module: Enable Generated Developer Documentation Parameters This method has no parameters. EnableLiveDataMonitor() method Summary Server Module: Enable Live Data Monitor Parameters This method has no parameters. EnableMarkdownAsHtmlFiles(app) method Summary Server Module: Enable Automatic MDtoHtml Files Show in WebPages Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ EnableSwagger() method Summary Server Module: Enable Swagger Api Doc Generator And Online Tester Parameters This method has no parameters. ServerOpenGraphApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Email sender Api for logged Communication See Also Microsoft.AspNetCore.Mvc.ControllerBase GetFromUrl(request) method Summary Documentation https://ogp.me/ Tool For Extend Loaded Html By Add Custom Metadata by Format OpenGraph TODO Implement Inserting Metadata or How To Use Its Description Content as Metadata for Facebokk etc Returns Parameters Name Type Description request EasyITCenter.DBModel.WebUrlRequest ServerRssFeedApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerRuntimeData type Namespace EasyITCenter.ServerCoreStructure Summary The server runtime data. CentralWebSocketList constants Summary Central WebSocket List for Easy one place Using FileRotatorRuntineLibrary constants Summary SercerCore FilesLibrary For Rotator TODO Clean LocalDBTableList constants Summary The local db table list. ServerArgs constants Summary Server Starup Args ServerAutoSchedulerProvider constants Summary Server Securited FTP Provider for Remote Control ServerCancelToken constants Summary Cancellation Token for Server Remote Control ServerCoreStatus constants Summary Server Core Status ServerFTPProvider constants Summary Server Securited FTP Provider for Remote Control ServerRestartRequest constants Summary Server Restart Request Indicator ServerServiceProvider constants Summary Central List With references on Hested Server Sevices For Acess and Using Hosted Functionalities for example: Start/Stop Service And More Other sub services for Optimal Hosting ConfigFile property Summary Gets or Sets the configure file. ContentRootPath property Summary Gets or Sets Project Root Directory. DataPath property Summary Gets or Sets the data path. DebugMode property Summary Gets or Sets the debug mode. Setting_folder property Summary Gets or Sets the setting_folder. Startup_path property Summary Gets or Sets the startup_path. UserPath property Summary Gets or Sets the configure file. WebRoot_path property Summary Gets or Sets the startup_path. ServerStatuses type Namespace EasyITCenter.ServerCoreStructure Summary Server and Hosted Services Runtime Statusses ServerSystemControlApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Database Schema Diagram Controller See Also Microsoft.AspNetCore.Mvc.Controller ServerToolsMinifierApi type Namespace EasyITCenter.ControllersExtensions Summary Server Root Controller MinifyAndReturn(filelist) method Summary Minify FileList and Return Back Without Rename Returns Parameters Name Type Description filelist EasyITCenter.ServerCoreWebPages.WebFileList MinifyAndSaveMinToPath(filelist) method Summary Minifi FileList And Save As Minify to FilePath Returns Parameters Name Type Description filelist EasyITCenter.ServerCoreWebPages.WebFileList ServerWebPagesExportApi type Namespace EasyITCenter.ServerCoreDBSettings ExportMinimalStaticWebPages() method Summary Minimal Export of Page for Running on every Web servers Without Needs anythink Returns Parameters This method has no parameters. ExportXamlCz() method Summary Update Translation Table By All Tables and Field Names For Export Offline Language Dictionary CZ for System Returns Parameters This method has no parameters. ExportXamlEn() method Summary Update Translation Table By All Tables and Field Names For Export Offline Language Dictionary EN for System Returns Parameters This method has no parameters. ServerWebPagesLogin type Namespace EasyITCenter.ServerCoreWebPages Summary Custom Class For Login over Server Web Pages ServerWebPagesToken type Namespace EasyITCenter.ServerCoreWebPages Summary Server WebPages Communication Token Definition for Security content And Load Allowed Content ServerWebProviderGetOnlyApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Root Controller GetManagedCssJsScriptList() method Summary Provider: For Show EASY Script Codes on WebPages Returns Parameters This method has no parameters. GetSolutionToolList() method Summary Provider Its for Show Tools on WebPages Returns Parameters This method has no parameters. GetTemplateWebMenuList() method Summary Provider: For Show EASY Menu Codes on WebPages Returns Parameters This method has no parameters. ServerWebsiteStaticFilesApi type Namespace UploadFilesServer.Controllers GetFiles(request) method Summary WebStatic Files for Website and Path Get Full Folder Info Returns Parameters Name Type Description request EasyITCenter.DBModel.StaticFilesRequest SetReportFilter type Namespace EasyITCenter.DBModel Summary Database Model Extension Definitions Its API Filter, Extended Classes, Translation, etc SitemapController type Namespace EasyITCenter.ServerCoreDBSettings Summary Sitemap.xml Routing See Also Microsoft.AspNetCore.Mvc.Controller SoftwareTriggers type Namespace EasyITCenter.ControllersExtensions Summary Softwasre Triggers For Web and System Login/Visit History View WriteVisit(ipAddress,userId,userName) method Summary Trigger User Login History Parameters Name Type Description ipAddress System.String userId System.Int32 userName System.String WriteWebVisit(ipAddress) method Summary Trigger Web IP Hosts History List Parameters Name Type Description ipAddress System.String SomeRSSProvider type Namespace EasyITCenter.ServerCoreDBSettings Summary RSS Provider Startup type Namespace EasyITCenter Summary Server Startup Definitions Configure(app,serverLifetime) method Summary Server Core: Main Enabling of Server Services, Technologies, Modules, etc.. Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder serverLifetime Microsoft.Extensions.Hosting.IHostApplicationLifetime ConfigureServices(services) method Summary Server Core: Main Configure of Server Services, Technologies, Modules, etc.. Returns void. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection ServerOnStarted() method Summary Server Core Enabling Disabling Hosted Services Parameters This method has no parameters. StdAuthGenericProviderApi`3 type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase StdFreeGenericProviderApi`3 type Namespace EasyITCenter.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase SystemBuilderOnlinePreviewApi type Namespace EasyITCenter.ServerCoreDBSettings GetWebBuilderCodePreview() method Summary SYSTEM WebBuilder Code Library Preview Api Returns Parameters This method has no parameters. GetWebBuilderGlobalBodyBlockPreview(id) method Summary SYSTEM WebBUilder Global Page Body Block Preview API Returns Parameters Name Type Description id System.Int32 The identifier. GetWebBuilderMenuPreview(id) method Summary SYSTEM WebBuilder Menu Preview Api Returns Parameters Name Type Description id System.Int32 The identifier. SystemOperationMessage type Namespace EasyITCenter.DBModel Summary Custom Definition for Returning List with One Record from Operation Stored Procedures SystemStdAuthGenericProviderApi`3 type Namespace EasyITCenter.ServerCoreDBSettings Summary See Also Microsoft.AspNetCore.Mvc.ControllerBase SystemStdFreeGenericProviderApi`3 type Namespace EasyITCenter.ServerCoreDBSettings Summary See Also Microsoft.AspNetCore.Mvc.ControllerBase SystemWebDocApi type Namespace EasyITCenter.Controllers _hostingEnvironment constants Summary For Webroot folder Update with detect changes and modify static pages GetMdDocumentPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. GetMdLibraryPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. UploadFileData type Namespace EasyITCenter.DBModel Summary Generator File Class structure UploadGeneratorFiles type Namespace EasyITCenter.DBModel Summary Generator Uploading files for Generators UserConfig type Namespace EasyITCenter.ServerCoreWebPages Summary Custom Class For UserConfig over Server Web Pages WebMessage type Namespace EasyITCenter.ServerCoreWebPages Summary Custom WebMessage Class For Server Web Pages WebPagesAdminGroupMenuListApi type Namespace EasyITCenter.Controllers DeleteWebGroupMenuList(id) method Summary WebAdmin API Returns Parameters Name Type Description id System.String The identifier. InsertOrUpdateGroupWebMenuList(record) method Summary WebAdmin API Returns Parameters Name Type Description record EasyITCenter.ServerCoreWebPages.WebSettingList1 The record. WebPagesMessagesListApi type Namespace EasyITCenter.Controllers GetWebPageMessagesList() method Summary Gets the web page messages list. Returns Parameters This method has no parameters. InsertWebPageMessagesList(webdata) method Summary Inserts the web page messages list. Returns Parameters Name Type Description webdata EasyITCenter.ServerCoreWebPages.WebMessage The webdata. WebPagesSystemDataGetOnlyApi type Namespace EasyITCenter.ServerCoreDBSettings Summary Server WebPages Controller GetDeveloperNewsList(rec) method Summary Web Developer News Info Api Returns Parameters Name Type Description rec M:EasyITCenter.ServerCoreDBSettings.WebPagesSystemDataGetOnlyApi.GetDeveloperNewsList The record. GetMottoList() method Summary MottoList API for Web Portal Returns Parameters This method has no parameters. WebPagesSystemToolsApi type Namespace EasyITCenter.ServerCoreDBSettings SaveNewMinifiedFile(rec) method Summary Saving Minified File API Allowed Only In Savig Time Api Is Hidden Its Called Back From external minifier Tool Returns Parameters Name Type Description rec EasyITCenter.ServerCoreWebPages.MinifiedFile The record. WebPagesUserApi type Namespace EasyITCenter.ServerCoreDBSettings PostSendVerifyCode(email) method Summary WebPages Verification Email Returns Parameters Name Type Description email EasyITCenter.ServerCoreWebPages.EmailVerification The email. WebRegistration type Namespace EasyITCenter.ServerCoreWebPages Summary WebPages User Registration class WebSocketExtension type Namespace EasyITCenter.ServerCoreStructure Summary WebSocket Extension Definition For Simple Central Control All Connection By Connection Path and Timeout WebSocketLogProvider type Namespace EasyITCenter.ServerCoreStructure Summary !!! Implemented Server Core WebSocket System LogProvider Stream This Is Special Serice For Remote Monitoring On More Devices in OneTime See Also Microsoft.Extensions.Logging.ILoggerProvider WebSocketLogger type Namespace EasyITCenter.ServerCoreStructure Summary Server Core WebSocket System Logger Interface See Also Microsoft.Extensions.Logging.ILogger Log``1(logLevel,eventId,state,exception,formatter) method Summary Used to log the entry. Parameters Name Type Description logLevel Microsoft.Extensions.Logging.LogLevel An instance of LogLevel. eventId Microsoft.Extensions.Logging.EventId The event's ID. An instance of EventId. state ``0 The event's state. exception System.Exception The event's exception. An instance of Exception formatter System.Func{``0,System.Exception,System.String} A delegate that formats Generic Types Name Description TState WebToolsOperations type Namespace EasyITCenter.ServerCoreStructure Summary Server Web Helpers for EASY working Here are extension for Database Model, WebSocket DeleteWebSourceFile(hostingEnvironment,record) method Summary Delete Managed Web Source Files from Dev and Startup Folders Delete Minified and Full Script Returns Parameters Name Type Description hostingEnvironment Microsoft.AspNetCore.Hosting.IHostingEnvironment@ The hosting environment. record EasyITCenter.DBModel.WebCoreFileList@ The record. SaveWebSourceFile(hostingEnvironment,record) method Summary Saving Modified Managed Web Source Files to Dev and Startup Folders Used For JS,CSS Files Returns Parameters Name Type Description hostingEnvironment Microsoft.AspNetCore.Hosting.IHostingEnvironment@ The hosting environment. record EasyITCenter.DBModel.WebCoreFileList@ The record. WorkFlowContext type Namespace EasyITCenter.ServerCoreDBSettings Summary TODO Inherit DB Context with Table Prefix WorkflowContextExtensions type Namespace EasyITCenter.ServerCoreDBSettings Summary Database Context Extensions for All Types Procedures For Retun Data in procedure can be Simple SELECT * XXX and you Create Same Class for returned DataSet"
  },
  "EASY-DATA/EasyITCenter-System.html": {
    "href": "EASY-DATA/EasyITCenter-System.html",
    "title": "EasyITSystemCenter",
    "keywords": "EasyITSystemCenter Contents ApiUrls App #ctor() TiltReceiptDoc appRuntimeData log AppQuitRequest(silent) AppRestart() ApplicationLogging(ex,customMessage) ApplicationQuit() CurrentDomain_FirstChanceException(sender,e) InitializeComponent() Main() OnStartup(e) RootAppKeyDownController(sender,e) StartupLocaslWebServer() AppRuntimeData AppVersion Authentification BasicAttachmentListPage InitializeComponent() BasicCalendarListPage InitializeComponent() BasicCurrencyListPage InitializeComponent() BasicImageGalleryListPage ClearGallery() GrayscaleClick(sender,e) ImageChangesCancelClick(sender,e) InitializeComponent() LoadFromServer() RefreshViewPhoto(selectedPhotoId) SaveImageToServer(onlyThis) BasicItemListPage InitializeComponent() BasicUnitListPage InitializeComponent() BasicVatListPage InitializeComponent() BusinessAddressListPage InitializeComponent() BusinessBranchListPage InitializeComponent() BusinessCreditNoteListPage InitializeComponent() BusinessExchangeRateListPage InitializeComponent() BusinessIncomingInvoiceListPage InitializeComponent() BusinessIncomingOrderListPage InitializeComponent() BusinessMaturityListPage InitializeComponent() BusinessNotesListPage InitializeComponent() BusinessOfferListPage InitializeComponent() BusinessOutgoingInvoiceListPage InitializeComponent() BusinessOutgoingOrderListPage InitializeComponent() BusinessPaymentMethodListPage InitializeComponent() BusinessPaymentStatusListPage InitializeComponent() BusinessReceiptListPage InitializeComponent() BusinessWarehouseListPage InitializeComponent() ClientSettingsPage InitializeComponent() CommOperations CrashReporterSettings _ReportCrash DBJsonFile DBOperations DBTranslation(systemName,notCreateNew,comaList,lang) LoadOrRefreshUserData() LoadStartupDBData() LoadWaitingDataInSleepMode() SaveSystemFailMessage(message,logLevel) SetNonUserDataOnSuccessStartUp() DBResultMessage DataOperations NullSetInExtensionFields``1() ParameterCheck(parameterName) TranslateFormFields``1() DataViewSupport DeserializedJson DocSrvDocTemplateListPage InitializeComponent() DocSrvDocumentationCodeLibraryListPage InitializeComponent() DocSrvDocumentationGroupListPage InitializeComponent() DocSrvDocumentationListPage InitializeComponent() DocumentItemList FileOperations ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) CopyDirectory(directory) CopyFile(from,to) CopyFiles(sourcePath,destinationPath) CreateDirectory(directory) CreateFile(file) CreatePath(path) DeleteDirectory(directory) DeleteFile(file) FileDetectEncoding(FileName) LoadSettings() ReadFile(fileName) SaveSettings() UnicodeToUTF8(strFrom) VncServerIniFile(path) WriteToFile(file,content) FormOperations AnalphabetAndNumericOnlyValidated() DisplayAllToolTips_OnClick(userControl) NumberOnlyValidated() RemoveDisabledSpacesFromTextInput() GeneratedInternalTypeHelper AddEventHandler() CreateDelegate() CreateInstance() GetPropertyValue() SetPropertyValue() GraphsPage InitializeComponent() HardwareOperations ApplicationKeyboardMaping(e) HostWin32AppPage _appWin _iscreated _isdisposed exeName InitializeComponent() OnResize(e) OnSizeChanged(e) OnVisibleChanged(e) IconMaker Icon(color,iconPath) Info #ctor() #ctor() Body Title ProvideValue() InfoPopup BodyTextProperty HeaderTextProperty BodyText HeaderText HeaderTextPropertyChanged(d,e) InitializeComponent() Language LicSrvLicenseActivationFailListPage InitializeComponent() LicSrvLicenseAlgorithmListPage InitializeComponent() LicSrvUsedLicenseListPage InitializeComponent() MainWindow #ctor() lastUserAction DataGridSelected DataGridSelectedIdListIndicator DgRefresh DownloadShow DownloadStatus MultiSameTabsEnabled OperationRunning ProgressRing RunReleaseMode ServerLoggerSource ServiceRunning ServiceStatus ShowSystemLogger SystemLogger UserLogged VncRunning AddOrRemoveTab(headerName,tabPage,tagText) BtnKeyboardClick(sender,e) BtnShowLoggerClick(sender,e) Btn_LaunchHelp_Click(sender,e) Btn_ShowModulePanel_Click(sender,e) Btn_about_click(sender,e) CbFilterDropDownClosed(sender,e) CbPrintReportsSelected(sender,e) FilterField_SelectionChanged(sender,e) InitializeComponent() LoadUserMenu() MainGrid_IsDraggingChanged(sender,e) MainWindow_Closing(sender,e) MainWindow_KeyDown(sender,e) MainWindow_Loaded(sender,e) MainWindow_MouseLeave() Menu_action_Click(sender,e) Mi_filter_Click(sender,e) Mi_logout_Click(sender,e) RemoveFilterItem_Click(sender,e) SetServiceStop() SetSystemModuleListPanel() ShowLoginDialog() ShowMessageOnMainWindow(error,message,confirm) StringToFilter(filterBox,advancedFilter) SystemLoggerSourceChanged_Click(sender,e) SystemModulePanel_Click(sender,e) SystemTimerController(sender,e) TabPanelOnSelectionChange(sender,e) TiltOpenForm(translateHeader) MathTypeOperations CheckTypeValue() MediaOperations ArrayToImage(array) CreateImageFile(file,frame,fileType) GetImageImmediatelly(path) SaveAppScreenShot(MainWindow,returnArrayOnly) ProdGuidGroupListPage InitializeComponent() ProdGuidOperationListPage InitializeComponent() ProdGuidPartListPage InitializeComponent() ProdGuidPersonListPage InitializeComponent() ProdGuidWorkListPage InitializeComponent() ReportSelection Resources Culture ResourceManager no_photo ScreenSaverPage InitializeComponent() ServerBrowsablePathListPage InitializeComponent() ServerCorsDefAllowedOriginListPage InitializeComponent() ServerHealthCheckTaskListPage InitializeComponent() ServerLiveDataMonitorListPage InitializeComponent() ServerModuleAndServiceListPage InitializeComponent() ServerSettingListPage InitializeComponent() ServerToolPanelDefinitionListPage InitializeComponent() ServerToolPanelListPage InitializeComponent() ServerToolTypeListPage InitializeComponent() SolutionEmailTemplateListPage InitializeComponent() SolutionEmailerHistoryListPage InitializeComponent() SolutionFailListPage InitializeComponent() SolutionLanguageListPage InitializeComponent() SolutionMessageModuleListPage InitializeComponent() SolutionMessageTypeListPage InitializeComponent() SolutionMixedEnumListPage InitializeComponent() SolutionMottoListPage InitializeComponent() SolutionOperationListPage InitializeComponent() SolutionSchedulerListPage InitializeComponent() SolutionStaticFileListPage InitializeComponent() SolutionUserListPage InitializeComponent() SolutionUserRoleListPage InitializeComponent() SolutionWebsiteListPage InitializeComponent() SpTableList Startup SupportPage InitializeComponent() SystemCustomPageListPage InitializeComponent() SystemDocumentAdviceListPage InitializeComponent() SystemDocumentTypeListPage InitializeComponent() SystemGroupMenuListPage InitializeComponent() SystemIgnoredExceptionListPage InitializeComponent() SystemLocalEnumSets SpecificationScriptTypes languages sections updateVariants SystemLoggerHelper SystemLoggerWebSocketClass SystemLoginHistoryListPage InitializeComponent() SystemMenuListPage InitializeComponent() SystemModuleListPage InitializeComponent() SystemMonitorPage InitializeComponent() SystemOperationListPage InitializeComponent() SystemOperationMessage SystemOperations FilterToString(filterBox) FirstLetterToLower(str) GetExceptionMessages(exception,msgCount) GetExceptionMessagesAll(exception,msgCount) IncreaseFileVersionBuild() RandomString(length) RemoveAppNamespaceFromString(stringForRemoveNamespace) SendMailWithMailTo(address,subject,body,attach) SendMailWithServerSetting(message) SetLanguageDictionary(Resources,languageDefault) StartExternalProccess(type,processCommand,startupPath,arguments) SystemParameterListPage InitializeComponent() SystemReportListPage InitializeComponent() SystemReportQueueListPage InitializeComponent() SystemStatuses SystemSvgIconListPage InitializeComponent() SystemTranslatedTableList SystemTranslationListPage InitializeComponent() SystemWindowDataModel #ctor() TemplateClassListAutoDBTranslationPage InitializeComponent() TemplateClassListAutoDBTranslationViewPage InitializeComponent() TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() TemplateClassListAutoDBTranslationWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListAutoDBTranslationWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateClassListPage InitializeComponent() TemplateClassListViewPage InitializeComponent() TemplateClassListWithParentPage InitializeComponent() TemplateClassListWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateDocumentViewPage #ctor() dataViewSupport InitializeComponent() TemplateSTLPage dataViewSupport InitializeComponent() TemplateSettingsPage #ctor() Languages dataViewSupport BtnApiTest_Click(sender,e) InitializeComponent() TemplateVideoPage dataViewSupport InitializeComponent() TemplateWebViewPage #ctor() dataViewSupport InitializeComponent() TextBoxBehavior TiltTargets ToolsOperations AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) UpdateVariant UserData WebBannedIpAddressListPage InitializeComponent() WebCodeEditorPage InitializeComponent() WebCodeLibraryListPage InitializeComponent() WebCoreFileListPage InitializeComponent() WebDeveloperNewsListPage InitializeComponent() WebDocumentationCodeLibraryListPage InitializeComponent() WebDocumentationListPage InitializeComponent() WebGlobalPageBlockListPage InitializeComponent() WebGroupMenuListPage InitializeComponent() WebMenuListPage InitializeComponent() WebModulePage InitializeComponent() WebSettingListPage InitializeComponent() WebVisitIpListPage InitializeComponent() WelcomePage InitializeComponent() ApiUrls type Namespace EasyITSystemCenter.Api Summary ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions TODO From Table? App type Namespace EasyITSystemCenter Summary App #ctor() constructor Summary Application Global Exceptions Controls Definitions Parameters This constructor has no parameters. TiltReceiptDoc constants Summary Tilt Document types definitions appRuntimeData constants Summary Global Application Startup Settings Central Parameters / Languages / User / Configure TODO must centalize to Globall APP class log constants Summary System Core Needs Runtime Data For Working //TODO move to RuntimeData AppQuitRequest(silent) method Summary System or Quit Parameters Name Type Description silent System.Boolean AppRestart() method Summary System Restart Controller Parameters This method has no parameters. ApplicationLogging(ex,customMessage) method Summary Full Application System logging Running If is AppSystemTimer is Enabled for disable other processes exceptions Full Application logging to file if enabled and to DB for solving by Developers Supported Custom Message Here Is Filling Local System Logger for Developers Logging to Database Are All non Developer working Parameters Name Type Description ex System.Exception customMessage System.String ApplicationQuit() method Summary MainWindow Closing Handler for Cleaning TempData, disable AddOns / Tool and Third Party Software Closing Third Party processes Parameters This method has no parameters. CurrentDomain_FirstChanceException(sender,e) method Summary FullSystem Logging Every Exception types are monitored for maximize correct running all processes, System addOns, systems, communications, threads, network All detail of application system add all used possibilities Parameters Name Type Description sender System.Object e System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Main() method Summary Application Entry Point. Parameters This method has no parameters. OnStartup(e) method Summary Connected Starting Video Parameters Name Type Description e System.Windows.StartupEventArgs RootAppKeyDownController(sender,e) method Summary Keyboard Pointer to Central Keyboard Reaction Definitions Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs StartupLocaslWebServer() method Summary Local Web Server Controller Parameters This method has no parameters. AppRuntimeData type Namespace EasyITSystemCenter.GlobalClasses Summary !!!SYSTEM Global Runtime Monitor Definition For One Point monitoring For Processes and each other Definition For optimize the System Running TODO move All Central Definitions Here create Monitor Window for managing AppVersion type Namespace EasyITSystemCenter.Classes Summary Program version Class Authentification type Namespace EasyITSystemCenter.GlobalClasses Summary Class for User Authentication information BasicAttachmentListPage type Namespace EasyITSystemCenter.Pages Summary BasicAttachmentListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCalendarListPage type Namespace EasyITSystemCenter.Pages Summary BasicCalendarListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCurrencyListPage type Namespace EasyITSystemCenter.Pages Summary BasicCurrencyListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicImageGalleryListPage type Namespace EasyITSystemCenter.Pages Summary BasicImageGalleryListPage ClearGallery() method Summary Phycical clear local storage and form Parameters This method has no parameters. GrayscaleClick(sender,e) method Summary Images Effect Part Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs ImageChangesCancelClick(sender,e) method Summary Image Graphics Changes Controllers Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadFromServer() method Summary Last proccess Returns Parameters This method has no parameters. RefreshViewPhoto(selectedPhotoId) method Summary Parameters Name Type Description selectedPhotoId System.Nullable{System.Int32} selectedPhotoId -1 is Select Last SaveImageToServer(onlyThis) method Summary null For Full Folder else No of dbId, 0 = new Returns Parameters Name Type Description onlyThis System.Nullable{System.Int32} BasicItemListPage type Namespace EasyITSystemCenter.Pages Summary BasicItemListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicUnitListPage type Namespace EasyITSystemCenter.Pages Summary BasicUnitListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicVatListPage type Namespace EasyITSystemCenter.Pages Summary BasicVatListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessAddressListPage type Namespace EasyITSystemCenter.Pages Summary BusinessAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessBranchListPage type Namespace EasyITSystemCenter.Pages Summary BusinessBranchListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessCreditNoteListPage type Namespace EasyITSystemCenter.Pages Summary BusinessCreditNoteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessExchangeRateListPage type Namespace EasyITSystemCenter.Pages Summary BusinessExchangeRateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessMaturityListPage type Namespace EasyITSystemCenter.Pages Summary BusinessMaturityListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessNotesListPage type Namespace EasyITSystemCenter.Pages Summary BusinessNotesListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOfferListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOfferListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentMethodListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentMethodListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentStatusListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentStatusListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessReceiptListPage type Namespace EasyITSystemCenter.Pages Summary BusinessReceiptListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessWarehouseListPage type Namespace EasyITSystemCenter.Pages Summary BusinessWarehouseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ClientSettingsPage type Namespace EasyITSystemCenter.Pages Summary ClientSettingsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. CommOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Communication Operations as Console, Web Socket Plugins and Extensions communications CrashReporterSettings type Namespace EasyITSystemCenter.SystemConfiguration Summary Libreria condivisa _ReportCrash constants Summary FirstRun DBJsonFile type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DBOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised DBFunctions as Load DB Congig, System Dials (Language, Params) Another Db functions As Saving System Loging, Language Dictionary Autofiling DBTranslation(systemName,notCreateNew,comaList,lang) method Summary Centralised Method for Translating by DB Dictionary Service insert the news words for translate (After translate request) to Database Automaticaly with Empty Translate. Service return translate if is possible or requested word send back CamelCase ignored Default Language: CZ Returns Parameters Name Type Description systemName System.String notCreateNew System.Boolean comaList System.Boolean lang System.String LoadOrRefreshUserData() method Summary Centralised Method for Refresh All UserData params, for correct App running. Thinking for remove and new Load Actualy limited by DebugingHelpSetting Itr user After Succes User Login Parameters This method has no parameters. LoadStartupDBData() method Summary Startup Load System Parameters ,Languages, System Controlling, Server Setting Parameters This method has no parameters. LoadWaitingDataInSleepMode() method Summary Reload SYSTEM Dials When System Sleep For Non Blocking Work Was Problem For More Startup Saving and Reloading with Language List Parameters This method has no parameters. SaveSystemFailMessage(message,logLevel) method Summary Save Exception to DB Fail List (System Log) Write to System Logger Parameters Name Type Description message System.String logLevel System.String SetNonUserDataOnSuccessStartUp() method Summary SYSTEM: Set NonUser Startup Data for Correct Prepare System Its for All Status Possible NODB,OS,IS,Network,etc. For check ANY possible problems out of System Parameters This method has no parameters. DBResultMessage type Namespace EasyITSystemCenter.Api Summary Global API Definition of Result API calls for All Calling of Insert / Update / Delete DataOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized DataOperations as Cleaning dataset Language Dictionary Auto filing NullSetInExtensionFields``1() method Summary !!! SYSTEM RULE: ClassList with joining fields names must be nullable before API operation !!! ClassName must contain: \"Extended\" WORD Extension field in Class - Dataset must be set as null before Database Operation else is joining to other dataset is valid and can be blocked by fail key Its Check Extended in ClassName - SYSTEM RULE Returns Parameters This method has no parameters. Generic Types Name Description T ParameterCheck(parameterName) method Summary Return Requested User or if not exist default DB parameter CamelCase Ignored Returns Parameters Name Type Description parameterName System.String TranslateFormFields``1() method Summary !!! SYSTEM RULE: naming of automatic gtanslating fields must be type_fieldname fieldname is Translated Over DB List !!! Translation List is Automatic Filling For Logged Agendas Function using Referenced Objects Defined: Grid[label,button],Label, Button, EXTEND this Fuction for every Parent a Direct Types For One Function Translatings !!! Translate only Empty Contents Returns Parameters This method has no parameters. DataViewSupport type Namespace EasyITSystemCenter.Classes Summary Actual List Item informations for Controls each Page in MainView DeserializedJson type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DocSrvDocTemplateListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationGroupListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocumentItemList type Namespace EasyITSystemCenter.GlobalClasses Summary Univessal Document List (Item) for Offer,Order,Invoice FileOperations type Namespace EasyITSystemCenter.GlobalOperations ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary / Returns Parameters Name Type Description from System.String From. to System.String To. CopyFiles(sourcePath,destinationPath) method Summary Prepared Method for Files Copy Parameters Name Type Description sourcePath System.String destinationPath System.String CreateDirectory(directory) method Summary Creates the directory. Parameters Name Type Description directory System.String The directory. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The path. DeleteDirectory(directory) method Summary Deletes the directory. Parameters Name Type Description directory System.String The directory. DeleteFile(file) method Summary Deletes the file. Returns Parameters Name Type Description file System.String The file. FileDetectEncoding(FileName) method Summary Prepared Method for Get Information of File encoding UTF8,WIN1250,etc Returns Parameters Name Type Description FileName System.String LoadSettings() method Summary Application Startup Check and configure Data Structure in folder ProgramData And required files, load client configuration config.json Returns Parameters This method has no parameters. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. SaveSettings() method Summary Function for saving Application Configuration This is client configuration only Returns Parameters This method has no parameters. UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. VncServerIniFile(path) method Summary Generate ini file for start vns server default password: groupware Returns Parameters Name Type Description path System.String WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. FormOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised Forms Functions for work with Types, methods, Formats, Logic, supported methods AnalphabetAndNumericOnlyValidated() method Summary TextInput allowing Analphabetical and numeric character Only Parameters This method has no parameters. DisplayAllToolTips_OnClick(userControl) method Summary Secventional Show All Tooltips On Shown Objects in System Parameters Name Type Description userControl System.Windows.FrameworkElement NumberOnlyValidated() method Summary Text Input Allowing Numeric Characters Only Parameters This method has no parameters. RemoveDisabledSpacesFromTextInput() method Summary Removes the disabled spaces from referenced Inpout. Parameters This method has no parameters. GeneratedInternalTypeHelper type Namespace XamlGeneratedNamespace Summary GeneratedInternalTypeHelper AddEventHandler() method Summary AddEventHandler Parameters This method has no parameters. CreateDelegate() method Summary CreateDelegate Parameters This method has no parameters. CreateInstance() method Summary CreateInstance Parameters This method has no parameters. GetPropertyValue() method Summary GetPropertyValue Parameters This method has no parameters. SetPropertyValue() method Summary SetPropertyValue Parameters This method has no parameters. GraphsPage type Namespace EasyITSystemCenter.Pages Summary GraphsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. HardwareOperations type Namespace EasyITSystemCenter.GlobalOperations ApplicationKeyboardMaping(e) method Summary Application Keyboard controller Parameters Name Type Description e System.Windows.Input.KeyEventArgs HostWin32AppPage type Namespace EasyITSystemCenter.Pages Summary HostWin32AppPage _appWin constants Summary Handle to the application Window _iscreated constants Summary Track if the application has been created _isdisposed constants Summary Track if the control is disposed exeName constants Summary The name of the exe to launch InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. OnResize(e) method Summary Update display of the executable Parameters Name Type Description e System.Object Not used OnSizeChanged(e) method Summary Force redraw of control when size changes Parameters Name Type Description e System.Object Not used OnVisibleChanged(e) method Summary Create control when visibility changes Parameters Name Type Description e System.Object Not used IconMaker type Namespace EasyITSystemCenter.GlobalGenerators Summary System Online Icon Generator from custom Path Its for working with Icon over Database Dynamically Icon(color,iconPath) method Summary Generate Custom Icon from Defined Path Returns Parameters Name Type Description color System.Windows.Media.Color The color. iconPath System.String The icon path. Info type Namespace EasyITSystemCenter Summary A markup extension that returns a InfoPopup control preconfigured with header and text information according to the Title and Body properties. #ctor() constructor Summary Empty default constructor. Parameters This constructor has no parameters. #ctor() constructor Summary Inits the Info markup extension with title and body. Parameters This constructor has no parameters. Body property Summary Either a tooltips main text or a resource key that can be used to look up the text. Title property Summary Either a title text or a resource key that can be used to look up the title. ProvideValue() method Summary Performs a lookup for the defined Title and Info and creates the tooltip control. Returns A ToolTip that contains the InfoPopup control. Parameters This method has no parameters. InfoPopup type Namespace EasyITSystemCenter BodyTextProperty constants Summary The information to be displayed through the popup. HeaderTextProperty constants Summary An optional title to be displayed. May be omitted. BodyText property Summary A property wrapper for the BodyTextProperty dependency property: The information to be displayed through the popup. HeaderText property Summary A property wrapper for the HeaderTextProperty dependency property: An optional title to be displayed. May be omitted. HeaderTextPropertyChanged(d,e) method Summary A static callback listener which is being invoked if the HeaderTextProperty dependency property has been changed. Invokes the OnHeaderTextPropertyChanged instance method of the changed instance. Parameters Name Type Description d System.Windows.DependencyObject The currently processed owner of the property. e System.Windows.DependencyPropertyChangedEventArgs Provides information about the updated property. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Language type Namespace EasyITSystemCenter.Classes Summary Language definition support LicSrvLicenseActivationFailListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseActivationFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvLicenseAlgorithmListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseAlgorithmListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvUsedLicenseListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvUsedLicenseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. MainWindow type Namespace EasyITSystemCenter Summary MainWindow #ctor() constructor Summary System Core AND ALL shared functionalities Parameters This constructor has no parameters. lastUserAction constants Summary MainControls Screen Variables DataGridSelected property Summary Indicator for Enable New DataGrid Button DataGridSelectedIdListIndicator property Summary DataGrid have selected record indicator DgRefresh property Summary Indicator for enable Refresh Button Indicator DownloadShow property Summary Indicator for show Downloading area DownloadStatus property Summary Downloading of update status variable MultiSameTabsEnabled property Summary Enable/Disable MultiSameTabs Forms OperationRunning property Summary Indicator for mark operation status for any programmatic operations ProgressRing property Summary ProgressRing Visibility indicator RunReleaseMode property ServerLoggerSource property Summary System Logger Source Status and Controller This is status of Settings System Logger Source ServiceRunning property Summary Service Status description ServiceStatus property Summary Service Status public Variable ShowSystemLogger property Summary System Logger Activator by Setted Parametr Can be setted for All Apps or Every User individually SystemLogger property Summary System Online Logger for EASY developing UserLogged property Summary User Logged Status VncRunning property AddOrRemoveTab(headerName,tabPage,tagText) method Summary Tabs Pages control for Insert/Move/Change Pages Parameters Name Type Description headerName System.String tabPage System.Object tagText System.String BtnKeyboardClick(sender,e) method Summary System tools controllers Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs BtnShowLoggerClick(sender,e) method Summary Show System On line Logger Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_LaunchHelp_Click(sender,e) method Summary Help button controller for Show Help File Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_ShowModulePanel_Click(sender,e) method Summary Show Metro Theme possibilities Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_about_click(sender,e) method Summary about applications information Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs CbFilterDropDownClosed(sender,e) method Summary Full dynamic apply sett ed filter Parameters Name Type Description sender System.Object e System.EventArgs CbPrintReportsSelected(sender,e) method Summary Print Report Selection Controller Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs FilterField_SelectionChanged(sender,e) method Summary Full dynamic set sign DataGrid advanced filter type Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadUserMenu() method Summary Load UserMenu After Login And Sort Parameters This method has no parameters. MainGrid_IsDraggingChanged(sender,e) method Summary Dragging and separate to more Applications: TabPanel drag Controller - not Used Parameters Name Type Description sender System.Object e System.Windows.RoutedPropertyChangedEventArgs{System.Boolean} MainWindow_Closing(sender,e) method Summary Applications Close Request Controller Parameters Name Type Description sender System.Object e System.ComponentModel.CancelEventArgs MainWindow_KeyDown(sender,e) method Summary MainWindow Keyboard pointer to Keyboard Central Application controller Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs MainWindow_Loaded(sender,e) method Summary Application Loaded Start Backend timer for check server set Theme Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs MainWindow_MouseLeave() method Summary Writing Last User action for monitoring Free Time Used by: SceenSaver Parameters This method has no parameters. Menu_action_Click(sender,e) method Summary THIS IS AUTOMATIC INCLUDE DATALIST VIEW MENU in FORMAT APIcallPage open or select existed TabPanel VERTICAL MENU - Copy and CHANGE ONLY Page Name AND Report CALL as /XXXX Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_filter_Click(sender,e) method Summary Full dynamic Show/Hidden DataGrid advanced Filter Menu Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_logout_Click(sender,e) method Summary Application Logout button Controller Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs RemoveFilterItem_Click(sender,e) method Summary Full dynamic Remove Item from DataGrid advanced Filter Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SetServiceStop() method Summary Server is unavailable All operations are blocked Parameters This method has no parameters. SetSystemModuleListPanel() method Summary Set System Module Content Parameters This method has no parameters. ShowLoginDialog() method Summary Application Login Dialog Parameters This method has no parameters. ShowMessageOnMainWindow(error,message,confirm) method Summary Central Application Message Dialog for All Info / Error / other messages for User Returns Parameters Name Type Description error System.Boolean message System.String confirm System.Boolean StringToFilter(filterBox,advancedFilter) method Summary Full dynamic build filter on selected page from saved advanced filter Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox advancedFilter System.String SystemLoggerSourceChanged_Click(sender,e) method Summary System Logger Source Selector Server Logger has Source From Client Settings by WebSocket URL Parameters Name Type Description sender System.Object The source of the event. e System.EventArgs The EventArgs instance containing the event data. SystemModulePanel_Click(sender,e) method Summary Open Selected System Module Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SystemTimerController(sender,e) method Summary Backend System Timer for check server connection Parameters Name Type Description sender System.Object e System.Timers.ElapsedEventArgs TabPanelOnSelectionChange(sender,e) method Summary Tab click selection change reload ID and Pointers for ListView Buttons Parameters Name Type Description sender System.Object The sender. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TiltOpenForm(translateHeader) method Summary Tilts: Standardized Opening or create Tilt documents Returns Parameters Name Type Description translateHeader System.String MathTypeOperations type Namespace EasyITSystemCenter.GlobalOperations CheckTypeValue() method Summary Global DataTypes Chwecker with Bool Result Used on System Parameters Parameters This method has no parameters. MediaOperations type Namespace EasyITSystemCenter.GlobalOperations ArrayToImage(array) method Summary Cresate Bitmap Image from DB array to Image for show preview Returns Parameters Name Type Description array System.Byte[] CreateImageFile(file,frame,fileType) method Summary Create More Image File Types NotUsed Parameters Name Type Description file System.IO.FileStream frame System.Windows.Media.Imaging.BitmapFrame fileType System.String GetImageImmediatelly(path) method Summary Important Closing connections of openned files by Form and binding this is solution for close oppened file after load Solution for All Files Parameters Name Type Description path System.String SaveAppScreenShot(MainWindow,returnArrayOnly) method Summary ScreenShot Function For Application Menu Tool If Return Array True, Image is returned in response Other Save Dialog is Opened Parameters Name Type Description MainWindow EasyITSystemCenter.MainWindow The main window. returnArrayOnly System.Boolean ProdGuidGroupListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidOperationListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPartListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPartListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPersonListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPersonListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidWorkListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidWorkListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ReportSelection type Namespace EasyITSystemCenter.Classes Summary Report naming support Resources type Namespace EasyITSystemCenter.Properties Summary Třída prostředků se silnými typy pro vyhledávání lokalizovaných řetězců atp. Culture property Summary Potlačí vlastnost CurrentUICulture aktuálního vlákna pro všechna vyhledání prostředků pomocí třídy prostředků se silnými typy. ResourceManager property Summary Vrací instanci ResourceManager uloženou v mezipaměti použitou touto třídou. no_photo property Summary Vyhledává lokalizovaný prostředek typu System.Drawing.Bitmap. ScreenSaverPage type Namespace EasyITSystemCenter.Pages Summary ScreenSaverPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerBrowsablePathListPage type Namespace EasyITSystemCenter.Pages Summary ServerBrowsablePathListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerCorsDefAllowedOriginListPage type Namespace EasyITSystemCenter.Pages Summary ServerCorsDefAllowedOriginListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerHealthCheckTaskListPage type Namespace EasyITSystemCenter.Pages Summary ServerHealthCheckTaskListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerLiveDataMonitorListPage type Namespace EasyITSystemCenter.Pages Summary ServerLiveDataMonitorListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerModuleAndServiceListPage type Namespace EasyITSystemCenter.Pages Summary ServerModuleAndServiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerSettingListPage type Namespace EasyITSystemCenter.Pages Summary ServerSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelDefinitionListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelDefinitionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolTypeListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailTemplateListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailerHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailerHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionFailListPage type Namespace EasyITSystemCenter.Pages Summary SolutionFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionLanguageListPage type Namespace EasyITSystemCenter.Pages Summary SolutionLanguageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageModuleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageTypeListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMixedEnumListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMixedEnumListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMottoListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMottoListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionOperationListPage type Namespace EasyITSystemCenter.Pages Summary SolutionOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionSchedulerListPage type Namespace EasyITSystemCenter.Pages Summary SolutionSchedulerListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionStaticFileListPage type Namespace EasyITSystemCenter.Pages Summary SolutionStaticFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserRoleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserRoleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionWebsiteListPage type Namespace EasyITSystemCenter.Pages Summary SolutionWebsiteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SpTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Generated Class TableList from Stored Procedure SystemSpGetTableList Startup type Namespace EasyITSystemCenter Summary Local WebServwer Startup SupportPage type Namespace EasyITSystemCenter.Pages Summary SupportPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemCustomPageListPage type Namespace EasyITSystemCenter.Pages Summary SystemCustomPageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentAdviceListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentAdviceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentTypeListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemIgnoredExceptionListPage type Namespace EasyITSystemCenter.Pages Summary SystemIgnoredExceptionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemLocalEnumSets type Namespace EasyITSystemCenter.GlobalClasses SpecificationScriptTypes constants Summary TODO FOR MOVE TO MICRODIAL languages constants Summary Client Setting Offline enum of Languages sections constants Summary Client Setting offline enum Menu Groups updateVariants constants Summary Client Setting offline enum Updater States SystemLoggerHelper type Namespace EasyITSystemCenter.SystemHelper Summary System Logger Helper Defined Central WebSocket Monitor Controller SystemLoggerWebSocketClass type Namespace EasyITSystemCenter.SystemHelper Summary System Logger WebSocket Monitor Controller Class Definition For Centralized Using SystemLoginHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SystemLoginHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemModuleListPage type Namespace EasyITSystemCenter.Pages Summary SystemModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMonitorPage type Namespace EasyITSystemCenter.Pages Summary SystemMonitorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationListPage type Namespace EasyITSystemCenter.Pages Summary SystemOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationMessage type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures SystemOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised System Functions for work with Types, methods, Formats, Logic, supported methods FilterToString(filterBox) method Summary SYSTEM Advanced Filter Conversion for API return existing filter for saving to string in selected Page Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox FirstLetterToLower(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetExceptionMessages(exception,msgCount) method Summary Mining All Exception Information For Central System Logger Ignore Some selected Fails is possible by Ignored Exception Settings Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetExceptionMessagesAll(exception,msgCount) method Summary Mining All Exception Information For Local System Logger EveryTime Show All fails for Best Developing On Expert Level Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 IncreaseFileVersionBuild() method Summary Automatic Increase version System Ideal for small systems with more release in 1 day Increase Windows Correct 3 position for Widows Installation In Debug is increase last 4 position Returns Parameters This method has no parameters. RandomString(length) method Summary Generate Random String with defined length Returns Parameters Name Type Description length System.Int32 The length. RemoveAppNamespaceFromString(stringForRemoveNamespace) method Summary Its Solution for this is a solution for demanding and multiplied servers Or Running SHARP and Test System By One Backend Server Service API Urls with Namespaces in Name are for Backend model with More Same Database Schemas Backend Databases count in One Server Service is Unlimited Parameters Name Type Description stringForRemoveNamespace System.String SendMailWithMailTo(address,subject,body,attach) method Summary System Mail sending Parameters Name Type Description address System.String subject System.String body System.String attach System.String SendMailWithServerSetting(message) method Summary Email Sender for send Direct Email by Server Configuration for Testing Parameters Name Type Description message System.String The message. SetLanguageDictionary(Resources,languageDefault) method Summary Settings Local Application Translation dictionaries (Resources Files) for Pages Will be replaced by DBDictionary, but for Offline Running must be possible Returns Parameters Name Type Description Resources System.Windows.ResourceDictionary languageDefault System.String StartExternalProccess(type,processCommand,startupPath,arguments) method Summary System External Process Starter for Conrtalized Using Return the processId when is started or null TODO create process Monitor save the monitored procceses to System Monitor must be refactored actual status Returns Parameters Name Type Description type System.String processCommand System.String startupPath System.String The startup path. arguments System.String The arguments. SystemParameterListPage type Namespace EasyITSystemCenter.Pages Summary SystemParameterListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportQueueListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportQueueListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemStatuses type Namespace EasyITSystemCenter.GlobalClasses Summary !!SYSTEM Global Definition for System Statuses SYSTEM Running mode In debug mode is disabled the System Logger Visual Studio Debugger difficult operation has problem If you want you can enable SystemLogger by change to: DebugWithSystemLogger Its Used as String EveryWhere Its good Soution for Centarized Statuses of System Errors Are Saved In SystemLogger or Database SystemSvgIconListPage type Namespace EasyITSystemCenter.Pages Summary SystemSvgIconListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemTranslatedTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Class for Using as customized list the List of API urls for Central using in the system One Api is One: Dataview / Right / Report Posibility / Menu Item / Page Exist rules for automatic processing in System Core Logic for simple Developing SystemTranslationListPage type Namespace EasyITSystemCenter.Pages Summary SystemTranslationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemWindowDataModel type Namespace EasyITSystemCenter.SystemStructure #ctor() constructor Summary Its Solution For MultiInstance Application If The InterTab Is Enabled Can be Dragged Tab To the New Application Parameters This constructor has no parameters. TemplateClassListAutoDBTranslationPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListAutoDBTranslationWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateClassListPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateDocumentViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For View document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSTLPage type Namespace EasyITSystemCenter.Pages Summary TemplateSTLPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSettingsPage type Namespace EasyITSystemCenter.Pages Summary TemplateSettingsPage #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. Languages constants Summary Define Collection For Combobox dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages BtnApiTest_Click(sender,e) method Summary Customized GET Call Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateVideoPage type Namespace EasyITSystemCenter.Pages Summary TemplateVideoPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateWebViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For internet pages document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TextBoxBehavior type Namespace EasyITSystemCenter.ProgramaticXamlBehaviors Summary TextBox Behavior SelectAll on Focus Example of Link in XAML xmlns:behaviors=\"clr-namespace:EasyITSystemCenter.ProgramaticXamlBehaviors\" in TextBox Add behaviors:TextBoxBehavior.SelectAllTextOnFocus=\"True\" TiltTargets type Namespace EasyITSystemCenter.GlobalClasses Summary Tilt Document Types Definitions ToolsOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Library With Extension Functions Of Exterrnal Tools AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) method Summary Avaloneditor Content Search Function With HighLight Parameters Name Type Description searchQuery System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) method Summary AvalonEditor Replace Matched Strings in Editor Parameters Name Type Description sourceString System.String targetString System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean selectedonly System.Boolean UpdateVariant type Namespace EasyITSystemCenter.GlobalClasses Summary Global class for using Name/Value - Example Reports, Language and others UserData type Namespace EasyITSystemCenter.GlobalClasses Summary Basic user data for login WebBannedIpAddressListPage type Namespace EasyITSystemCenter.Pages Summary WebBannedIpAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeEditorPage type Namespace EasyITSystemCenter.Pages Summary WebCodeEditorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCoreFileListPage type Namespace EasyITSystemCenter.Pages Summary WebCoreFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDeveloperNewsListPage type Namespace EasyITSystemCenter.Pages Summary WebDeveloperNewsListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGlobalPageBlockListPage type Namespace EasyITSystemCenter.Pages Summary WebGlobalPageBlockListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebModulePage type Namespace EasyITSystemCenter.Pages Summary WebModulePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebSettingListPage type Namespace EasyITSystemCenter.Pages Summary WebSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebVisitIpListPage type Namespace EasyITSystemCenter.Pages Summary WebVisitIpListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WelcomePage type Namespace EasyITSystemCenter.Pages Summary WelcomePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters."
  },
  "EASY-DATA/SUMMARY.html": {
    "href": "EASY-DATA/SUMMARY.html",
    "title": "",
    "keywords": "EIC&ESB-Globální IT Řešení na míru ```markdown Ver.2: Databáze Nápověda Ver.2: Automatické Funkcinality Ver.1: Vize a Nápady a Postupy Ver.3: Popis Změn a Vývoje Ver.2: Použité Nástoje 3rd Ver.19: Úvodní Informace Ver.19: Ceník a Kontakty ``` EIC-Dev Pravidla ```markdown Ver.9: EIC OS Implementace ``` EIC-DevTemplates ```markdown Ver.6: EDC Rady programování Ver.2: Konfigurace Serveru Ver.13: Structure EN Ver.8: Structure CZ Ver.11: EIC XML Code Docs Ver.7: EIC Rady programování Ver.6: EIC Server API CZ Ver.2: Static Web Portál ``` ESB-DevTemplates ```markdown Ver.7: ESB Rady programování Ver.3: ESB XML Code Docs Ver.4: Logika a Stuktura Ver.4: ESB Tiskové řešení Ver.8: Globální Funkce Ver.7: Doplňující SubProjekty ``` EIS-ESB-ClonedSmallServers ```markdown Ver.17: Expert Doc Configuration Ver.16: Expert Doc konfigurace Ver.15: Expert Document Web Server CZ Ver.17: Expert Document Web Server EN Ver.18: Ukázky Formátování Ver.19: Grafické Ukázky ```"
  },
  "EASY-IT-CENTER-SERVER/ServerCoreDefinitions/Servers/Github/Data/README.html": {
    "href": "EASY-IT-CENTER-SERVER/ServerCoreDefinitions/Servers/Github/Data/README.html",
    "title": "",
    "keywords": "Installation Info In Installation folder is folder \"Data\" in Project Installation In this Folder is Startup Database and config.txt Configuration file If your User in connection string has Enabled Create Database - DB will be created automatically Next Copy the License 'license.lic' file to \"Data\" folder Installed Git in OS System is Needed First Login user/password: You must do Registration new User Default Database: MSSQL Database Can be converted to any other Database Engine [oracle,DB2,postgress,mysql,Sqlite] It will be run because the EntityFramework is Used. Server need Valid connection string Only 1a] Generate correct Connection String with allow Create Database 1b] Install MSSQL DB to Server Manually from Data folder 2] Write this connection string to \"config.txt\" 3] Insert downloaded License File to Data folder Info] for read Startup info you can run exe / dll from command line HTTPS Certificate Setup with Trusted Certificate If you run Application on HTTPS you can set your valid PFX certificate. Copy your pfx certificate file to installed \"Data\" folder and startup server with params If you not set certificate parameters will be used autogenerated Dev untrusted certificate for 'localhost' Windows Installation Steps Run Installation Exe file Check \"config.txt\" Project file for correct connection string with allowed Create Database Copy the License 'license.lic' file to \"Data\" folder Is was installed as Windows Service - you can enable/disable over services Run the server and Done Linux Installation Steps Install ASPNETCORE6 Runtime support on your Linux Server Copy unpacked Project to some folder on Linux server Configure and enable new linux service dotnet-EasyITCenter.GitServer.service Check \"config.txt\" Project file in \"Data\" folder for correct connection string with allowed Create Database Copy the License 'license.lic' file to \"Data\" folder Run the server and Done Copy new service file dotnet-EasyITCenter.GitServer.service to '/lib/systemd/system' Linux server folder enable service by command: systemctl enable dotnet-ProjectManager.service run service by command: systemctl start dotnet-ProjectManager.service stop service by command: systemctl stop dotnet-ProjectManager.service status service by command: systemctl status dotnet-ProjectManager.service StartUp Info Posibilities Variables startup arguments must be written in quotation marks Startup without parameters Start the server with Default setting Default Port: 5001 Default Port: http Optional \"domain\" set domain for Auto generated certificate, can be set password param also Optional \"pfxFilename\" in installed Data folder Optional \"pfxPassword\" insert certificate password or set password for generated certificate //examples for Linux/Windows/OSX server.EXE server.EXE \"port:5000\" \"protocol:https\" server.EXE \"port:5000\" \"protocol:https\" \"domain:mydomain.eu\" server.EXE \"port:5000\" \"protocol:https\" \"domain:mydomain.eu\" \"pfxPassword:password\" server.EXE \"port:5000\" \"protocol:https\" \"pfxFilename:cert.pfx\" server.EXE \"port:5000\" \"protocol:https\" \"pfxFilename:cert.pfx\" \"pfxPassword:password\" server.dll \"port:3000\" \"protocol:http\" Developer Instsallation Help Manually Generate Database from migrations commands Run these command from Visual STudio console cd ./GitServer dotnet ef database update Multilanguage Screenshots This project is in English language, but program can be set to the any language for full ápplication translate Multilanguage Video MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/AutomatickéFunkcinality.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/AutomatickéFunkcinality.html",
    "title": "First TODO v Pořadí",
    "keywords": "Nový Dokument Portal k Vývoji Online z Web Editorů a Systému Podívejte se čerstvě Vydaný Dokumentační Portal komlpet v Češtině. Díky implementovanému AUTO překladači se už nestane že něčemu neporozumíte. Protože Správné porozumění je nejčastější Kámen Úrazu u tolik Trpících Dokumentací. Psát Dokumentaci je totiž horší než vývoj. Dokument Portal ANY LANG MS System Builder Online na Webu Web Portal tvořený již nyní Editorem v Systému Věřím, že budete mít zajímavou podívanou co se dá nachystat ve volném čase v 1 Měsíci. Poznámky z implementace Doc.Portálu First TODO v Pořadí Routingem muzu treba image nebo html file nebo cokoliv poslat do takoveho layoutu ktery v sobe bude mit editor a nacte si dany soubor sam a tak muzu udelat staticky html editor pro subdomain file Přidat Novou Agengu: HTML Generátory: Ya v knihovně nachystat generování různých typů HTML bude i nástroj při tvorbě Statických webů, prezentačních stránek, statických stránek, Přehledů, dokumentace, partnerská příprava dat vytvořit remote konzoli na server pro moznost instalace a stravy online ze systemu dodělat dynamicke API z SQL dodělat vyhledávání ve všech DB dokumentacích pro Editory - Search Panel Udělat sloučený Export vybraných knihoven jako StartuUp Script CSS Vytvořit agendu Nastavení k Docs, styly s uploadem, linky Vytvořit agendu napoveda kodu s vlastnimi castmi kodu - codecompletention Vytvořit Gendu Generování Dokumentace MD Vytvořit Agendu Generátory pro Web Portal a stranku skladat i z Generátorů Prenest Sablony Html Souboru z Razor do Agendy pro uplnou spravu zrusit agendu includovane scripty so sablon, - budou si udrzovat sablony takto: vytvořit agendu nastroju a k nim templaty v ni budou i editory a nastroje Kazdy Layout bude mit svoji Page a to bude plate i pro portaly PS: portalum dat index znacku a dovolit jich neomezene A k nim Sablony Stranek a tak pujde delat nastroje s Menu Atd, vazba musi byt zapsana v nich Ukladat je stejne jako portal scripty jsou potreba pro build serveru = dynamicke programovani TODO slozky upravit na browsable, allowedOpen in browser, must be authorized Nova agenda To je prace cca na 2 TYDNY, škoda že Chybí klientela, která by mi dala prostor Věnovat Tomuto řešení: MultiServer ANY MultiDB MultiSystem [kde i System bude příští měsic taky multi web server] spoustet si sve web aplikace to vse si muzete vyzkoušet jižř nyni Online. V sekce ke Stažení najdete Databázi MSSQL, Server i System Klienta v Plne verzi na 30 DNÍ. Když budete chtít pomoci s install.exe neváhejte se Ozvat. Teším se na společné Zítřky S pozdravem Svoboda Libor 33let Vývojář EASY-SYSTEM-Builder & EASY-DATA-Center & Visual Studio Help OS GIT WINDOWS LINUX MARKDOWN DOC SCHEMA DATABASES target of the new Groupware Solutions is set Maximal processes to this automatic solutions. Result Will Be: Create Table and Set API Template - its Done for DATABASE and Backend API Create Form from Templates In FrontEnd for the New Table - Its Done for New System Form (Agenda) Share With World : World will share Agendas with you also Agenda is Only 3 files: SQL(Table), API, FORM Ideal Copy Class from generated By Scaffold to final Form Its Absolute Perfect Solution For EASY Create Robust System in Few Months All Systems Supported: Machines Control, IS Systems, Terminals, and All Sub Systems Databáze Pravidla Pojmenovávání a pravidla pri tvorbě databáze zajišťují snadný přenos sktuktury od DB dat přímo k Formuláři xxxList - Tabulka braná jako Systémová promítá se do:[Api,AppMenu,Tisky,] xxxSupportList - Tabulka podřízená nepromítá se do [AppMenu,Tisky] ale má API Visual Studio Automatic MD File From XML Comments Install 'Vsxmd' Library add this code to 'PropertyGroup' in project file setting <GenerateDocumentationFile>True</GenerateDocumentationFile> <DocumentationMarkdown>$(MSBuildProjectDirectory)\\Golden.md</DocumentationMarkdown> Visual Studio Automatic Code Cleaning Install 'codemaid' Tool Visual Studio Automatic DataBase Schema Snapshot Install 'EntityFrameworkCoreScaffolding' Tool Use Example file 'scaffoldingsettings.json' for OneClick Snapshot GitHub Automatic MDBook Enable 'MDBook' tool For Code Use File: book.toml GitHub/GitLab Automatic Publish to GCloud Docker Enable Build Use File: Dockerfile GitHub/GitLab Automatic Publish to GCloud Docker Enable Build Use File: gitlab-ci.yml Linux Create Backend System Service for Automatic Control Read OS support Use File: Linux-dotnet-MyProject-service.service Windows Install application.exe as System Service for Automatic Control Read OS support Use File: install.bat Visual Studio Automatic Generate windows Help File chm Install 'GhostDoc' tool Run on Project for Generate Full Code COmment and Structure Help file MSSQL DATABASE Automatic BACKUP/RESTORE Use files from MSSQL_DB Can run from System Scheduler Can Run from SQL command Backend WebPages Automatic Controller from Pages Structure Enable Razor WebPages Engine Create new file 'cshtml' in folder ServerCorePages Page is automatic included to Controller !must we different than API URLS Cloning Database Schema To More instances from One Source FOR using Test / Dev / Sharp instances more Branches New Cloned System MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/CeníkaKontakty.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/CeníkaKontakty.html",
    "title": "",
    "keywords": "CURRENT PRICE LIST - You will finally experience a record return and not only in money For thinking, the development of tools and work with them worthy in the 21st century Price Idea: On the Implementation of production guides in a production company 5 Tables are sufficient A CUSTOM REPORT usually takes 0.5 - 2 hours The import of the dialer usually takes 1 hour BUILDING A SMALL AVERAGE CUSTOM SYSTEM (5 Tables) from 20,000CZK or hourly 750CZK/Hour BUILDING A SMALL AVERAGE CUSTOM SYSTEM (10 Tables) from CZK 35,000 or hourly CZK 750/Hour Project License/Customer/Number and method of Use PRICE OF 1 Golden SERVER LICENSE CZK 10 000 PRICE OF 1 EASYSYSTEMBuilder LICENSE CZK 10 000 PROGRAM WORK CZK 750/Hour All offered Windows Applications are available to try online in the Application ShowRoom at https://KlikneteZde.Cz Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873 MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/DatabázeNápověda.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/DatabázeNápověda.html",
    "title": "DATABASES on Modern way - finally",
    "keywords": "DATABASES on Modern way - finally One Command and One Database in Project, never less - its my new Idea Possible DB Technologies for immediately using by start click only ALL MAIN DATABASE TYPES IN Golden by EF6 (entity framework) are supported ORACLE MSSQL MYSQL POSTGRESQL SQLITE DB2 etc SHARED PROJECT FILES MSSQL EASYBuilder DB installation script MSSQL ENGINE HELP COMMANDS AND TYPES #Run stored procedure for Backup Database via MSSQL user login sqlcmd -U ,username -P password -S .\\SQLEXPRESS -d DatabaseName -Q \"EXEC DB_BACKUP\" #Run stored procedure for Backup Database via Windows Login sqlcmd -S .\\SQLEXPRESS -d DatabaseName -Q \"EXEC DB_BACKUP\" #Recovery Database via MSSQL user Login and set Right for Database by running stored procedure 'DB_SETRIGHTS sqlcmd -U username -P password -S .\\SQLEXPRESS -Q \"ALTER DATABASE [LICENSESRV] SET SINGLE_USER WITH ROLLBACK IMMEDIATE;RESTORE DATABASE [LICENSESRV] FROM DISK = N'C:\\Database\\DEFAULT_DATABASES\\LICENSESRV.bak' WITH MOVE N'LICENSESRV' TO N'C:\\Database\\LICENSESRV.mdf', MOVE N'LICENSESRV_log' TO N'C:\\Database\\LICENSESRV_log.ldf', FILE = 2,RECOVERY, REPLACE, STATS = 10;ALTER DATABASE [LICENSESRV] SET MULTI_USER;\" sqlcmd -U username -P password -S .\\SQLEXPRESS -d LICENSESRV -Q \"EXEC DB_SETRIGHTS\" DATABASE Templates and System Rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to discharge -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced Filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger pro Tabulku pro nastavení jediné hodnoty u typu 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/DoplňujícíSubProjekty.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/DoplňujícíSubProjekty.html",
    "title": "",
    "keywords": "EASYTOOLS Addons for Touch panels, Controls,Data types, Forms, Media, Docs, 3D, Are Fully Free for Download (Each Licence Package included) Oppened OpenSource Community for including more than 1000 tools to system by community There are tools for EASYSYSTEMBuilder only IMPLEMENTED TOOLS Calendar - Calendar Control for Calendar Agenda - Unique Agenda and System Page CrashReporter - Autoatic Email sender to Developer if some fail in system core detected SqlConnectionDialog - Connection Dialog for connect to MSSQL server for run SQL commands TouchKeyboard - TouchKeyboard for implementing as TouchPanels/Terminal/Etc. VNCServer - Implemented Remote connection support ImageLibrary - Functionalities for Editing Images with Special Effects HTMLEditor - For Editing HTML Format webpage files HTMLFullEditor - For Editing HTML Format webpage files with images included MarkDownToFlow - For Show Markdown in System MarkDownToHtml - For Show Markdown in System POSIBILITIES You can implement more than 1000 WPF tools and functionalities on Github For Free Simple Github Implementations by WPF Library Next more are Available Cheap Solutions from World Developers on Google (in IT fall Language barrier) or Right Click and Translate None limitations for implementing any IS/OS/Other tools BackWard Complatibility to WINDOWS XP+ (Its need For Production Machines Only)"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EDCRadyprogramování.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EDCRadyprogramování.html",
    "title": "",
    "keywords": "Literature: https://code-maze.com/net-core-web-development-part1/ https://docs.microsoft.com/cs-cz/aspnet/core/security/cors?view=aspnetcore-6.0 https://docs.microsoft.com/cs-cz/ef/core/cli/dotnet https://medium.com/free-code-camp/an-awesome-guide-on-how-to-build-restful-apis-with-asp-net-core-87b818123e28 https://stackoverflow.com/questions/48282223/scaffold-dbcontext-to-different-output-folder https://codewithmukesh.com/blog/repository-pattern-caching-hangfire-aspnet-core/ Swagger Documentation Administration tools included in Backend server ApiDescription Generator - on url: /swagger Data manager for connected DB - on url: /CoreAdmin Server Health Service - on url: /ServerHealthService WEB root - with Websocket test utility Sitemap Automatic Generator Generate sitemap.xml and robots.txt Sitemap is Generated from Menu google sitemap https://github.com/uhaciogullari/SimpleMvcSitemap sitemap validating https://www.sitemaps.org/protocol.html robots.txt https://github.com/karl-sjogren/robots-txt-middleware JSON configuration Older Example (folder Data/config.json): \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running Golden Universal BACKEND Server Solution foe ANY LIN/WIN/DB Universal Secure MultiPlatform MultiDATABASE BackEnd Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURES / VIEWS/ SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR SIMPLE COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO USED TECHNOLOGIES (SUPPORT by CORE) IN SOLUTION CORE DB types: SQL Server, Oracle, MySQL, SQLite, PostgreSQL, DB2, etc. LINUX, WINDOWS, GCLOUD, DOCKER, AZURE implementation HTTP/HTTPS/WebSocket/RestFull / GET,POST,PATCH,PUT,DELETE,OPTION,etc. Detailed Logging, EASY Debugging ON ALL Dev layers CookiePolicy , CorsPolicy / Authentication / Authorization / Basic–JwtBearer Tokens Automatic API EndPoints /Controllers IMPORT FULL DB Schema/Tables/Procedures/Views from DB by ONE Scaffold Command DB Migrations AND Management of any layer supported Implemented SWAGGER AUTO API Generator: API Tester and Documentation Implemented DIRECT DATA MANAGER for view/editing data in Database Implemented Server HEALTH Check with support All statuses,communications,etc. for Server Control Custom WebPage for BackEnd Controlling supported LOW/NO code developing supported by DB/TABLE/API/CLASS Templates FULL code development supported More others tools and AddOns are on GitHub for implement by Package Install Databases - EASY Way with AUTO Management ASPNETCORE6 and Entity Framework 6 are perfect managing solution for any DATABASE Simple using is Domain for these Technologies, which is simple for each Power User Automatic Code Correction, Auto Helper, Generation DB Schema for Visual Control will not allow to make a mistake lot of Free Tools on GitHub, can be simple included with High effect These Tools are Included to Solution Core Complex Tool DB Data management Automatic API Tester and Documentation Generator System Checker with controlling and logging more than 100 Server/Network/DB/IS/OS events Used Primary Technologies for Unlimited Vision - Older AspNetCore 6 Entity Framework 6 Log4Net MSSQL connection HTTP/HTTPS/WebSocket/RestFull / [GET,POST,PATCH,PUT,DELETE,OPTION] Windows Service / Docker Service / Console application CookiePolicy CorsPolicy Authentication / Authorization / Basic – JwtBearer Automatic EndPoints /Controllers Database Model snapshot to Entity Entity Framework 6: The first green descriptions commands is for simple direct working with MSSQL database. This command generating „full DB Model Entity“ and „full DB API documentation“. Command must be run from „package manager console“. 1) Command for: generate full Entity – Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=SQLSRV;Database=DATAPUB;Persist Security Info=False;User ID=datapub;Password=datapub;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=192.168.1.35;Database=DATAPUB;User ID=datapub;Password=datapub;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel Command for: generate full DB Context – Database API documentation Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -ContextDir \"DbContexts\" 2) Replace Connection string in DBContect folder/Context file with this program part. (here you can enable SQL debugging) public DATAPUBContext(DbContextOptions<DATAPUBContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.SimpleCacheTimeMinutes)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.SimpleCachingEnabled); optionsBuilder.UseSqlServer(Program.ServerConfigSettings.DatabaseConnectionString, x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)); //.LogTo(Console.WriteLine); } Disable ForeignKey control you must set JSONIgnore & ValidateNever params for key in DBModel. Example is in UserList: [JsonIgnore] [ValidateNever] public virtual UserRoleList Role { get; set; } = null!; Init Migrations files to DOTNET migration management for Upload/Manage Database Migrations: Add-Migration Initial -Context Company.WebApplication1.Data.ApplicationDbContext Upload migrations to DATABASE dotnet ef database update Export Database model to SQL script dotnet ef dbcontext script --output Migrations/BasicDBModel.sql These nexts commands are for working with database migrations: Command for: generate script with full database model dotnet ef dbcontext script --output Migrations/BasicDBModel.sql Command for: generate new migration script dotnet ef migrations add ServerSetting.sql Command for: generate script for database update dotnet ef migrations bundle --output Migrations/BasicDBModel.sql Command for: show all migration List dotnet ef migrations list Command for: remove Last migration dotnet ef migrations remove Command for: run all waiting migrations scripts dotnet ef database update Generate executable Files https://learn.microsoft.com/cs-cz/dotnet/core/tools/dotnet-publish Run debug dotnet run --project BACKENDCORE -r win-x64 -c Debug --self-contained Generate exe file Without WebPage support dotnet publish BACKENDCORE -c Release -o bin -r win-x64 /p:PublishSingleFile=true DB backup procedure in Linux CREATE procedure [dbo].[DB_AUTOBACKUP] AS BEGIN DECLARE @dbName as varchar(50) = DB_NAME(); DECLARE @fileName as varchar(80) = CONCAT('/root/DBbackup/',@dbName,'_',FORMAT(GETDATE(),'yyyyMMdd'),'.bak'); DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; END; GO One Project support More DBs = DBContexts these can be used whatever, MOre Api for More App for example The test version, if requested, should ideally be deployed separately for making changes Solution for Data selection by Role - its needed in SELECT API only if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } ASPNETCORE6 & ENTITY FRAMEWORK6 - SUPER SERVER For thinking, the development of tools and work with them worthy in the 21st century ASPNETCORE is a simple intuitive framework with a whisperer for easy development. The Current Solution already contains templates and samples and can be developed with their help robust system. More information can be found with the linked folders. The project is conceptually complex for complete laymen who learn a few steps over and over again. DB Views behave the same as tables Turn off foreign keys in the model To be able to work freely with the tables Server configuration The server loads the configuration from a file at startup and after connecting to the database replaces it with the settings from the database and starts the server according to the parameters \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Unique Services of sever /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Web Services /swagger - Automatic generator API model documentation and testing /CoreAdmin - Data Manager for the connected database /ServerHealthService - Service for setting health checks; server HW/SW API Communication on the BACKEND server side //Disable foreign keys in the model by adding JsonIgnore, ValidateNever : Sample [JsonIgnore] [ValidateNever] public virtual UserList User { get; set; } = null!; API Template The template is ready for complete communication with the table Just RENAME Authorization, INSERT/UPDATE/SELECT/DELETE Standard Table API Template //Inserting/Deleting Range Items into the Sub Table - for example Invoice Items var test = new EASYBUILDERContext(); test.OfferSupportLists.AddRange(record); result = test.SaveChanges(); var test = new EASYBUILDERContext(); test.OfferSupportLists.RemoveRange(data); int result = test.SaveChanges(); EF6 DB procedure query with response parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new GoldenSystemContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); MSSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Command for: Auto Generate full DB – complete Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" EF6 Query Check Token.Role/Issuer - UserName, Include sub table Foreign Table if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.ToList(); } else { data = new GoldenContext().AddressLists.Include(a => a.User) .Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer).ToList(); } Ignore more Sub Tables from include in API response return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles,WriteIndented = true }); Advanced Query Select for Admin user Request suppport if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } Extend Table schema with columns from another table data = new GoldenContext().DocumentTypeLists .Include(d => (d.SystemNameNavigation)).Select(x => new ExtendedDocumentTypeList { Id = x.Id, SystemName = x.SystemName, Description = x.Description, DescriptionCz = x.SystemNameNavigation.DescriptionCz, DescriptionEn = x.SystemNameNavigation.DescriptionEn, UserId = x.UserId, Timestamp = x.Timestamp }).ToList(); Join Table with new custom join condition with exist record **And next more condition in WHERE to List ** (_joiner, _joined) => _joiner.City [HttpGet(\"/GoldenSystemWebApi/Search/GetSearchDial/{language}\")] public async Task<string> GetSearchDial(string language = \"cz\") { List<string> data; List<string> cityData; List<string> countryData; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.SystemName).ToList(); cityData = _dbContext.CityLists.Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.City).ToList(); data = _dbContext.HotelLists.Where(a=> a.Approved == true && a.Advertised == true).Select(a => a.Name).ToList(); } countryData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); cityData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); data = data.Distinct().ToList(); data.Sort(); return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles, WriteIndented = true }); } Join Table with new custom join condition with exist record to Tuple List countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => new Tuple<int, string>(_joined.Id, _joined.Name)).ToList(); MYSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Console command for download full database schema to Backend Server Project Scaffold-DbContext \"server=localhost;port=3306;database=lowercasedbname;uid=user;password=password;\" Pomelo.EntityFrameworkCore.MySql -OutputDir DBModel #MYSQL Entity DB Context Connection Code with loaded configuration settings #Absolute Detailed Logging supported, uncomment only protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseMySql(Program.ServerConfigSettings.DatabaseConnectionString, ServerVersion.AutoDetect(Program.ServerConfigSettings.DatabaseConnectionString)) ; //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)) //.LogTo(Console.WriteLine) ; } } API Condition for Role Admin only [Authorize(Roles = Role.Admin)] [Authorize(Roles = \"admin\")] [CustomAuthorize(Roles = \"admin\")] - Ist working only for full controller - not inserted is: allow All - This role unlogged user in App if not correct by api setting [AllowAnonymous] [Authorize] - This is condition for each API separately without role check if (Request.HttpContext.User.IsInRole(\"admin\")) - this is chek role in API or next method is check over Data model in request - in app is shown message about right or when correct do command API Condition Ignore For Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] BACKEND server Templates and system rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to develop -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger for Table to set a single value for type 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } CLONING DATABASE AS NEW DB AND SCHEMA AND ADDED to API Server AS NEXT NEW DB Cloning DB Schema is good solution for More DB instances In One Server for working as Example: more Branches Test / Dev / Sharp instances New Cloned System Do It By CloneEDCtoXXX.Bat in DatabaseFolder AND DO THESE 2 STEPS 1] Replace Hard DB connection for Multiple DB in Schema in configuration is only One Connection string for more Databases you must modify the config or Replace DsataContect by hard inserted connectin string Here is code for Replacing public SHOPINGERContext() { } public SHOPINGERContext(DbContextOptions<SHOPINGERContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(BackendServer.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(BackendServer.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseSqlServer(\"Server=192.168.1.141,1433;Database=SHOPINGER;User Id=shopinger;Password=shopinger;TrustServerCertificate=True\", x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); if (BackendServer.ServerRuntimeData.DebugMode) { optionsBuilder.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) .LogTo(message => Debug.WriteLine(message)).LogTo(Console.WriteLine); }; ; } } 2] Extend file 'ServerDATaBaseEngine' for Special DataWorking Extend Server definition for this new DatasertWorking for Support Get datatable from Stored Procedures public static List<T> SHOPINGERCollectionFromSql<T>(this SHOPINGERContext dbContext, string sql) where T : class, new() { using var cmd = dbContext.Database.GetDbConnection().CreateCommand(); cmd.CommandText = sql; if (cmd.Connection.State != ConnectionState.Open) cmd.Connection.Open(); try { List<T> results = null; DataTable table = new DataTable(); table.Locale = System.Globalization.CultureInfo.InvariantCulture; table.Load(cmd.ExecuteReader()); results = ServerCoreHelpers.BindList<T>(table).ToList(); return results; } catch (Exception Ex) { ServerCoreFunctions.SendEmail(new MailRequest() { Content = ServerCoreFunctions.GetSystemErrMessage(Ex) }); } finally { cmd.Connection.Close(); } return new List<T>(); } MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICOSImplementace.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICOSImplementace.html",
    "title": "",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center & Visual Studio Help Create Linux service and control for BACKEND Service Files are on Debian in folder: /lib/systemd/system add this code to 'PropertyGroup' create file: dotnet-Project-service.service How to Create/Control LINUX service command list systemctl enable dotnet-TABackend-service.service systemctl start dotnet-TABackend-service.service systemctl status dotnet-TABackend-service.service systemctl stop dotnet-TABackend-service.service Linux Run project dll command command list dotnet application.dll WINDOWS OS HELP & TIPS Install Backend 'EXE' file as Windows service by SC/InstalUtil/ utility Windows Service utilities and Service control from command Line examples are in 'WinServiceUtilities' folder MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICRadyprogramování.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICRadyprogramování.html",
    "title": "",
    "keywords": "Literature: https://code-maze.com/net-core-web-development-part1/ https://docs.microsoft.com/cs-cz/aspnet/core/security/cors?view=aspnetcore-6.0 https://docs.microsoft.com/cs-cz/ef/core/cli/dotnet https://medium.com/free-code-camp/an-awesome-guide-on-how-to-build-restful-apis-with-asp-net-core-87b818123e28 https://stackoverflow.com/questions/48282223/scaffold-dbcontext-to-different-output-folder https://codewithmukesh.com/blog/repository-pattern-caching-hangfire-aspnet-core/ Swagger Documentation Administration tools included in Backend server ApiDescription Generator - on url: /swagger Data manager for connected DB - on url: /CoreAdmin Server Health Service - on url: /ServerHealthService WEB root - with Websocket test utility Sitemap Automatic Generator Generate sitemap.xml and robots.txt Sitemap is Generated from Menu google sitemap https://github.com/uhaciogullari/SimpleMvcSitemap sitemap validating https://www.sitemaps.org/protocol.html robots.txt https://github.com/karl-sjogren/robots-txt-middleware JSON configuration Older Example (folder Data/config.json): \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running Golden Universal BACKEND Server Solution foe ANY LIN/WIN/DB Universal Secure MultiPlatform MultiDATABASE BackEnd Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURES / VIEWS/ SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR SIMPLE COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO USED TECHNOLOGIES (SUPPORT by CORE) IN SOLUTION CORE DB types: SQL Server, Oracle, MySQL, SQLite, PostgreSQL, DB2, etc. LINUX, WINDOWS, GCLOUD, DOCKER, AZURE implementation HTTP/HTTPS/WebSocket/RestFull / GET,POST,PATCH,PUT,DELETE,OPTION,etc. Detailed Logging, EASY Debugging ON ALL Dev layers CookiePolicy , CorsPolicy / Authentication / Authorization / Basic–JwtBearer Tokens Automatic API EndPoints /Controllers IMPORT FULL DB Schema/Tables/Procedures/Views from DB by ONE Scaffold Command DB Migrations AND Management of any layer supported Implemented SWAGGER AUTO API Generator: API Tester and Documentation Implemented DIRECT DATA MANAGER for view/editing data in Database Implemented Server HEALTH Check with support All statuses,communications,etc. for Server Control Custom WebPage for BackEnd Controlling supported LOW/NO code developing supported by DB/TABLE/API/CLASS Templates FULL code development supported More others tools and AddOns are on GitHub for implement by Package Install Databases - EASY Way with AUTO Management ASPNETCORE6 and Entity Framework 6 are perfect managing solution for any DATABASE Simple using is Domain for these Technologies, which is simple for each Power User Automatic Code Correction, Auto Helper, Generation DB Schema for Visual Control will not allow to make a mistake lot of Free Tools on GitHub, can be simple included with High effect These Tools are Included to Solution Core Complex Tool DB Data management Automatic API Tester and Documentation Generator System Checker with controlling and logging more than 100 Server/Network/DB/IS/OS events Used Primary Technologies for Unlimited Vision - Older AspNetCore 6 Entity Framework 6 Log4Net MSSQL connection HTTP/HTTPS/WebSocket/RestFull / [GET,POST,PATCH,PUT,DELETE,OPTION] Windows Service / Docker Service / Console application CookiePolicy CorsPolicy Authentication / Authorization / Basic – JwtBearer Automatic EndPoints /Controllers Database Model snapshot to Entity Entity Framework 6: The first green descriptions commands is for simple direct working with MSSQL database. This command generating „full DB Model Entity“ and „full DB API documentation“. Command must be run from „package manager console“. 1) Command for: generate full Entity – Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=SQLSRV;Database=DATAPUB;Persist Security Info=False;User ID=datapub;Password=datapub;MultipleActiveResultSets=False;Encrypt=False;TrustServerCertificate=False;Connection Timeout=30;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" Scaffold-DbContext \"Server=192.168.1.35;Database=DATAPUB;User ID=datapub;Password=datapub;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel Command for: generate full DB Context – Database API documentation Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -ContextDir \"DbContexts\" 2) Replace Connection string in DBContect folder/Context file with this program part. (here you can enable SQL debugging) public DATAPUBContext(DbContextOptions<DATAPUBContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.SimpleCacheTimeMinutes)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.SimpleCachingEnabled); optionsBuilder.UseSqlServer(Program.ServerConfigSettings.DatabaseConnectionString, x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)); //.LogTo(Console.WriteLine); } Disable ForeignKey control you must set JSONIgnore & ValidateNever params for key in DBModel. Example is in UserList: [JsonIgnore] [ValidateNever] public virtual UserRoleList Role { get; set; } = null!; Init Migrations files to DOTNET migration management for Upload/Manage Database Migrations: Add-Migration Initial -Context Company.WebApplication1.Data.ApplicationDbContext Upload migrations to DATABASE dotnet ef database update Export Database model to SQL script dotnet ef dbcontext script --output Migrations/BasicDBModel.sql These nexts commands are for working with database migrations: Command for: generate script with full database model dotnet ef dbcontext script --output Migrations/BasicDBModel.sql Command for: generate new migration script dotnet ef migrations add ServerSetting.sql Command for: generate script for database update dotnet ef migrations bundle --output Migrations/BasicDBModel.sql Command for: show all migration List dotnet ef migrations list Command for: remove Last migration dotnet ef migrations remove Command for: run all waiting migrations scripts dotnet ef database update Generate executable Files https://learn.microsoft.com/cs-cz/dotnet/core/tools/dotnet-publish Run debug dotnet run --project BACKENDCORE -r win-x64 -c Debug --self-contained Generate exe file Without WebPage support dotnet publish BACKENDCORE -c Release -o bin -r win-x64 /p:PublishSingleFile=true DB backup procedure in Linux CREATE procedure [dbo].[DB_AUTOBACKUP] AS BEGIN DECLARE @dbName as varchar(50) = DB_NAME(); DECLARE @fileName as varchar(80) = CONCAT('/root/DBbackup/',@dbName,'_',FORMAT(GETDATE(),'yyyyMMdd'),'.bak'); DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; DBCC SHRINKFILE (2, 1); BACKUP DATABASE @dbName TO DISK = @fileName; END; GO One Project support More DBs = DBContexts these can be used whatever, MOre Api for More App for example The test version, if requested, should ideally be deployed separately for making changes Solution for Data selection by Role - its needed in SELECT API only if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().ImageGalleryLists.FromSqlRaw(\"SELECT * FROM ImageGalleryList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } ASPNETCORE6 & ENTITY FRAMEWORK6 - SUPER SERVER For thinking, the development of tools and work with them worthy in the 21st century ASPNETCORE is a simple intuitive framework with a whisperer for easy development. The Current Solution already contains templates and samples and can be developed with their help robust system. More information can be found with the linked folders. The project is conceptually complex for complete laymen who learn a few steps over and over again. DB Views behave the same as tables Turn off foreign keys in the model To be able to work freely with the tables Server configuration The server loads the configuration from a file at startup and after connecting to the database replaces it with the settings from the database and starts the server according to the parameters \"DatabaseConnectionString\": - MSSQL DB connection string. Its only in config file. \"ConfigJwtLocalKey\": - Your JWT Local Key you can set random key. \"DefaultConfigServerStartupPort\": - Default Port for HTTP/HTTPS/SOCKET. \"ConfigWebSocketTimeoutMin\": - Default WebSocket Timeout. \"SocketBufferSizeKb\": - Default WebSocket message size. \"ServerTimeTokenValidationEnabled\": - Enable/Disable token Expiration. \"ConfigApiTokenTimeoutMin\": - Minutes count to token expiration. \"HttpsProtocol\": - Enable/Disable HTTP/ HTTPS on this port. Only one is always in use. \"ConfigCertificateDomain\": - Certificate for HTTPS is generated automaticaly i fis HTTPS is enabled. This domain is included in the certificate. \"ConfigCertificatePassword\": - Password for generated certificate.Its required. \"DatabaseInternalCachingEnabled\": - enable Microsoft internal cache for working with Data \"DatabaseInternalCacheTimeoutMin\": - Time for Purging old chache data \"EnableApiDescription\": true, - Enable full automatic API documentation generator with request sending for test included \"ModuleDataManagerEnabled\": true, - Enable unsafed Data manager \"ModuleHealthServiceEnabled\": - Enable Server Health Service with chedking if services running /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Unique Services of sever /BackendCheckApi - Api for checking Server Availability /Authentication - Basic authentication Standard message for receiving the Token Web Services /swagger - Automatic generator API model documentation and testing /CoreAdmin - Data Manager for the connected database /ServerHealthService - Service for setting health checks; server HW/SW API Communication on the BACKEND server side //Disable foreign keys in the model by adding JsonIgnore, ValidateNever : Sample [JsonIgnore] [ValidateNever] public virtual UserList User { get; set; } = null!; API Template The template is ready for complete communication with the table Just RENAME Authorization, INSERT/UPDATE/SELECT/DELETE Standard Table API Template //Inserting/Deleting Range Items into the Sub Table - for example Invoice Items var test = new EASYBUILDERContext(); test.OfferSupportLists.AddRange(record); result = test.SaveChanges(); var test = new EASYBUILDERContext(); test.OfferSupportLists.RemoveRange(data); int result = test.SaveChanges(); EF6 DB procedure query with response parameters = new List<SqlParameter> { new SqlParameter { ParameterName = \"@unlockCode\", Value = unlockCode }, new SqlParameter { ParameterName = \"@partNumber\", Value = partNumber }, new SqlParameter { ParameterName = \"@ipAddress\", Value = clientIPAddr }, new SqlParameter { ParameterName = \"@allowed\" , Value = allowed, Direction = System.Data.ParameterDirection.Output} }; data = new GoldenSystemContext().Database.ExecuteSqlRaw(\"exec CheckUnlockKey @unlockCode, @partNumber , @ipAddress, @allowed output\", parameters.ToArray()).ToString(); allowed = bool.Parse(parameters[3].Value.ToString()); MSSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Command for: Auto Generate full DB – complete Database Model Entity Framework Scaffold-DbContext \"Server=SQLSRV\\SQLEXPRESS;Database=DATAPUB;Trusted_Connection=True;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel -ContextDir \"DBContexts\" EF6 Query Check Token.Role/Issuer - UserName, Include sub table Foreign Table if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.ToList(); } else { data = new GoldenContext().AddressLists.Include(a => a.User) .Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer).ToList(); } Ignore more Sub Tables from include in API response return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles,WriteIndented = true }); Advanced Query Select for Admin user Request suppport if (Request.HttpContext.User.IsInRole(\"admin\")) { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")).AsNoTracking().ToList(); } else { data = new GoldenContext().AddressLists.FromSqlRaw(\"SELECT * FROM AddressList WHERE 1=1 AND \" + filter.Replace(\"+\", \" \")) .Include(a => a.User).Where(a => a.User.UserName == Request.HttpContext.User.Claims.First().Issuer) .AsNoTracking().ToList(); } Extend Table schema with columns from another table data = new GoldenContext().DocumentTypeLists .Include(d => (d.SystemNameNavigation)).Select(x => new ExtendedDocumentTypeList { Id = x.Id, SystemName = x.SystemName, Description = x.Description, DescriptionCz = x.SystemNameNavigation.DescriptionCz, DescriptionEn = x.SystemNameNavigation.DescriptionEn, UserId = x.UserId, Timestamp = x.Timestamp }).ToList(); Join Table with new custom join condition with exist record **And next more condition in WHERE to List ** (_joiner, _joined) => _joiner.City [HttpGet(\"/GoldenSystemWebApi/Search/GetSearchDial/{language}\")] public async Task<string> GetSearchDial(string language = \"cz\") { List<string> data; List<string> cityData; List<string> countryData; using (new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })) { countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.SystemName).ToList(); cityData = _dbContext.CityLists.Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => _joiner.City).ToList(); data = _dbContext.HotelLists.Where(a=> a.Approved == true && a.Advertised == true).Select(a => a.Name).ToList(); } countryData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); cityData.ForEach(item => data.Add(DBOperations.DBTranslate(item, language))); data = data.Distinct().ToList(); data.Sort(); return JsonSerializer.Serialize(data, new JsonSerializerOptions() { ReferenceHandler = ReferenceHandler.IgnoreCycles, WriteIndented = true }); } Join Table with new custom join condition with exist record to Tuple List countryData = _dbContext.CountryLists. Join(_dbContext.HotelLists.Where(a => a.Advertised && a.Approved == true), joiner => joiner.Id, joined => joined.CountryId, (_joiner, _joined) => new Tuple<int, string>(_joined.Id, _joined.Name)).ToList(); MYSQL IN ASPNETCORE HELP COMMANDS AND TYPES #Console command for download full database schema to Backend Server Project Scaffold-DbContext \"server=localhost;port=3306;database=lowercasedbname;uid=user;password=password;\" Pomelo.EntityFrameworkCore.MySql -OutputDir DBModel #MYSQL Entity DB Context Connection Code with loaded configuration settings #Absolute Detailed Logging supported, uncomment only protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(Program.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(Program.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseMySql(Program.ServerConfigSettings.DatabaseConnectionString, ServerVersion.AutoDetect(Program.ServerConfigSettings.DatabaseConnectionString)) ; //.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) //.LogTo(message => Debug.WriteLine(message)) //.LogTo(Console.WriteLine) ; } } API Condition for Role Admin only [Authorize(Roles = Role.Admin)] [Authorize(Roles = \"admin\")] [CustomAuthorize(Roles = \"admin\")] - Ist working only for full controller - not inserted is: allow All - This role unlogged user in App if not correct by api setting [AllowAnonymous] [Authorize] - This is condition for each API separately without role check if (Request.HttpContext.User.IsInRole(\"admin\")) - this is chek role in API or next method is check over Data model in request - in app is shown message about right or when correct do command API Condition Ignore For Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] BACKEND server Templates and system rules COPY/PASTE/RENAME supported For thinking, the development of tools and work with them worthy in the 21st century The displayed template codes can also be found in the Database Make the database model as honest as possible in relation to data and bindings The best solution is to have the database check the correctness of the data (in 1 place) The database contains a DBHELP help procedure Document items are deleted with a linked key Procedures for Backup/Restore are prepared in the DB The system uses SLQ, EF6, Procedures, Views, Functions That's all it takes to develop -- The procedure setting the rights for the user to the necessary operations USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE procedure [dbo].[DB_SETRIGHTS] AS BEGIN BEGIN TRY CREATE USER [easybuilder] FOR LOGIN [easybuilder] END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datareader] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY ALTER ROLE [db_datawriter] ADD MEMBER [easybuilder]; END TRY BEGIN CATCH END CATCH; BEGIN TRY GRANT EXECUTE TO [easybuilder]; END TRY BEGIN CATCH END CATCH; END; GO /* Template for creating standardized Tables (from Table -> CREATE TO) The template is used by way of REPLACE 'TemplateList' after 'NewTableList' edit fields correctly, set indexes and foreign keys System ID Columns - AutoIncrement, TimeStamp - InsertTime Keys: UserId - Binding to the UsersList Table */ USE [EASYBUILDER] GO SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TABLE [dbo].[TemplateList]( [Id] [int] IDENTITY(1,1) NOT NULL, [Name] [varchar](50) NOT NULL, [Description] [text] NULL, [Default] [bit] NOT NULL, [UserId] [int] NOT NULL, [Active] [bit] NOT NULL, [TimeStamp] [datetime2](7) NOT NULL, CONSTRAINT [PK_TemplateList] PRIMARY KEY CLUSTERED ( [Id] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY], CONSTRAINT [IX_TemplateList] UNIQUE NONCLUSTERED ( [Name] ASC )WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY] ) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_Active] DEFAULT ((1)) FOR [Active] GO ALTER TABLE [dbo].[TemplateList] ADD CONSTRAINT [DF_TemplateList_TimeStamp] DEFAULT (getdate()) FOR [TimeStamp] GO ALTER TABLE [dbo].[TemplateList] WITH CHECK ADD CONSTRAINT [FK_TemplateList_UserList] FOREIGN KEY([UserId]) REFERENCES [dbo].[UserList] ([Id]) GO ALTER TABLE [dbo].[TemplateList] CHECK CONSTRAINT [FK_TemplateList_UserList] GO /* System procedure for Reports with advanced filtering The procedure is part of the Supplied Database */ USE [EASYBUILDER] GO /****** Object: StoredProcedure [dbo].[ReportDataset] Script Date: 11.03.2023 6:45:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE PROCEDURE [dbo].[ReportDataset] @TableName varchar(50) = null, @Sequence int = 0 AS BEGIN -- SET NOCOUNT ON added to prevent extra result sets from -- interfering with SELECT statements. SET NOCOUNT ON; -- Intended for use with param-ed reports. -- To be called from various My-FyiReporting reports -- - Various reports with their own layouts are called from VB app after setting Queue with usp_ReportQueue_Push() -- each report then just contains : -- SET FMTONLY OFF; -- EXEC usp_ReportQueue_Pop @TableName='SomeTablename', @Sequence='10' -- DECLARE @ID int; DECLARE @NAME varchar(50); DECLARE @SQL nvarchar(MAX); DECLARE @FILTER nvarchar(MAX); DECLARE @SEARCH varchar(50); DECLARE @SEARCHCOLUMNLIST nvarchar(MAX); DECLARE @SEARCHFILTERIGNORE bit; DECLARE @RECID varchar(50); DECLARE @RECIDFILTERIGNORE bit; DECLARE @SEPARATEDCOLUMNS nvarchar(MAX); SELECT Top 1 @ID=[Id], @NAME=[Name], @SQL=[Sql], @FILTER=[Filter], @SEARCH=[Search], @SEARCHCOLUMNLIST=[SearchColumnList], @SEARCHFILTERIGNORE=[SearchFilterIgnore], @RECID=[RecId], @RECIDFILTERIGNORE=[RecIdFilterIgnore] FROM ReportQueueList WHERE [TableName]=@TableName AND [Sequence] = @Sequence; --PRERARE RECID IF (@RECID = 0 OR (@RECIDFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @RECID = '' END ELSE BEGIN SET @RECID = CONCAT(' AND Id=',@RECID); END --PRERARE SEARCH IF (@SEARCH = '' OR (@SEARCHFILTERIGNORE = 1 AND @FILTER <> '1=1')) BEGIN SET @SEPARATEDCOLUMNS = '1=1'; END ELSE BEGIN SELECT @SEPARATEDCOLUMNS = STRING_AGG (CONCAT(value,' LIKE ',char(39),'%',@SEARCH,'%',char(39)), ' OR ') FROM STRING_SPLIT (@SEARCHCOLUMNLIST, ','); END SET @SQL = CONCAT(@SQL,' WHERE 1=1 AND (', @FILTER,') AND (', @SEPARATEDCOLUMNS,') ',@RECID); --PRINT @SQL; --FOR Debuging EXECUTE sp_executesql @SQL; END GO --SQL Trigger for Table to set a single value for type 'Default' USE [EASYBUILDER] GO /****** Object: Trigger [dbo].[TR_UnitList] Script Date: 11.03.2023 6:48:06 ******/ SET ANSI_NULLS ON GO SET QUOTED_IDENTIFIER ON GO CREATE TRIGGER [dbo].[TR_UnitList] ON [dbo].[UnitList] FOR INSERT, UPDATE, DELETE AS DECLARE @Operation VARCHAR(15) IF EXISTS (SELECT 0 FROM inserted) BEGIN DECLARE @setDefault bit;DECLARE @RecId int; SET NOCOUNT ON; IF EXISTS (SELECT 0 FROM deleted) BEGIN --UPDADE SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END ELSE BEGIN -- INSERT SELECT @setDefault = ins.[Default] from inserted ins; SELECT @RecId = ins.Id from inserted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 0 WHERE Id <> @RecId; END END END ELSE BEGIN --DELETE SELECT @setDefault = ins.[Default] from deleted ins; SELECT @RecId = ins.Id from deleted ins; IF(@setDefault = 1) BEGIN UPDATE [dbo].UnitList SET [Default] = 1 WHERE Id IN(SELECT TOP (1) Id FROM [dbo].UnitList WHERE Id <> @RecId) ; END END GO ALTER TABLE [dbo].[UnitList] ENABLE TRIGGER [TR_UnitList] GO API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } CLONING DATABASE AS NEW DB AND SCHEMA AND ADDED to API Server AS NEXT NEW DB Cloning DB Schema is good solution for More DB instances In One Server for working as Example: more Branches Test / Dev / Sharp instances New Cloned System Do It By CloneEDCtoXXX.Bat in DatabaseFolder AND DO THESE 2 STEPS 1] Replace Hard DB connection for Multiple DB in Schema in configuration is only One Connection string for more Databases you must modify the config or Replace DsataContect by hard inserted connectin string Here is code for Replacing public SHOPINGERContext() { } public SHOPINGERContext(DbContextOptions<SHOPINGERContext> options) : base(options) { ChangeTracker.QueryTrackingBehavior = QueryTrackingBehavior.NoTracking; } protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { if (!optionsBuilder.IsConfigured) { optionsBuilder.ConfigureLoggingCacheTime(TimeSpan.FromMinutes(BackendServer.ServerConfigSettings.DatabaseInternalCacheTimeoutMin)); optionsBuilder.EnableServiceProviderCaching(BackendServer.ServerConfigSettings.DatabaseInternalCachingEnabled); optionsBuilder.UseSqlServer(\"Server=192.168.1.141,1433;Database=SHOPINGER;User Id=shopinger;Password=shopinger;TrustServerCertificate=True\", x => x.MigrationsHistoryTable(\"MigrationsHistory\", \"dbo\")); if (BackendServer.ServerRuntimeData.DebugMode) { optionsBuilder.UseLoggerFactory(LoggerFactory.Create(builder => { builder.AddConsole(); })) .LogTo(message => Debug.WriteLine(message)).LogTo(Console.WriteLine); }; ; } } 2] Extend file 'ServerDATaBaseEngine' for Special DataWorking Extend Server definition for this new DatasertWorking for Support Get datatable from Stored Procedures public static List<T> SHOPINGERCollectionFromSql<T>(this SHOPINGERContext dbContext, string sql) where T : class, new() { using var cmd = dbContext.Database.GetDbConnection().CreateCommand(); cmd.CommandText = sql; if (cmd.Connection.State != ConnectionState.Open) cmd.Connection.Open(); try { List<T> results = null; DataTable table = new DataTable(); table.Locale = System.Globalization.CultureInfo.InvariantCulture; table.Load(cmd.ExecuteReader()); results = ServerCoreHelpers.BindList<T>(table).ToList(); return results; } catch (Exception Ex) { ServerCoreFunctions.SendEmail(new MailRequest() { Content = ServerCoreFunctions.GetSystemErrMessage(Ex) }); } finally { cmd.Connection.Close(); } return new List<T>(); } MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICServerAPICZ.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICServerAPICZ.html",
    "title": "",
    "keywords": "Server Static API pro moduly, správu a ovládání Server má několik statických API používaných funkcí, správa implementované moduly, role, řízení. Zde je seznam statických API vyloučených v dokumentaci Auto API [GET] /ServerRestart - Admin Restart Server [GET] /AdminApiDocs - Dokumentace automatického rozhraní API [WS] /WS/ServerCoreMonitor - Server Core Socket Monitor [GET] /ServerDbDgmlSchema - Auto DB Schema Diagram [GET] /ServerHealthService - Monitor stavu serveru [GET] /Docs - Serverová statická dokumentace MD [GET] /Docs - Serverová statická dokumentace MD [GET] / - Centrální webový portál serveru [GET]/Downoads – Stahování ke stažení na serveru Zde je seznam statických API zahrnutých v dokumentaci Auto API Strukturu rozhraní API naleznete v dokumentaci Auto API [GET,POST] /ServerEmailer - Server Maas Emailing"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICXMLCodeDocs.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/EICXMLCodeDocs.html",
    "title": "Golden",
    "keywords": "Golden Contents AuthenticateResponse Expiration Id Name Role Surname Token BackendServer ServerConfigSettings ServerRuntimeData BuildWebHost(args) Main(args) RestartServer() ServerStartupDbDataLoading() StartServer() CommunicationController HttpContext CheckAdmin() CustomFtpUser #ctor(name) Name IsInGroup() CustomString DBResult DBResultMessage ErrorMessage InsertedId RecordCount Status DBWebApiResponses DatabaseContextExtensions EmailVerification ExpertDocApi GetDocumentationGroupedList(id) GoldenContext GetApiUserId(httpContext) IsAdmin(httpContext) GoldenSystemAuthenticationApi Authenticate(username,password) LifetimeValidator(notBefore,expires,token,params) RefreshUserToken(username,token) GoldenSystemBackendCheckApi GetBackendCheckApi() HostedFtpServer #ctor(ftpServerHost) StartAsync() StopAsync() HostedFtpServerMembershipProvider ValidateUser(username,password) ValidateUserAsync(username,password) IdFilter MailRequest NameFilter OperatingSystem ProcessClass RobotsController ServerConfigSettings ConfigApiTokenTimeoutMin ConfigCertificateDomain ConfigCertificatePassword ConfigCertificatePath ConfigJwtLocalKey ConfigMaxWebSocketBufferSizeKb ConfigServerGetLetsEncrypt ConfigServerStartupOnHttps ConfigServerStartupPort ConfigWebSocketTimeoutMin DatabaseConnectionString DatabaseInternalCacheTimeoutMin DatabaseInternalCachingEnabled EmailerSMTPLoginPassword EmailerSMTPLoginUsername EmailerSMTPPort EmailerSMTPServerAddress EmailerSMTPSslIsEnabled EmailerServiceEmailAddress ModuleDataManagerEnabled ModuleDbDiagramGeneratorEnabled ModuleHealthServiceEnabled ModuleHealthServiceRefreshIntervalSec ModuleMdDocumentationEnabled ModuleSwaggerApiDocEnabled ServerEnableWebSocketMonitor ServerFtpEngineEnabled ServerFtpSecurityEnabled ServerJsWebPagesEngineEnabled ServerJsWebStartupCommand ServerMvcWebPagesEngineEnabled ServerRazorWebPagesEngineEnabled ServerTimeTokenValidationEnabled ServerWebBrowserEnabled ServerWebSocketEngineEnabled SpecialCoreCheckerEmailSenderActive SpecialEnableMassEmail SpecialServerLanguage SpecialServerServiceName SpecialUseDbLocalAutoupdatedDials SpecialUserWebRootPath ServerConfigurationServices ConfigureAuthentication(services) ConfigureControllers(services) ConfigureCookie(services) ConfigureDatabaseContext(services) ConfigureFTPServer(services) ConfigureLetsEncrypt(services) ConfigureLogging(services) ConfigureScopes(services) ConfigureServerWebPages(services) ConfigureSingletons(services) ConfigureThirdPartyApi(services) ConfigureWebSocketLoggerMonitor(services) ServerCoreDbOperations DBTranslate(word,language) DBTranslateOffline(word,language) DBTranslateOnline(word,language) LoadStaticDbDials(onlyThis) WriteVisit(ipAddress,userId,userName) WriteWebVisit(ipAddress,userId,userName) ServerCoreExportApi ServerCoreFunctions ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) CopyDirectory(directory) CopyFile(from,to) CreateFile(file) CreatePath(path) FileDetectEncoding(FileName) FirstCharToLowerCase(str) GetByteArrayFrom64Encode(strContent) GetSelfSignedCertificate(password) GetSelfSignedCertificateFromFile() GetSystemErrMessage(exception,msgCount) GetUserApiErrMessage(exception,msgCount) LoadSettings() RandomString(length) ReadFile(fileName) RunProcess(processDefinition) SendEmail(mailRequest,sendImmediately) SendMassEmail(mailRequests) UnicodeToUTF8(strFrom) WriteToFile(file,content) ServerCoreHelpers AddSocketConnectionToCentalList(newWebSocket,socketAPIPath) BindList``1(dt) CheckTokenValidityFromString(tokenString) DisposeSocketConnectionsWithTimeOut() GetValidationParameters() IsValidEmail(email) ListenClientWebSocketMessages(webSocket,socketAPIPath) RemoveWhitespace(input) SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) SendMessageToClientSocket(webSocket,message) ServerCoreLoggerWS Echo(context,webSocket) Get() GetBySocketAPIPath(id) ServerCoreWebBuilderApi GetWebBuilderCodePreview() GetWebBuilderMenuPreview(id) ServerCoreWebUserApi PostSendVerifyCode(email) ServerDbDgmlSchemaApi #ctor(context) Get() ServerDocApi _hostingEnvironment GenerateMdBook() ServerEmailerApi ServerEnablingServices EnableCors() EnableEndpoints() EnableLogging(app,loggerFactory) EnableWebSocket(app) ServerLocalDbDials ServerModules ConfigureCoreAdmin(services) ConfigureDocumentation(services) ConfigureHealthCheck(services) ConfigureSwagger(services) ServerModulesEnabling EnableCoreAdmin() EnableDocumentation() EnableSwagger() ServerProviderHealthCheck Microsoft#Extensions#Diagnostics#HealthChecks#IHealthCheck#CheckHealthAsync(context,cancellationToken) ServerRestartApi ServerRuntimeData CentralWebSocketList LocalDBTableList ServerArgs ServerCancelToken ServerCoreStatus ServerFTPProvider ServerRestartRequest ConfigFile DataPath DebugMode Setting_folder Startup_path UserPath ServerWebPagesConfigApi Index() ServerWebPagesLogin ServerWebPagesToken SetReportFilter SitemapController Startup Configure(app,serverLifetime) ConfigureServices(services) SystemDocApi _hostingEnvironment GetMdDocumentPreview() GetMdLibraryPreview() UserConfig WebMessage WebRegistration WebSocketExtension WebSocketLogProvider WebSocketLogger Log``1(logLevel,eventId,state,exception,formatter) AuthenticateResponse type Namespace Golden.ServerCoreDefinition Summary The authenticate response. Expiration property Summary Gets or Sets the expiration. Id property Summary Gets or Sets the id. Name property Summary Gets or Sets the name. Role property Summary Gets or Sets the role. Surname property Summary Gets or Sets the surname. Token property Summary Gets or Sets the token. BackendServer type Namespace Golden Summary Server Main Definition Starting Point Of Project ServerConfigSettings constants Summary Startup Server Initialization Server Setting Data ServerRuntimeData constants Summary Startup Server Initialization Server Runtime Data BuildWebHost(args) method Summary Final Preparing Server HostBuilder Definition Exit 10 Is missing or Format Problem with Configuration File Returns Parameters Name Type Description args System.String[] Main(args) method Summary Server Startup Process Parameters Name Type Description args System.String[] RestartServer() method Summary Server Restart Controller Parameters This method has no parameters. ServerStartupDbDataLoading() method Summary Server Startup DB Data loading for minimize DB Connect TO Frequency Dials Without Changes Example: LanguageList Parameters This method has no parameters. StartServer() method Summary Server Start Controller Parameters This method has no parameters. CommunicationController type Namespace Golden.ServerCoreDefinition Summary Server Communication Extensions for Controlling Data HttpContext property Summary Server Request Accessory controller CheckAdmin() method Summary Extension for check Admin Role Parameters This method has no parameters. CustomFtpUser type Namespace Golden.ServerCoreServers.HostedFtpServerMembershipProvider Summary Custom FTP user implementation #ctor(name) constructor Summary Initializes a new instance of the CustomFtpUser instance. Parameters Name Type Description name System.String The user name Name property Summary Inherit from parent. IsInGroup() method Summary Inherit from parent. Parameters This method has no parameters. CustomString type Namespace Golden.ServerCoreDBSettings Summary Custom Definition for Returning string List from Stored Procedures Name is ColumnName from Stored Procedure Result DBResult type Namespace Golden.ServerCoreDefinition Summary Database response types definition DBResultMessage type Namespace Golden.ServerCoreDefinition Summary The DB result message. ErrorMessage property Summary Gets or Sets the error message. InsertedId property Summary Gets or Sets the inserted id. RecordCount property Summary Gets or Sets the record count. Status property Summary Gets or Sets the status. DBWebApiResponses type Namespace Golden.ServerCoreWebPages Summary WebApi Responses DatabaseContextExtensions type Namespace Golden.ServerCoreDBSettings Summary Database Context Extensions for All Types Procedures For Retun Data in procedure can be Simple SELECT * XXX and you Create Same Class for returned DataSet EmailVerification type Namespace Golden.ServerCoreWebPages Summary WebPages User Verification class ExpertDocApi type Namespace Golden.Controllers GetDocumentationGroupedList(id) method Summary ExpertDocManager Group Documentation Request Api Returns Parameters Name Type Description id System.Int32 The identifier. GoldenContext type Namespace Golden.ServerCoreDBSettings Summary Server Main Database Settings Here is Included ScaffoldContext which is connected via Visual Studio Tool Here can Be added customization which are not on the server Here is Extended the Context with Insert News Functionality Customizing and implement Settings for Automatic Adopted Database Schema for Unlimited Working and Operations For Specifics API schemas GetApiUserId(httpContext) method Summary Return User From API Request if Exist other null Returns Parameters Name Type Description httpContext Microsoft.AspNetCore.Http.HttpContext IsAdmin(httpContext) method Summary Return User From API Request if Exist other null Returns Parameters Name Type Description httpContext Microsoft.AspNetCore.Http.HttpContext GoldenSystemAuthenticationApi type Namespace Golden.ControllersExtensions Authenticate(username,password) method Summary API Authenticated and Generate Token Returns Parameters Name Type Description username System.String password System.String LifetimeValidator(notBefore,expires,token,params) method Summary API Token LifeTime Validator Returns Parameters Name Type Description notBefore System.Nullable{System.DateTime} expires System.Nullable{System.DateTime} token Microsoft.IdentityModel.Tokens.SecurityToken params Microsoft.IdentityModel.Tokens.TokenValidationParameters RefreshUserToken(username,token) method Summary API Refresh User Token Returns Parameters Name Type Description username System.String token Golden.ServerCoreDefinition.AuthenticateResponse GoldenSystemBackendCheckApi type Namespace Golden.ControllersExtensions Summary Simple Api for Checking Avaiability See Also Microsoft.AspNetCore.Mvc.ControllerBase GetBackendCheckApi() method Summary Gets the backend check API. Returns Parameters This method has no parameters. HostedFtpServer type Namespace Golden.ServerCoreServers #ctor(ftpServerHost) constructor Summary Initializes a new instance of the HostedFtpServer class. Parameters Name Type Description ftpServerHost FubarDev.FtpServer.IFtpServerHost The FTP server host that gets wrapped as a hosted service. StartAsync() method Summary Inherit from parent. Parameters This method has no parameters. StopAsync() method Summary Inherit from parent. Parameters This method has no parameters. HostedFtpServerMembershipProvider type Namespace Golden.ServerCoreServers Summary Custom membership provider for Authentication Validation Actual is Set by UserName and Password in Database ValidateUser(username,password) method Summary FTP User Validation Its for Open FTP and User Validation Returns Parameters Name Type Description username System.String The username. password System.String The password. ValidateUserAsync(username,password) method Summary FTP User Validation Async Its for Open FTP and User Validation Returns The result of the validation. Parameters Name Type Description username System.String The user name. password System.String The password. IdFilter type Namespace Golden.ServerCoreDBSettings Summary Custom Class Definition for Filtering by record Id MailRequest type Namespace Golden.ServerCoreDefinition Summary Class Definition for Server Emailer In List of this claas you can use Mass Emailer NameFilter type Namespace Golden.ServerCoreDBSettings Summary Custom Class Definition for Filtering by string OperatingSystem type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary Extension For Checking Operation System of Server Running ProcessClass type Namespace Golden.ServerCoreDefinition Summary Server Process class for running external prrocesses RobotsController type Namespace Golden.ServerCoreDBSettings Summary robots.txt routing See Also Microsoft.AspNetCore.Mvc.Controller ServerConfigSettings type Namespace Golden.ServerCoreDefinition Summary The server settings. ConfigApiTokenTimeoutMin property Summary Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After Timeout connection Must Login Again. It is as needed. You Can Change Key for close All connections Immediately. Timeout is good for Webpages Recomended: 15 ConfigCertificateDomain property Summary Its Domain for include to Automatic Generated Certificate For Server running on HTTPS. Domain is for Your validation Certificate Domain. Can be Changed for commercial. Domain is Used for Lets Encrypt also Write with Comma separator Recommended: 127.0.0.1 ConfigCertificatePassword property Summary Password will be inserted to Server Generated Certificate for HTTPS. Recommended: empty = Maximal Security Randomly generated 20 chars string ConfigCertificatePath property Summary Certificate file NextFrom'DATA'Path\\Filename.pfx For import External Certificate Its Path from Data Startup Folder,example \"groupware.pfx\" is in Data Path The Password must be inserted in ConfigCertificatePassword Settings Other for ignore this Setting set empty string \"\" This settings has Higest Priority before LesEncrypt enabled ConfigJwtLocalKey property Summary Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its AntiHacker Security Rule Recommended: empty = Maximal Security Randomly generated 40 chars string ConfigMaxWebSocketBufferSizeKb property Summary Maximum socket message size for control Traffic Recomended: 10 ConfigServerGetLetsEncrypt property Summary Setting for Automatic Obtain Lets Encrypt more Security Setting Politics. Recommended: true ConfigServerStartupOnHttps property Summary Setting for Server URL Services. Logically can run only one Http or Https Server has more Security Setting Politics. Recommended: true ConfigServerStartupPort property Summary Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API Controler and WebPages Recommended: 5000 ConfigWebSocketTimeoutMin property Summary WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any communication socket is closed Set according to your need Recommended: 2 DatabaseConnectionString property Summary Server Database Connection string for Full Service of Database Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for Read/Write/Exec is enabled DatabaseInternalCacheTimeoutMin property Summary Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with Database Server Recommended: 30 DatabaseInternalCachingEnabled property Summary Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic, Duplicit Functionality with Database Server in complex process can generate problems Recommended: false EmailerSMTPLoginPassword property Summary SMTP Password for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPLoginUsername property Summary SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPPort property Summary SMTP Port for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPServerAddress property Summary SMTP Server Address for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerSMTPSslIsEnabled property Summary EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its Necessary for Correct running Server Internal Core Monitoring EmailerServiceEmailAddress property Summary Service email, for info about not available service from HeatchCheck Can be used for next Develop, automatic checking problems, missing data and all other Its Necessary for Correct running Server Internal Core Monitoring ModuleDataManagerEnabled property Summary Special Function: AutoGenerated Database DataManager for working with Data Running only in Debug mode for simple Develop, can be modified. All changes are Reflected after restart server ModuleDbDiagramGeneratorEnabled property Summary Enable Automatic Database Diagram for Simple show Database structure with All bingings ModuleHealthServiceEnabled property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health ModuleHealthServiceRefreshIntervalSec property Summary Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, Over Net can Control Other Company Services Also as Central Control Point With Email Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/ ModuleMdDocumentationEnabled property Summary Enable Server Structure Documentation for Developers Using RootPath, - Block File Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy \"Only HTML\" ModuleSwaggerApiDocEnabled property Summary Special Function: Server Automatically Generate Full Documentation of API structure AND Database Model. Plus Included API Interface for Online Testing All API Methods with Authentication Its Automatic Solution for Third Party cooperation. All changes are Reflected after restart server ServerEnableWebSocketMonitor property Summary Server support online multi watch Logging Its Run on Websocket and the Log Messages are sent for All opened connections for wathing on Path: ServerCoreMonitor You can enable Mass Email Api ServerFtpEngineEnabled property Summary Enable FTP File Server oppened for every connection with full rights ServerFtpSecurityEnabled property Summary Enable FTP Security For access to FTP must be logged ServerJsWebPagesEngineEnabled property Summary Enable JS WebPages support engine with Correct Configuration React, Nodejs, etc.. ServerJsWebStartupCommand property Summary Definition of WebPage Startup npmscript command React, Nodejs, etc.. ServerMvcWebPagesEngineEnabled property Summary Enable Mvc WebPages support engine with Correct Configuration ServerRazorWebPagesEngineEnabled property Summary Enable Razor WebPages support engine with Correct Configuration for Automaping form folder 'Pages' ServerTimeTokenValidationEnabled property Summary Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using: Example for machine connection Or is Control last activity ServerWebBrowserEnabled property Summary Enable WebPages File Browsing from server Url on Server ServerWebSocketEngineEnabled property Summary Enable WebSocket Engine with Default Example Api Controller SpecialCoreCheckerEmailSenderActive property Summary Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All incorrect server statuses are monitored) Can be writen to Database - !!! Warning for infinite Cycling (DB shutdown example) Recommended: true SpecialEnableMassEmail property Summary Server support mass emailing as Service You can enable Mass Email Api SpecialServerLanguage property Summary Server Language for Translating Server internal statuses Recommended: cz or en - other languages are not implemented SpecialServerServiceName property Summary Server Service Name automatic figured in All IS/OS/Engines info Recommended: Golden SpecialUseDbLocalAutoupdatedDials property Summary Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets, For Optimize Traffic. For Example LanguageList - Static table with often reading Recommended: true - functionality must be implemented in Server Code SpecialUserWebRootPath property Summary User Web Root Path for Startup and Any missing address Automatic Redirection Value must start with / Not need Regex Configuration ServerConfigurationServices type Namespace Golden.ServerCoreConfiguration Summary Server Core Configuration Settings of Security, Communications, Technologies, Modules Rules, Rights, Conditions, Formats, Services, Logging, etc.. ConfigureAuthentication(services) method Summary Server Core: Configure Server Authentication Support Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureControllers(services) method Summary Server Core: Configure Server Controllers options.SuppressImplicitRequiredAttributeForNonNullableReferenceTypes = [ValidateNever] in Class options.SerializerSettings.ReferenceLoopHandling = ReferenceLoopHandling.Ignore = [JsonIgnore] in Class Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureCookie(services) method Summary Server Core: Configure Cookie Politics Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDatabaseContext(services) method Summary Server Core: Configure Custom Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureFTPServer(services) method Summary Custom Secure FTP Server Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLetsEncrypt(services) method Summary Server core: Configures LetsEncrypt using. Certificate will be saved in DataPath Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureLogging(services) method Summary Server Core: Configure Server Logging Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureScopes(services) method Summary Server Core: Configure Custom Core Services Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureServerWebPages(services) method Summary Configures the MVC server pages on Server format \"cshtml\" Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureSingletons(services) method Summary Server Core: Configures the singletons. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ConfigureThirdPartyApi(services) method Summary Server Core: Configure HTTP Client for work with third party API Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureWebSocketLoggerMonitor(services) method Summary Server core: Configures the WebSocket logger monitor. For multi monitoring and for Example Posibilities Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ The services. ServerCoreDbOperations type Namespace Golden.ServerCoreDefinition Summary All Server Definitions of Database Operation method DBTranslate(word,language) method Summary Default Operation for Call Translation Returns Parameters Name Type Description word System.String language System.String DBTranslateOffline(word,language) method Summary Database LanuageList for Off-line Using Definitions Returns Parameters Name Type Description word System.String language System.String DBTranslateOnline(word,language) method Summary Database LanuageList for On-line Using Definitions Returns Parameters Name Type Description word System.String language System.String LoadStaticDbDials(onlyThis) method Summary Method for All Server Defined Table for Local Using As Off line AutoUpdated Tables Parameters Name Type Description onlyThis System.Nullable{Golden.ServerCoreDefinition.ServerLocalDbDials} WriteVisit(ipAddress,userId,userName) method Summary Trigger User Login History Parameters Name Type Description ipAddress System.String userId System.Int32 userName System.String WriteWebVisit(ipAddress,userId,userName) method Summary Trigger User Login History Parameters Name Type Description ipAddress System.String ServerCoreExportApi type Namespace Golden.ServerCoreDBSettings Summary [Authorize] Server Export Services See Also Microsoft.AspNetCore.Mvc.Controller ServerCoreFunctions type Namespace Golden.ServerCoreDefinition ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary Copies the file. Returns Parameters Name Type Description from System.String From. to System.String To. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The path. FileDetectEncoding(FileName) method Summary Files the detect encoding. Returns Parameters Name Type Description FileName System.String Name of the file. FirstCharToLowerCase(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetByteArrayFrom64Encode(strContent) method Summary Separate ByteArray from 64 encode file For inserted file types Returns Parameters Name Type Description strContent System.String Content of the string. GetSelfSignedCertificate(password) method Summary Gets the self signed certificate For API Security HTTPS. Returns Parameters Name Type Description password System.String The password. GetSelfSignedCertificateFromFile() method Summary Set Imported Certificate from file on Server for Https File must has Valid path from Startup Data Path Returns Parameters This method has no parameters. GetSystemErrMessage(exception,msgCount) method Summary Mined-ed Error Message For System Save to Database For Simple Solving Problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetUserApiErrMessage(exception,msgCount) method Summary Mined-ed Error Message For Answer in API Error Response with detailed info about problem Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 LoadSettings() method Summary Server Local Startup Configuration Its Running as First - Load from Congig.Json After DB connection Before Server Start Is This configuration Replaced By Data from DB And next Server Start. Its for situation - Bad Connection Server Start with Configuration from File Parameters This method has no parameters. RandomString(length) method Summary Randoms the string. Returns Parameters Name Type Description length System.Int32 The length. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. RunProcess(processDefinition) method Summary Server Function For Running External Processes Returns Parameters Name Type Description processDefinition Golden.ServerCoreDefinition.ProcessClass The process definition. SendEmail(mailRequest,sendImmediately) method Summary System Mailer sending Emails To service email with detected fail for analyze and corrections on the Way provide better services every time !!! This You can implement everywhere, !!! In Debug mode is written to Console, in Release will be sent email Empty Sender And Recipients set email for Service Recipient Parameters Name Type Description mailRequest Golden.ServerCoreDefinition.MailRequest sendImmediately System.Boolean SendMassEmail(mailRequests) method Summary Sends the mass mail. Parameters Name Type Description mailRequests System.Collections.Generic.List{Golden.ServerCoreDefinition.MailRequest} The mail requests. UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. ServerCoreHelpers type Namespace Golden.ServerCoreDefinition Summary System Helpers for EASY working Here are extension for Database Model, WebSocket AddSocketConnectionToCentalList(newWebSocket,socketAPIPath) method Summary Add WeSocket Connection To Central List Parameters Name Type Description newWebSocket System.Net.WebSockets.WebSocket The new web socket. socketAPIPath System.String The socket path. BindList``1(dt) method Summary Extension For Using Custom Defined Tables from Database Procedures Its used as Database Context Extension as 'CollectionFromSql' Method in Database Context Returns Parameters Name Type Description dt System.Data.DataTable The dt. Generic Types Name Description T CheckTokenValidityFromString(tokenString) method Summary Token Validator Extension For Server WebPages Returns Parameters Name Type Description tokenString System.String The token string. DisposeSocketConnectionsWithTimeOut() method Summary !! Global Method for Simple Using WebSockets WebSocket Disposed - Cleaning monitored Sockets from Central List. Are Closed and Disposed Only with Timeout or with closed Connection Parameters This method has no parameters. GetValidationParameters() method Summary Server Token Validation Parameters definition For Api is Used if is ON/Off for WePages is On everyTime Returns Parameters This method has no parameters. IsValidEmail(email) method Summary Determines whether [is valid email] [the specified email]. Returns true if [is valid email] [the specified email]; otherwise, false. Parameters Name Type Description email System.String The email. ListenClientWebSocketMessages(webSocket,socketAPIPath) method Summary Register Listening Client WebSocket Communication Ist for Receive messages from Client Returns Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket socketAPIPath System.String RemoveWhitespace(input) method Summary Removes the whitespace from the String. Returns Parameters Name Type Description input System.String The input. SendMessageAndUpdateWebSocketsInSpecificPath(socketAPIPath,message) method Summary Sends the message and update web sockets in specific path. Parameters Name Type Description socketAPIPath System.String The socket API path. message System.String The message. SendMessageToClientSocket(webSocket,message) method Summary Sends the message to client WebSocket. This Is Used by \"SendMessageAndUpdateWebSocketsInSpecificPath\" For Update Informaions on All Connections in Same WebSocket Path Its Solution FOR Teminals, Group Communications, etc. Parameters Name Type Description webSocket System.Net.WebSockets.WebSocket The web socket. message System.String The message. ServerCoreLoggerWS type Namespace Golden.ServerCoreDBSettings Summary WEBSocket Template still not used Ideal for Terminal Panels, chat, controlling services Echo(context,webSocket) method Summary WebSocket Communication Set Examle Returns Parameters Name Type Description context Microsoft.AspNetCore.Http.HttpContext The context. webSocket System.Net.WebSockets.WebSocket The web socket. Get() method Summary WebSocket Registration Connection API Example Returns Parameters This method has no parameters. GetBySocketAPIPath(id) method Summary Universal WebSocket API Definitions for Connection Paths and Registering To Server Central List ow WebSocket Connections Returns Parameters Name Type Description id System.String ServerCoreWebBuilderApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller GetWebBuilderCodePreview() method Summary WebBuilder Code Library Preview Api Returns Parameters This method has no parameters. GetWebBuilderMenuPreview(id) method Summary WebBuilder Menu Preview Api Returns Parameters Name Type Description id System.Int32 The identifier. ServerCoreWebUserApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller PostSendVerifyCode(email) method Summary WebPages Verification Email Returns Parameters Name Type Description email Golden.ServerCoreWebPages.EmailVerification The email. ServerDbDgmlSchemaApi type Namespace Golden.ServerCoreDBSettings Summary Database Schema Diagram Controller See Also Microsoft.AspNetCore.Mvc.Controller #ctor(context) constructor Summary Initializes a new instance of the class. Parameters Name Type Description context Golden.ServerCoreDBSettings.GoldenContext The context. Get() method Summary Creates a DGML class diagram of most of the entities in the project wher you go to localhost/dgml See https://github.com/ErikEJ/SqlCeToolbox/wiki/EF-Core-Power-Tools Returns a DGML class diagram Parameters This method has no parameters. ServerDocApi type Namespace Golden.Controllers _hostingEnvironment constants Summary For wwwroot folder Update with detect changes and modify static pages GenerateMdBook() method Summary Server Inteligent Documentation Generator Api Parameters This method has no parameters. ServerEmailerApi type Namespace Golden.ServerCoreDBSettings Summary Server Email sender Api for logged Communication See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerEnablingServices type Namespace Golden.ServerCoreConfiguration Summary Server Core Enabling Settings of Security, API Communications, Technologies, Modules,Rules, Rights, Rules, Rights, Conditions, Cors, Cookies, Formats, Services, Logging, etc.. EnableCors() method Summary Server Cors Configuration Parameters This method has no parameters. EnableEndpoints() method Summary Server Endpoints Configuration Parameters This method has no parameters. EnableLogging(app,loggerFactory) method Summary Enable Server Logging in Debug Mode Returns Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ EnableWebSocket(app) method Summary Server WebSocket Configuration Returns Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder@ ServerLocalDbDials type Namespace Golden.ServerCoreDefinition Summary Special Functions: Definition of Selected tables for Optimal Using to Data nature Its saves traffic, increases availability and for Example implemented Language is in Develop Auto Fill Table when is First Using Its can be used for more Dials ServerModules type Namespace Golden.ServerCoreConfiguration Summary Configure Server Ad-dons and Modules ConfigureCoreAdmin(services) method Summary Server Module: Automatic DB Data Manager for work with data directly services.AddCoreAdmin(\"Admin\"); is Token RoleName Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureDocumentation(services) method Summary Server Module: Generted Developer Documentation for Defvelopers Documentation contain full Server Structure for extremelly simple developing Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureHealthCheck(services) method Summary Server Module: Automatic DB Data Manager for work with data directly Extreme Posibilities https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ConfigureSwagger(services) method Summary Server Module: Swagger Api Doc Generator And Online Tester Configuration Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection@ ServerModulesEnabling type Namespace Golden.ServerCoreConfiguration Summary Enable Configured Server Ad-dons and Modules EnableCoreAdmin() method Summary Server Module: Enable Swagger Api Doc Generator And Online Tester Parameters This method has no parameters. EnableDocumentation() method Summary Server Module: Enable Generated Developer Documentation Parameters This method has no parameters. EnableSwagger() method Summary Server Module: Enable Swagger Api Doc Generator And Online Tester Parameters This method has no parameters. ServerProviderHealthCheck type Namespace Golden.ServerCoreDefinition Summary Custom Registering Data are on /HealthResultService See Also Microsoft.Extensions.Diagnostics.HealthChecks.IHealthCheck Microsoft#Extensions#Diagnostics#HealthChecks#IHealthCheck#CheckHealthAsync(context,cancellationToken) method Summary Interface for Registering Custom Defined Checks on Startup https://dilanlivera.dev/add-health-checks-in-aspnet-core https://medium.com/@suman.chatterjee/net-core-web-api-custom-health-check-13c6350b5f0c https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks Returns Parameters Name Type Description context Microsoft.Extensions.Diagnostics.HealthChecks.HealthCheckContext cancellationToken System.Threading.CancellationToken ServerRestartApi type Namespace Golden.ServerCoreDBSettings Summary Server Restart Api for Remote Control See Also Microsoft.AspNetCore.Mvc.ControllerBase ServerRuntimeData type Namespace Golden.ServerCoreDefinition Summary The server runtime data. CentralWebSocketList constants Summary Central WebSocket List for Easy one place Using LocalDBTableList constants Summary The local db table list. ServerArgs constants Summary Server Starup Args ServerCancelToken constants Summary Cancellation Token for Server Remote Control ServerCoreStatus constants Summary Server Core Status ServerFTPProvider constants Summary Server Securited FTP Provider for Remote Control ServerRestartRequest constants Summary Server Restart Request Indicator ConfigFile property Summary Gets or Sets the configure file. DataPath property Summary Gets or Sets the data path. DebugMode property Summary Gets or Sets the debug mode. Setting_folder property Summary Gets or Sets the setting_folder. Startup_path property Summary Gets or Sets the startup_path. UserPath property Summary Gets or Sets the configure file. ServerWebPagesConfigApi type Namespace Golden.ServerCoreDBSettings Summary Server Root Controller Used by Server Webpages See Also Microsoft.AspNetCore.Mvc.ControllerBase Index() method Summary Server Root \"/\" Redirection to \"server\" Folder Returns Parameters This method has no parameters. ServerWebPagesLogin type Namespace Golden.ServerCoreWebPages Summary Custom Class For Login over Server Web Pages ServerWebPagesToken type Namespace Golden.ServerCoreWebPages Summary Server WebPages Communication Token Definition for Security content SetReportFilter type Namespace Golden.ServerCoreDBSettings Summary Database Model Extension Definitions Its API Filter, Extended Classes, Translation, etc SitemapController type Namespace Golden.ServerCoreDBSettings Summary Sitemap.xml Routing See Also Microsoft.AspNetCore.Mvc.Controller Startup type Namespace Golden Summary Server Startup Definitions Configure(app,serverLifetime) method Summary Server Core: Main Enabling of Server Services, Technologies, Modules, etc.. Parameters Name Type Description app Microsoft.AspNetCore.Builder.IApplicationBuilder serverLifetime Microsoft.Extensions.Hosting.IHostApplicationLifetime ConfigureServices(services) method Summary Server Core: Main Configure of Server Services, Technologies, Modules, etc.. Returns void. Parameters Name Type Description services Microsoft.Extensions.DependencyInjection.IServiceCollection SystemDocApi type Namespace Golden.Controllers _hostingEnvironment constants Summary For wwwroot folder Update with detect changes and modify static pages GetMdDocumentPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. GetMdLibraryPreview() method Summary Documentation Code Manager Html Preview Api Startup Viewer Returns Parameters This method has no parameters. UserConfig type Namespace Golden.ServerCoreWebPages Summary Custom Class For UserConfig over Server Web Pages WebMessage type Namespace Golden.ServerCoreWebPages Summary Custom WebMessage Class For Server Web Pages WebRegistration type Namespace Golden.ServerCoreWebPages Summary WebPages User Registration class WebSocketExtension type Namespace Golden.ServerCoreDefinition Summary WebSocket Extension Definition For Simple Central Control All Connection By Connection Path and Timeout WebSocketLogProvider type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary !!! Implemented Server Core WebSocket System LogProvider Stream This Is Special Serice For Remote Monitoring On More Devices in OneTime See Also Microsoft.Extensions.Logging.ILoggerProvider WebSocketLogger type Namespace Golden.ServerCoreDefinition.ServerCoreHelpers Summary Server Core WebSocket System Logger Interface See Also Microsoft.Extensions.Logging.ILogger Log``1(logLevel,eventId,state,exception,formatter) method Summary Used to log the entry. Parameters Name Type Description logLevel Microsoft.Extensions.Logging.LogLevel An instance of LogLevel. eventId Microsoft.Extensions.Logging.EventId The event's ID. An instance of EventId. state ``0 The event's state. exception System.Exception The event's exception. An instance of Exception formatter System.Func{``0,System.Exception,System.String} A delegate that formats Generic Types Name Description TState"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBRadyprogramování.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBRadyprogramování.html",
    "title": "",
    "keywords": "EASYBuilder Description SYSTEM CORE For thinking, the development of tools and work with them worthy in the 21st century A full detailed description of the system core for easy development of any system with full support for automated functions, methods to make any of your applications work properly this information is divided into information for rapid development complete information about the basic function of the system Projects Documentation Used automatic tools Generating MD from XML Documentation from code Generating MD from XML Documentation from code <DocumentationFile>bin\\Debug\\Documentation\\GoldenSystem.xml</DocumentationFile> <DocumentationMarkdown>$(MSBuildProjectDirectory)\\GoldenSystem.md</DocumentationMarkdown> DECLARED SYSTEM CONDITIONS FOR DEVELOP NEW AGENDA Basic Info what you minimal need for start Developing of new Agendas APP Initialization [INFO] Starting APP with Welcome Page by JSON Setting Initialize Technologies Including Core Styles and themes Set Global Properties Set Global DataLists (Parameters, Setting, Tilts, System Classes, UserData, Error Handlers, API Security, etc) Set CrashReporting join Welcome Page [INFO] - Video Start Page with Mottos NAMESPACES [CONDITIONS] Pages - Each Agenda must be in Namespace Pages Classes - All Agenda Classes are in Namespace Classes for developer Help DataClases [CONDITIONS] - DataList - Table Models Description (for Agendas/Pages) Create By TemplateClass.cs file your new Class/DataModel Definition in your Agenda Folder you can create Extended Table Model for more field in basic DataListModel - (example: ReceiptList, OutgoingOrderList, etc.) Done ApiCommunications [CONDITIONS] - In the Class is in ENUM all API address list All API Cals which has 'List' word on End is automatically supported for insert Report Insert your New API address to this enum Done Languages [CONDITIONS] - Each used 'Word' must exist in all Language Files Before Build insert all new translations [check duplicity]to all dictionaries for your new Agenda field, menuName Done PageTemplatesCodeHelp [INFO] - is central List of special methods in the system (Load/SaveFile, load, lang, number validation, etc..) Templates [INFO] - For simple create new ANY agengas by COPY/PASTE for simple modify INPUT fields only for new Agenda Create new folder in Agendas and copy TemplateClass and correct TemplatePage to this folder rename these files and change class model to your new class[COPY/PASTE from backend] replace 'TemplateClass' for your new in XAML and CS file of your new Page/Agenda now the form field change only and modify and check fields, translations, apiCalls in cs code for your new Done MainMenu [CONDITIONS] - in MainWindow must be new Agenga inserted to the application menu Insert new menu Item -im Xaml copy existing menu item and rename to your new Agenda Translate menu item - In CS code insert the translate menu item in initialize Method Set Menu Reaction - in MainWindows Method 'Cb_verticalMenuSelected' copy existing menuitem part code in the 'CASE' and change XAML menu name and name of called 'Page' Here on end case for List Report set the '/YourTableNameList' in Report line or for non report Table set 'cb_printReports.ItemsSource = null;' Done Reports [INFO] - In system menu Reports you can upload Report file for your new Agenda NOW Build and YOUR new Agenda is IN App Menu and After click is opened THIS IS ALL INFORMATIONS FOR SUCCESS DEVELOPING SHORT SYSTEM DESCRIPTION System is Fully dynamic Controlled For All menuInserted Pages/Agendas (Insert new Page/Agenda to menu + Translate for implement to full system only) All method are implemented with global logic of using for central Core of this System and his Modification For working with any standard system agenda (Typically IS System - SAP Example) INSERT/UPDATE/DELETE/SELECT/FILTER/PRINT/SHOW/MEDIA 3D/VIDEO/DOCS/EAN CODES/1000 FINISHED TOOLS on GITHUB/UNLIMITED ETC FOR WINDOWS MODERN SYSTEMS/TERMINALS/ETC ON START (WEB FORMAT IS SUPPORTED BY TECHNOLOGY WILL BE DONE IN YEAR FUTURE MAINWINDOW Central SYSTEM Control Manual This is Core central point (MainWindow.xaml/cs) for full system Here are Defined All join for Central Control for All parts of System MainWindow is Absolute Primary Control window off all actions in the application Here are All global definitions, Messages, mainWindows and all Shared Controls for Pages Here are Application Menu events, Update, Reports, New/Edit/.. for DataList, Filters, TabPages MainWindow Has Defined 3Menu Types for More Systems: - Buttons in Header LINE -> For simple touch Terminal with few button for Agendas - SelectBox -> For TouchPanels with more MenuItems, but Touch functionality is Needed - TreeView -> For Robust Systems with a lot of MenuItems/Agendas in Xaml are declared all shared input/Controls/ETC for Application App Update, Tools, Theme, Menus, Report Ctrl, Pages Controls, Graphics, ProgressRing, TabPages Types, CORE SYSTEM METHODS - OLDER,Was modernized** Initialize - Initiate Theme/Color/App menu/Load Config/Show Login Here is Translate Menu Items** Timer10sec_Elapsed - Auto Backend Timer cycling by Config [default 5sec] check if Backend is Accesible - Server status Control load Server Setting Load Application Parameters for NULL user ShowLoginDialog - Login, Load User Params, Token, Enable Menu Items ShowMessage - Shared Message for call from Pages For show in MainWindow SetServiceStop - connect/disconnect menuItems Pages on Backend Service Status DATALIST GLOBAL METHODS - OLDER,Was modernized** cb_FilterDropDownClosed - Reload Datalist with filtering Mi_filter_Click - Generate and show advanced filter (for SQL conditioning): Cb_PrintReportsSelected - save filter to DB, open selected Report Cb_verticalMenuSelected - Open selected Page/Agenda and set all controls,input,filter,reports status !!NEW AGENDA MUST BE DEFINED ONLY HERE. INFO METHOD LIST SYSTEM CORE NOT NEEDED CHANGES - OLDER,Was modernized Btn_about_click - Show About Info WinMain_KeyDown - Global Control for Keyboard press ,implemented F1/ALT+Q Btn_LaunchHelp_Click - Open index.chm Windows Help File ApplicationClosing - Save theme, close App AppRestart - Restart for Configuration Reload StringToFilter - upload seted filter in page for actual view RemoveFilterItem_Click - Remove advanced filter Item FilterField_SelectionChanged - support method for dynamic filter generation MainGrid_IsDraggingChanged - For Draging TabPages - ACTUALLY DISABLED Menu_action_Click - Automatic Datalist Controls Action Handler AddNewTab - Automatic TabPages Controller TabPanelOnSelectionChange - Automatic Controller for TabPages Changing ChangeMenuView - Specific for Version with more menu types. Show/Hide used menu type System Core Code Rules /// <summary> /// Library with standarztized Definitions and Methods For Develop Any System /// </summary> public class PageTemplatesCodeHelp { #region MyReStandartized Definitions - OLDER,Was modernized /// <summary> /// Define Collection For Combobox Example /// </summary> public ObservableCollection<Language> Languages = new ObservableCollection<Language>() { new Language() { Name = \"System\", Value = \"system\" }, new Language() { Name = \"Czech\", Value = \"cs-CZ\" }, }; #endregion /// <summary> /// Special Method for input limitation as number only /// Its only for help /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private void NumberValidationTextBox(object sender, TextCompositionEventArgs e) { Regex regex = new Regex(\"[^0-9]+\"); e.Handled = regex.IsMatch(e.Text); } /// <summary> /// Global Application Defined API Communication Types for Centalised using /// </summary> private async void DefinedAllAplicationApiComunicationTypes() { ///ApiUrls variable is List With All API cals ///DBResultMessage is Class for Global using of All Api with all information of Request result DBResultMessage dBResult; /// Serialize Dataset for API sending INSERT/UPDATE TemplateClassList myRecord = new TemplateClassList(); string json = JsonConvert.SerializeObject(myRecord); StringContent httpContent = new StringContent(json, Encoding.UTF8, \"application/json\"); ///API for load/Select Data await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.TemplateClassList, null, App.UserData.Authentification.Token); ///API for Data Insert dBResult = await ApiCommunication.PutApiRequest(ApiUrls.TemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Data Update dBResult = await ApiCommunication.PostApiRequest(ApiUrls.TemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Delete Data dBResult = await ApiCommunication.DeleteApiRequest(ApiUrls.TemplateClassList, \"someId\", App.UserData.Authentification.Token); } /// <summary> /// Global Application avaiable Methods for All Pages for Centalised using /// </summary> private async void DefinedGlobalMainWindowMethodsForAllPages() { ///Aplication Restart MainWindow.AppRestart(); ///Progresring for Wait indication MainWindow.ProgressRing = Visibility.Hidden; ///Show Info message await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\"); ///Show Confirm Dialog MessageDialogResult result = await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\" + \" \", true); if (result == MessageDialogResult.Affirmative) { } ///Method For Sett Language of Each Page Language defaultLanguage = JsonConvert.DeserializeObject<Language>(App.Setting.DefaultLanguage); ///_ = MediaFunctions.SetLanguageDictionary(Resources, defaultLanguage.Value); } /// <summary> /// Global Specific Methods For Customized Working - OLDER,Was modernized /// </summary> private async void UsedSpecificMethodsForCustomizedWorking() { #region Other Help Global Definitions and Methods ///Load Parameter From Table Parameters text is Parameter name var res = ServerCoreFunctions.ParameterCheck(\"someParameterName\").Correct ? int.Parse(ServerCoreFunctions.ParameterCheck(\"someParameterName\").Value) : 50; ///Set ComboBox Item By myValue (from selected record or another) int index = 0; ComboBox cb_defaultLanguage = new ComboBox(); cb_defaultLanguage.Items.SourceCollection.Cast<Language>().ToList().ForEach(language => { if (language.Name == \"myvalue\") { cb_defaultLanguage.SelectedIndex = index; } index++; }); ///Open File Dialog OpenFileDialog dlg = new OpenFileDialog { DefaultExt = \".exe\", Filter = \"Exe files |*.exe\", Title = \"Resources[\\\"fileOpenDescription\\\"].ToString()\" }; if (dlg.ShowDialog() == true) { } #endregion } #region Other Custom Communications /// <summary> /// Customized GET Call /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private async void BtnApiTest_Click(object sender, RoutedEventArgs e) { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(\"someUrl\"); await MainWindow.ShowMessage(false, json); } catch (Exception ex) { await MainWindow.ShowMessage(true, \"Exception Error : \" + ex.StackTrace); } } } #endregion PAGE/AGENDA STANDARTIZED DEFINITION FOR CREATE NEW ANY SYSTEM STANDARD AGENGA AGENDA (Page) IS BUILDED FROM STANDARTIZED METHODS FOR FULL CONTROL OF EACH STANDARD Agenda Page Each FULL agenga has these Methods for work with SYSTEM CORE AGENDA CONTAIN - DaTaModel Class File (Copied from Backend Server or DB Structure ScaffoldContext) PreDefined XAML FORM (contain both LIST/FORM definitions) List od Global System Methods for Control Full Agenda in System Core PAGE - AGENDA METHOD LIST Method InitializePage - used by MenuClick - Load Dictionaries, Parameters, Translate Form Fields And Run 'LoadDataList' for Datalist/Dials, others, Set Record = False Method LoadDataList - used by REFRESH Button - Call API for again load datasets in Page (DB Select) Method NewRecord - used by NEW Button - Open detail form for New Record Method EditRecord(false) - used by EDIT Button - Open detail form for edit Record Method EditRecord(true) - used by COPY Button - Open detail form for create copied Record (with ID=0) Method DeleteRecord - used by DELETE Button - Call delete API for selected record in datalist (DB Delete) Method Filter - SEARCH Textbox - SIMPLE SEARCH in all defined columns in PAGE code - Method Filter Method DgListView_Translate - Translate Datalist column - translate column names by Xaml Language Dictionaries Method DgListView_MouseDoubleClick - Select and Open selected Record Detail Method DgListView_SelectionChanged - Select Record For control buttons enabling, show Report with join on Id Method BtnSave_Click - Form to DataClassModel, send API (DB Insert/DB Update), Return to DataList View Method BtnCancel_Click - Cancel Form and Return to DataListView Method SetRecord - Load Selected Record (edit,copy) to Detail Form In Combined Forms with SubTable The methods Are copied as SubMethods (Translate,Data,Form Fields) Standard SUBSELECT ComboBox/ListBox/ListView/Custom For Dial Join Record Selection (Addresses, Items, Etc.) Standard Method List for Full Mouse/Keyboard Control SelectGotFocus - Call SubDataList Controller for Selection one Record for Selection 'UpdateCustomerSearchResults' UpdateCustomerSearchResults - Control full SubData List, select, show Info message not exist, Select Founded Record Customer_KeyDown - Keyboard Up/Down Event for Data listing in ListView Form Item/Input SelectCustomer_Enter - Selection by Enter MouseSelectCustomer_Click - Selection by Mouse SetXxxxxx - Set Joined Fields From this Selection Standard Methods For SubDocItems INSERT/DELETE (Invoice Example) dgSubListView_SelectionChanged - Select Item form List For Delete Control BtnItemInsert_Click - Insert new Item to SubDataList from SubFormInputFields BtnItemDelete_Click - Delete selected SubItem from DataList ClearItemsFields - Clear SubItemForm SetSubListsNonActiveOnNewItem - Load DataSources For SubItem Selections types (Dials -> ItemList, CurrencyList) Optional HideTiltButtons - Hide/Show Button for show subDocument TiltToInvoice_Click - Open subDocument Standard Tilt Documents (Next Joined Generating SubDoc Offer -> Order, etc) Standard Method List for full generation process ImportInvoice - Import Existed Document (example in CreditNoteList) PREPARED TEMPLATES FOR FAST DEVELOPING - Older was Modernized SYSTEM TEMPLATES FOR MAKE ANY TOUCH/IS/ETC. SYSTEM System HAS 4 Standard Data Form Types in Main Structure (System Templates) Implemented Forms for build Robust Any System TemplateListViewPage - show DATALIST ONLY, used in Login history list TemplateListPage - show DATALIST WITH DETAIL FORM, Standard Dials, used in Parameters, User, Roles, etc. TemplateListPageWithSubViewPage - show DATALIST WITH DETAIL FORM AND SUB TABLE DATAVIEW used in Currency agenda TemplateListPageWithSubPage - show DATALIST WITH DETAIL FORM AND SUB TABLE DATAVIEW + FORM used in invoice, order for work 2Tables HEADER/Items in One time System HAS 3 Form Types in Main Structure (All are in Templates) DATALIST ONLY - TemplateListViewPage Show Datalist only (Login history for example, views, etc..) DATALIST WITH DETAIL FORM - TemplateListPage Show Datalist and Detail Form for PAge Table ( Dials, Simple agendas with one primary table, etc...) SETTING - TemplateSettingsPage Customized Forms with unlimited posibilities,(Setting Form, special Form, special Page, Video, 3D, etc) In System are implemented multimedia templates (MultiMedia Templates) Implemented Special MultiMedia Forms TemplateDocumentViewPage - XPS,PDF,TXT,and more format direct viewer/Print TemplateSTLPage - Show 3D STL project TemplateVideoPage - Play MP4 Video player Supported next implementation GITHUB WPF TOOLS FOR SYSTEM IS / OS, HW can possible to implement for FREE API communication - 4 TYPES is enough For thinking, the development of tools and work with them worthy in the 21st century It is so. INSERT/UPDATE/DETETE/SELECT are the mentioned types which are enough ensure the communication of any system. And top it all off with a single list of APIaddress calls and communication is resolved set up for this as a standardized automatic part of the kernel. System kernel code dump, Where you just always add the address and don't care about anything else System APIAddresList - all calls in one place /// <summary> /// ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions /// </summary> public enum ApiUrls { GoldenSystemBasicAttachmentList, GoldenSystemAddressList, Authentication, BackendCheck, GoldenSystemBranchList, GoldenSystemCalendar, GoldenSystemCreditNoteList, GoldenSystemCreditNoteSupportList, GoldenSystemCurrencyList, GoldenSystemDocumentAdviceList, GoldenSystemExchangeRateList, GoldenSystemIncomingInvoiceList, GoldenSystemIncomingInvoiceSupportList, GoldenSystemIncomingOrderList, GoldenSystemIncomingOrderSupportList, GoldenSystemTemplateClassList } 4 API Calls - SYSTEM Core module class ApiCommunication { public static async Task<Authentification> Authentification(ApiUrls apiUrl, string userName = null, string password = null) { using (HttpClient httpClient = new HttpClient()) { try { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Basic\", Convert.ToBase64String(Encoding.UTF8.GetBytes(userName + \":\" + password))); StringContent test = new StringContent(\"\", Encoding.UTF8, \"application/json\"); HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl, test); return JsonConvert.DeserializeObject<Authentification>(await json.Content.ReadAsStringAsync()); } catch { return new Authentification() { Token = null, Expiration = null }; } } } public static async Task<T> GetApiRequest<T>(ApiUrls apiUrl, string key = null, string token = null) where T : new() { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<T>(json); } catch { return new T(); } } } public static async Task<DBResultMessage> PostApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PostAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> PutApiRequest(ApiUrls apiUrl, HttpContent body, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.PutAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\"), body); DBResultMessage result = JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); if (result.ErrorMessage == null) { result.ErrorMessage = await json.Content.ReadAsStringAsync(); } return result; } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<DBResultMessage> DeleteApiRequest(ApiUrls apiUrl, string key = null, string token = null) { using (HttpClient httpClient = new HttpClient()) { try { if (token != null) { httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(\"Bearer\", token); } HttpResponseMessage json = await httpClient.DeleteAsync(App.Setting.ApiAddress + \"/\" + apiUrl + (!string.IsNullOrWhiteSpace(key) ? \"/\" + key : \"\")); return JsonConvert.DeserializeObject<DBResultMessage>(await json.Content.ReadAsStringAsync()); } catch (Exception ex) { return new DBResultMessage() { RecordCount = 0, ErrorMessage = ex.Message + Environment.NewLine + ex.StackTrace, Status = \"error\" }; } } } public static async Task<bool> CheckApiConnection() { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(App.Setting.ApiAddress + \"/\" + ApiUrls.BackendCheck); return true; } catch { return false; } } } } EASYBuilder Premade Templates For thinking, the development of tools and work with them worthy in the 21st century Pre-prepared templates are used to easily create a new agenda. Even if there are only a few of them, they are fully sufficient to create complex systems of more or less all types, not only IS Systems - for which 4 templates are enough, but also Special Systems, Media Systems, Management / BI, and many others. The system is nothing more than a list of very frequently repeated forms. And you simply click on the graphic builder, which is part of Visual Studio. And that's the entire development of the system. Here is a list of prepared templates in the system for more than n IS SYSTEM SystemTemplates - Media Templates --Older was modernized TemplateListViewPage - Displays only the DataList. For example access history, Detailed form is not even needed TemplateListPage - displays the DataList and the Detailed form both for displaying the list and editing the record. That is, the most common template where you just edit the fields according to the table. TemplateListPageWithSubViewPage - displays the DataList and Detail form + additional DataList sub items. For example, the current exchange rate for currency. So it is a system type of Template TemplateListPageWithSubPage - displays a DataList and a Detail Form + another DataList with a Detail Item Form. For example Invoice - Header + Items. And with these templates you can write, for example, the entire SAP. MultiMediaTemplates - Media Templates --Older was modernized TemplateVideoPage - Video player TemplateSTLPage - STL representation of a 3D object TemplateDocumentViewPage - Web browser that displays most file types PDF, Docx, TXT, PNG, JPG, etc. CustomTemplates - Custom templates - Just slanted forms after all TemplateSettingsPage - sample template for creating a unique form These types, which you can click on in Visual Studio in the case of necessity, will reveal all unique types of forms when he wants anything atypical Shared Agendas - Real Creation In the SharedAgendas folder you will find approx. 50 Agendas - all forms already created forms for immediate use or as an inspiration for the creation of new agendas. Code Examples https://learn.microsoft.com/cs-cz/samples/browse/?terms=xaml Literature https://www.c-sharpcorner.com/article/what-is-power-bi-report-builder-and-how-to-design-paginated-report-using-power-b/ https://github.com/majorsilence/My-FyiReporting/releases https://mahapps.com/api/MahApps.Metro.Controls/ https://helix-toolkit.github.io/ https://www.c-sharpcorner.com/UploadFile/mahesh/viewing-word-documents-in-wpf/ https://techcohere.com/post/Create-PDF-File-From-WPF-Window-using-iTextsharp-1001 https://www.c-sharpcorner.com/UploadFile/mahesh/viewing-word-documents-in-wpf/ https://github.com/xceedsoftware/wpftoolkit https://www.tutorialspoint.com/wpf/wpf_3d_graphics.htm Number Formats (For Parameters) https://learn.microsoft.com/en-us/dotnet/standard/base-types/standard-numeric-format-strings Manual Builder https://github.com/EWSoftware/SHFB/releases https://github.com/psoares33/FyiReporting-Docs/wiki all method in MainWindow from Agenda Page Example ((SchedulerPage)((MainWindowViewModel)DataContext).TabContents[0].Content).LoadScheduledTask(); Convert Project to ASPNETCORE project https://learn.microsoft.com/cs-cz/dotnet/core/porting/upgrade-assistant-overview?WT.mc_id=dotnet-35129-website dotnet tool install -g --add-source \"https://api.nuget.org/v3/index.json\" --ignore-failed-sources upgrade-assistant upgrade-assistant upgrade převod na web Connection string Example Server=192.168.1.35,1433;Database=db;User ID=user;Password=pw; Server=SQLSRV;DataBase=db;Trusted_Connection=True;Connect Timeout=30; Print example from CMD with parameters \"RdlReader.exe\" \"C:\\WorkListPrint.rdl\" -p \"&Search=%%&Id=0\" Report has dataset and you can insert field over right mouse/ insert / object / Expressions PageBreak ={PersonalNumber} - new page by each personalNumber functions in C# not MSSQL using =\"Filter:\" + Replace({?Search}, \"%\", \"\") - Search is param, replace %% for run report mut be set Default values for parameters =Fields!OperationNumber.Value + \" \" + {Note} =Sum({Amount}) Call from System Thread volani funkce ze stejneho vlakna this.Invoke(() => { if (ServiceStatus != Resources[\"running\"].ToString()) reloadScheduledTasks(); }); Set Collor Icon programmaticaly Application.Current.MainWindow.Icon = IconMaker.Icon(Colors.White); Remove opened Page programatically MetroWindow wnd = (MetroWindow)App.Current.MainWindow; TabablzControl tc = (TabablzControl)wnd.FindName(\"InitialTabablzControl\"); TabContent itc0 = (TabContent)tc.SelectedItem; tc.RemoveFromSource(itc0); rogram Help - Will be implemented Adding Help #region Help Added private DependencyObject CurrentHelpDO { get; set; } private Popup CurrentHelpPopup { get; set; } private bool HelpActive { get; set; } private MouseEventHandler _helpHandler = null; static bool isHelpMode = false; #endregion private void Window_PreviewMouseDown(object sender, MouseButtonEventArgs e) { if (isHelpMode && 1 == 0) { e.Handled = true; isHelpMode = false; Mouse.OverrideCursor = null; if (Help.MyHelpCommand.CanExecute(null, this)) { Help.MyHelpCommand.Execute(null, this); } } } private void winMain_MouseMove(object sender, MouseEventArgs e) { HitTestResult hitTestResult = VisualTreeHelper.HitTest(((Visual)sender), e.GetPosition(this)); if (hitTestResult.VisualHit != null && CurrentHelpDO != hitTestResult.VisualHit) { DependencyObject checkHelpDO = hitTestResult.VisualHit; string helpText = AutomationProperties.GetHelpText(checkHelpDO); while (String.IsNullOrEmpty(helpText) && checkHelpDO != null && checkHelpDO != mainWindow) { checkHelpDO = VisualTreeHelper.GetParent(checkHelpDO); helpText = AutomationProperties.GetHelpText(checkHelpDO); } if (String.IsNullOrEmpty(helpText) && CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; CurrentHelpDO = null; } else if (!String.IsNullOrEmpty(helpText) && CurrentHelpDO != checkHelpDO) { CurrentHelpDO = checkHelpDO; if (CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; } CurrentHelpPopup = new Popup() { PopupAnimation = PopupAnimation.Scroll, PlacementTarget = (UIElement)hitTestResult.VisualHit, IsOpen = true, Child = new Border() { CornerRadius = new CornerRadius(10), BorderBrush = new SolidColorBrush(Colors.Goldenrod), BorderThickness = new Thickness(2), Background = new SolidColorBrush(Colors.LightYellow), Child = new TextBlock() { Margin = new Thickness(10), Text = helpText.Replace(\"\\\\r\\\\n\", \"\\r\\n\"), FontSize = 14, FontWeight = FontWeights.Normal } } }; CurrentHelpPopup.IsOpen = true; } } } private void btnHelp_PreviewMouseDown(object sender, MouseButtonEventArgs e) { if (isHelpMode) { isHelpMode = false; Mouse.OverrideCursor = null; } } private void btn_LaunchHelp_Click(object sender, RoutedEventArgs e) { System.Windows.Forms.Help.ShowHelp(null, \"SIMTERM.chm\"); } private void ToggleHelp() { CurrentHelpDO = null; if (CurrentHelpPopup != null) { CurrentHelpPopup.IsOpen = false; } HelpActive = !HelpActive; if (_helpHandler == null) { _helpHandler = new MouseEventHandler(winMain_MouseMove); } if (HelpActive) { mainWindow.MouseMove += _helpHandler; } else { mainWindow.MouseMove -= _helpHandler; } ToggleHelp(mainWindow); } private void ToggleHelp(DependencyObject dependObj) { for (int x = 0; x < VisualTreeHelper.GetChildrenCount(dependObj); x++) { DependencyObject child = VisualTreeHelper.GetChild(dependObj, x); ToggleHelp(child); } if (dependObj is UIElement) { UIElement element = (UIElement)dependObj; if (HelpActive) { string helpText = AutomationProperties.GetHelpText(element); if (!String.IsNullOrEmpty(helpText)) { } } } } Developing Page Code Help /// <summary> /// Library with standardize Definitions and Methods For Develop Any System /// </summary> public class PageTemplatesCodeHelp { #region MyReStandartized Definitions /// <summary> /// Define Collection For ComboBox Example /// </summary> public ObservableCollection<Language> Languages = new ObservableCollection<Language>() { new Language() { Name = \"System\", Value = \"system\" }, new Language() { Name = \"Czech\", Value = \"cs-CZ\" }, }; #endregion MyReStandartized Definitions /// <summary> /// Special Method for input limitation as number only /// Its only for help /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private void NumberValidationTextBox(object sender, TextCompositionEventArgs e) { Regex regex = new Regex(\"[^0-9]+\"); e.Handled = regex.IsMatch(e.Text); } /// <summary> /// Example of Load System Parameters for Page /// Add Call this method Before LoadDatalist and Tilt Documents /// LoadParameters() will be later translating Detail Fields /// </summary> private async void LoadParameters() { string itemVatPriceFormat = await DataOperations.ParameterCheck(\"ItemVatPriceFormat\"); string documentVatPriceFormat = await DataOperations.ParameterCheck(\"DocumentVatPriceFormat\"); int intValue = int.Parse(await DataOperations.ParameterCheck(\"DocumentRowHeight\")); } /// <summary> /// Global Application Defined API Communication Types for Centralized using /// </summary> private async void DefinedAllAplicationApiComunicationTypes() { ///ApiUrls variable is List With All API calls ///DBResultMessage is Class for Global using of All API with all information of Request result DBResultMessage dBResult; /// Serialize Dataset for API sending INSERT/UPDATE TemplateClassList myRecord = new TemplateClassList(); string json = JsonConvert.SerializeObject(myRecord); StringContent httpContent = new StringContent(json, Encoding.UTF8, \"application/json\"); ///API for load/Select Data await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); ///API for Data Insert dBResult = await ApiCommunication.PutApiRequest(ApiUrls.GoldenSystemTemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Data Update dBResult = await ApiCommunication.PostApiRequest(ApiUrls.GoldenSystemTemplateClassList, httpContent, null, App.UserData.Authentification.Token); ///API for Delete Data dBResult = await ApiCommunication.DeleteApiRequest(ApiUrls.GoldenSystemTemplateClassList, \"someId\", App.UserData.Authentification.Token); } Developing Global MainWindow Code Help // <summary> /// Global Application available Methods for All Pages for Centralized using /// </summary> private async void DefinedGlobalMainWindowMethodsForAllPages() { ///Application Restart App.AppRestart(); ///ProgresRing for Wait indication MainWindow.ProgressRing = Visibility.Hidden; ///Show Info message await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\"); ///Show Confirm Dialog MessageDialogResult result = await MainWindow.ShowMessage(false, \"Resources[\\\"dictionaryWord\\\"].ToString()\" + \" \", true); if (result == MessageDialogResult.Affirmative) { } ///Method For Sett Language of Each Page Language defaultLanguage = JsonConvert.DeserializeObject<Language>(App.Setting.DefaultLanguage); ///_ = SystemOperations.SetLanguageDictionary(Resources, defaultLanguage.Value); } /// <summary> /// Global Specific Methods For Customized Working /// </summary> private async void UsedSpecificMethodsForCustomizedWorking() { #region Other Help Global Definitions and Methods ///Load Parameter From Table Parameters text is Parameter name var res = int.Parse(await DataOperations.ParameterCheck(\"someParameterName\")); ///Set ComboBox Item By myValue (from selected record or another) int index = 0; ComboBox cb_defaultLanguage = new ComboBox(); cb_defaultLanguage.Items.SourceCollection.Cast<Language>().ToList().ForEach(language => { if (language.Name == \"myvalue\") { cb_defaultLanguage.SelectedIndex = index; } index++; }); ///Open File Dialog OpenFileDialog dlg = new OpenFileDialog { DefaultExt = \".exe\", Filter = \"Exe files |*.exe\", Title = \"Resources[\\\"fileOpenDescription\\\"].ToString()\" }; if (dlg.ShowDialog() == true) { } #endregion Other Help Global Definitions and Methods } Customizing Page Code Help /// <summary> /// Customized GET Call /// </summary> /// <param name=\"sender\"></param> /// <param name=\"e\"></param> private async void BtnApiTest_Click(object sender, RoutedEventArgs e) { using (HttpClient httpClient = new HttpClient()) { try { string json = await httpClient.GetStringAsync(\"someUrl\"); await MainWindow.ShowMessage(false, json); } catch (Exception ex) { await MainWindow.ShowMessage(true, \"Exception Error : \" + ex.StackTrace); } } } Classlist Type Examples - Recommended /// <summary> /// Typical Table schema for API which you copy from Generated Model in API Server /// On API server is Automatically generated by Scaffold command /// Class is Same as API result /// Example Load Data: listVariable = await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); /// </summary> public partial class ExampleClassList { public int Id { get; set; } = 0; public string SystemName { get; set; } = null; public string Description { get; set; } = null; public int UserId { get; set; } public bool Active { get; set; } public DateTime TimeStamp { get; set; } } /// <summary> /// Extend API Class with Custom Column in One dataset /// !!!SYSTEM CONDITION: Name must contain \"Extended\" /// !!!FOR NULL SET IN THE JOING FIELDS BEFORE SEND OVER API /// /// Move the fields with SAME NAME as Joined Table on API to ExtendedClass /// Will be set to 'null' Before API send /// /// Using: for Translation, Info about joined table, etc /// It must be cleaned by operation \"NullSetInExtensionFields\" before Database operation /// for disable join control on API for valid independent table /// Other is valid join key for other Tables /// </summary> public partial class ExtendedExampleClassList : TemplateClassList { public string Currency { get; set; } // its join to table Currency public string TotalCurrency { get; set; } public ExtendedExampleClassList() { } public ExtendedExampleClassList(ItemList ch) { foreach (var prop in ch.GetType().GetProperties()) { this.GetType().GetProperty(prop.Name).SetValue(this, prop.GetValue(ch, null), null); } } } /// <summary> /// WARNING: If you Add the field with Same Name as joined table in Database Model /// you must set this field as 'null' before send Insert / Update /// in HttpContent must Be as 'null' value other is taken as Data Join by API Server /// /// SIMPLE USING /// API Class is extended on root level by custom fields /// Example Load Data and Fill custom Fields: /// /// listVariable = await ApiCommunication.GetApiRequest<List<TemplateClassList>>(ApiUrls.GoldenSystemTemplateClassList, null, App.UserData.Authentification.Token); /// listVariable.ForEach(async rec => { rec.Translation = await DBOperations.DBTranslation(rec.SystemName); }); /// </summary> public partial class ExampleClassListWithLocalTranslation { public int Id { get; set; } = 0; public string SystemName { get; set; } = null; public string Description { get; set; } = null; public int UserId { get; set; } public bool Active { get; set; } public DateTime TimeStamp { get; set; } public string Translation { get; set; } = null; } System Info Message example private async void ComputerInfoClick(object sender, RoutedEventArgs e) { string message = nameof(Environment.MachineName) + \": \" + Environment.MachineName + Environment.NewLine + nameof(Environment.OSVersion) + \": \" + Environment.OSVersion + Environment.NewLine + nameof(Environment.ProcessorCount) + \": \" + Environment.ProcessorCount + Environment.NewLine + nameof(Environment.UserName) + \": \" + Environment.UserName + Environment.NewLine + Environment.NewLine; foreach (var ip in Dns.GetHostEntry(Dns.GetHostName()).AddressList) { if (ip.AddressFamily == AddressFamily.InterNetwork) { message += nameof(ip) + \": \" + ip.ToString() + Environment.NewLine; } } await MainWindow.ShowMessage(false, message, false); MarkDown Template Help"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBTiskovéřešení.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBTiskovéřešení.html",
    "title": "",
    "keywords": "FYI Reporting - FreeWare Full Report Designer and Viewer for Printing All document Types with Images, Barcodes, EAN, QR, Graphs, SubReport, etc. IMPORTANT INFO FOR REPORT DEVELOP Reports are for developping setted Default Parameters. If the report is called from the system - All parameters are replaced by system sended params Each Report can has more Datasets (subreports not need for Header/Items Views) More Examples are Defined Full Developing of new reports are supported Included commandline Tool, Report Viewer, Report Designer JOINING WITH EASYSYSTEMBuilder - Calling Reports Directly - System sending these parameters directly to opening Report connectionString [Connect] - For Report connection to Database table name [TableName] - primary tablename from datalist record ID [Id] - Selected record Id Simple Search Parameter [Search] - For simple search in Datalist Fields Over DB - System save all filter informations to table 'ReportQueueList' and to all record with has selected Datalist Table. After Saving to DB is Called open Report. Its for Reports with using DB procedure 'ReportDataset' for Full DB defined Data Selections Direct parameters not need for this using EASYSYSTEMBuilder SYSTEM Conditions for Reports Connection String is Defined in setting for All reports in Application (Client) All APIUrls with 'List' word on end are automaticaly added for insert Report for this Table All System reports are Saved in Database - table 'ReportList' For Print is downloaded and open with direct params everyTime 'ReportQueueList' Definitions is second method for Print report, which the definition is full in DB (can be defined multi Datasets) Report can combine both method for Load Datasets (Over stored procedure or direct selection with params) Print Report Action you can set for Record Selection Only Unlimited Print Reports you Define for Primary Table - DataList System has these joins: Datalist, Rec ID, simple Search, Advanced Search Each join [param] can be separated for run alone or combined with others Full SQL and SQLexec are supported Print example from CMD with parameters \"RdlReader.exe\" \"C:\\WorkListPrint.rdl\" -p \"&Search=%%&Id=0\" Report has dataset and you can insert field over right mouse/ insert / object / Expressions PageBreak ={PersonalNumber} - new page by each personalNumber functions in C# not MSSQL using =\"Filter:\" + Replace({?Search}, \"%\", \"\") - Search is param, replace %% for run report mut be set Default values for parameters =Fields!OperationNumber.Value + \" \" + {Note} =Sum({Amount}) Print SQL Examples SET FMTONLY OFF; SELECT w.[Id],FORMAT([Date],'MM.yyyy') as Month, FORMAT([Date],'dd.MM.yyyy') as Date, CONCAT(FORMAT([Date],'MMyy'),w.[PersonalNumber]) as ListBreak, w.[PersonalNumber],o.[PartNumber],w.[WorkPlace],w.[OperationNumber], [WorkTime],[Pcs],[Amount],[WorkPower] ,[Name],[SurName],o.[Note] FROM [WorkList] w,[PersonList] p,[OperationList] o WHERE w.PersonalNumber = p.PersonalNumber AND w.WorkPlace = o.WorkPlace AND o.OperationNumber = w.OperationNumber AND (@Id = 0 AND ((LEN(@Search) > 2 AND w.Id LIKE @Search) OR LEN(@Search) = 2)) OR w.Id = @Id ORDER BY w.[Date] ASC, w.PersonalNumber, w.[OperationNumber] --Select with simple search and Id selection SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE 1=1 AND ( ( @Search <> '%%' AND id LIKE @Search ) OR ( @Search = '%%' AND @Id = 0 ) OR ( @Search = '%%' AND @Id <> 0 AND Id = @Id ) ) --Selection with direct params SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE 1=1 AND ( ( @Search <> '%%' AND id LIKE @Search ) OR ( @Search = '%%' AND @Id = 0 ) OR ( @Search = '%%' AND @Id <> 0 AND Id = @Id ) ) --Select with advanced Filter SET FMTONLY OFF; DECLARE @whereClause NVARCHAR(MAX) = @Filter ; DECLARE @sql NVARCHAR(MAX) = 'SELECT Id, UserName, TerminalName, Description, Timestamp FROM LoginHistoryList WHERE @whereClause'; SELECT @sql = REPLACE(@sql, '@whereClause', @whereClause); EXEC sp_executesql @sql; --Selection with ReportQueueList definitions SET FMTONLY OFF; EXEC ReportDataset @TableName='tableName', @Sequence='SeqNr' --Selection with Formating and Dials Fields SET FMTONLY OFF; SELECT w.[Id],FORMAT([Date],'MM.yyyy') as Month, FORMAT([Date],'dd.MM.yyyy') as Date, CONCAT(FORMAT([Date],'MMyy'),w.[PersonalNumber]) as ListBreak, w.[PersonalNumber],o.[PartNumber],w.[WorkPlace],w.[OperationNumber], [WorkTime],[Pcs],[Amount],[WorkPower] ,[Name],[SurName],o.[Note] FROM [WorkList] w,[PersonList] p,[OperationList] o WHERE w.PersonalNumber = p.PersonalNumber AND w.WorkPlace = o.WorkPlace AND o.OperationNumber = w.OperationNumber AND (@Id = 0 AND ((LEN(@Search) > 2 AND w.Id LIKE @Search) OR LEN(@Search) = 2)) OR w.Id = @Id ORDER BY w.[Date] ASC, w.PersonalNumber, w.[OperationNumber] SYSTEM PRINTING On Print Request Updated all filters in table 'ReportQueueList' on records for selected table download from DB and open report with sended these params for Direct SQL support Params Search = Searched Value Id = Record Id from table Filter= Setted Filter command in sql syntax after WHERE clause TableName - selected table Name Connect - connection string from client settings 3) Run report. Done Report Types: Alone Report file with ful own SQL command and use params for selection. Examples You can see in edited reports, Instalation folder and Help Sql defined in ReportQueueList Table, in report is only command: SET FMTONLY OFF;EXEC ReportDataset @TableName='tablename', @Sequence='10' Parameters are sending Every Time, For Debuging you can use MSSQL SQL Profiller In database is Saved Stored Procedure: ReportDataset for folded filter, ReportQueueList table is managing All report are shared for selected database Each print is report again downloaded from database for new run Each report can be exported in Reports menu All reports are saved in instalation folder as Examples All reports has same parameters Dynamic Filtering: For managed SQL command can be 'Search' and 'Id' params ignored = Each Filter working independently Setted Priority: 1] Combined Filter 2] Id 3] Searched Value (searched columns are rardcoded in 'Filter' method on each Datalist) in Report must be hardcoded again in stored Procedure: 'ReportDataset' if Both Searfh and Id Ignored - Filter is aply alone else all cobndition are joined with 'OR' clause for Each Filter setting: 'Id' and 'Search' Its Prepared for future MultiRows Selection More Info Via Help File FYI Reporting Documentations on Github In one Report you can setted more DATALists = DB SELECTS (Invoice Example - Header/Item) and you can set any field over Report Parameter for using in all Report Positions MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBXMLCodeDocs.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ESBXMLCodeDocs.html",
    "title": "EasyITSystemCenter",
    "keywords": "EasyITSystemCenter Contents ApiUrls App #ctor() TiltReceiptDoc appRuntimeData log AppQuitRequest(silent) AppRestart() ApplicationLogging(ex,customMessage) ApplicationQuit() CurrentDomain_FirstChanceException(sender,e) InitializeComponent() Main() OnStartup(e) RootAppKeyDownController(sender,e) StartupLocaslWebServer() AppRuntimeData AppVersion Authentification BasicAttachmentListPage InitializeComponent() BasicCalendarListPage InitializeComponent() BasicCurrencyListPage InitializeComponent() BasicImageGalleryListPage ClearGallery() GrayscaleClick(sender,e) ImageChangesCancelClick(sender,e) InitializeComponent() LoadFromServer() RefreshViewPhoto(selectedPhotoId) SaveImageToServer(onlyThis) BasicItemListPage InitializeComponent() BasicUnitListPage InitializeComponent() BasicVatListPage InitializeComponent() BusinessAddressListPage InitializeComponent() BusinessBranchListPage InitializeComponent() BusinessCreditNoteListPage InitializeComponent() BusinessExchangeRateListPage InitializeComponent() BusinessIncomingInvoiceListPage InitializeComponent() BusinessIncomingOrderListPage InitializeComponent() BusinessMaturityListPage InitializeComponent() BusinessNotesListPage InitializeComponent() BusinessOfferListPage InitializeComponent() BusinessOutgoingInvoiceListPage InitializeComponent() BusinessOutgoingOrderListPage InitializeComponent() BusinessPaymentMethodListPage InitializeComponent() BusinessPaymentStatusListPage InitializeComponent() BusinessReceiptListPage InitializeComponent() BusinessWarehouseListPage InitializeComponent() ClientSettingsPage InitializeComponent() CommOperations CrashReporterSettings _ReportCrash DBJsonFile DBOperations DBTranslation(systemName,notCreateNew,comaList,lang) LoadOrRefreshUserData() LoadStartupDBData() LoadWaitingDataInSleepMode() SaveSystemFailMessage(message,logLevel) SetNonUserDataOnSuccessStartUp() DBResultMessage DataOperations NullSetInExtensionFields``1() ParameterCheck(parameterName) TranslateFormFields``1() DataViewSupport DeserializedJson DocSrvDocTemplateListPage InitializeComponent() DocSrvDocumentationCodeLibraryListPage InitializeComponent() DocSrvDocumentationGroupListPage InitializeComponent() DocSrvDocumentationListPage InitializeComponent() DocumentItemList FileOperations ByteArrayToFile(fileName,byteArray) CheckDirectory(directory) CheckFile(file) ClearFolder(FolderName) CopyDirectory(directory) CopyFile(from,to) CopyFiles(sourcePath,destinationPath) CreateDirectory(directory) CreateFile(file) CreatePath(path) DeleteDirectory(directory) DeleteFile(file) FileDetectEncoding(FileName) LoadSettings() ReadFile(fileName) SaveSettings() UnicodeToUTF8(strFrom) VncServerIniFile(path) WriteToFile(file,content) FormOperations AnalphabetAndNumericOnlyValidated() DisplayAllToolTips_OnClick(userControl) NumberOnlyValidated() RemoveDisabledSpacesFromTextInput() GeneratedInternalTypeHelper AddEventHandler() CreateDelegate() CreateInstance() GetPropertyValue() SetPropertyValue() GraphsPage InitializeComponent() HardwareOperations ApplicationKeyboardMaping(e) HostWin32AppPage _appWin _iscreated _isdisposed exeName InitializeComponent() OnResize(e) OnSizeChanged(e) OnVisibleChanged(e) IconMaker Icon(color,iconPath) Info #ctor() #ctor() Body Title ProvideValue() InfoPopup BodyTextProperty HeaderTextProperty BodyText HeaderText HeaderTextPropertyChanged(d,e) InitializeComponent() Language LicSrvLicenseActivationFailListPage InitializeComponent() LicSrvLicenseAlgorithmListPage InitializeComponent() LicSrvUsedLicenseListPage InitializeComponent() MainWindow #ctor() lastUserAction DataGridSelected DataGridSelectedIdListIndicator DgRefresh DownloadShow DownloadStatus MultiSameTabsEnabled OperationRunning ProgressRing RunReleaseMode ServerLoggerSource ServiceRunning ServiceStatus ShowSystemLogger SystemLogger UserLogged VncRunning AddOrRemoveTab(headerName,tabPage,tagText) BtnKeyboardClick(sender,e) BtnShowLoggerClick(sender,e) Btn_LaunchHelp_Click(sender,e) Btn_ShowModulePanel_Click(sender,e) Btn_about_click(sender,e) CbFilterDropDownClosed(sender,e) CbPrintReportsSelected(sender,e) FilterField_SelectionChanged(sender,e) InitializeComponent() LoadUserMenu() MainGrid_IsDraggingChanged(sender,e) MainWindow_Closing(sender,e) MainWindow_KeyDown(sender,e) MainWindow_Loaded(sender,e) MainWindow_MouseLeave() Menu_action_Click(sender,e) Mi_filter_Click(sender,e) Mi_logout_Click(sender,e) RemoveFilterItem_Click(sender,e) SetServiceStop() SetSystemModuleListPanel() ShowLoginDialog() ShowMessageOnMainWindow(error,message,confirm) StringToFilter(filterBox,advancedFilter) SystemLoggerSourceChanged_Click(sender,e) SystemModulePanel_Click(sender,e) SystemTimerController(sender,e) TabPanelOnSelectionChange(sender,e) TiltOpenForm(translateHeader) MathTypeOperations CheckTypeValue() MediaOperations ArrayToImage(array) CreateImageFile(file,frame,fileType) GetImageImmediatelly(path) SaveAppScreenShot(MainWindow,returnArrayOnly) ProdGuidGroupListPage InitializeComponent() ProdGuidOperationListPage InitializeComponent() ProdGuidPartListPage InitializeComponent() ProdGuidPersonListPage InitializeComponent() ProdGuidWorkListPage InitializeComponent() ReportSelection Resources Culture ResourceManager no_photo ScreenSaverPage InitializeComponent() ServerBrowsablePathListPage InitializeComponent() ServerCorsDefAllowedOriginListPage InitializeComponent() ServerHealthCheckTaskListPage InitializeComponent() ServerLiveDataMonitorListPage InitializeComponent() ServerModuleAndServiceListPage InitializeComponent() ServerSettingListPage InitializeComponent() ServerToolPanelDefinitionListPage InitializeComponent() ServerToolPanelListPage InitializeComponent() ServerToolTypeListPage InitializeComponent() SolutionEmailTemplateListPage InitializeComponent() SolutionEmailerHistoryListPage InitializeComponent() SolutionFailListPage InitializeComponent() SolutionLanguageListPage InitializeComponent() SolutionMessageModuleListPage InitializeComponent() SolutionMessageTypeListPage InitializeComponent() SolutionMixedEnumListPage InitializeComponent() SolutionMottoListPage InitializeComponent() SolutionOperationListPage InitializeComponent() SolutionSchedulerListPage InitializeComponent() SolutionStaticFileListPage InitializeComponent() SolutionUserListPage InitializeComponent() SolutionUserRoleListPage InitializeComponent() SolutionWebsiteListPage InitializeComponent() SpTableList Startup SupportPage InitializeComponent() SystemCustomPageListPage InitializeComponent() SystemDocumentAdviceListPage InitializeComponent() SystemDocumentTypeListPage InitializeComponent() SystemGroupMenuListPage InitializeComponent() SystemIgnoredExceptionListPage InitializeComponent() SystemLocalEnumSets SpecificationScriptTypes languages sections updateVariants SystemLoggerHelper SystemLoggerWebSocketClass SystemLoginHistoryListPage InitializeComponent() SystemMenuListPage InitializeComponent() SystemModuleListPage InitializeComponent() SystemMonitorPage InitializeComponent() SystemOperationListPage InitializeComponent() SystemOperationMessage SystemOperations FilterToString(filterBox) FirstLetterToLower(str) GetExceptionMessages(exception,msgCount) GetExceptionMessagesAll(exception,msgCount) IncreaseFileVersionBuild() RandomString(length) RemoveAppNamespaceFromString(stringForRemoveNamespace) SendMailWithMailTo(address,subject,body,attach) SendMailWithServerSetting(message) SetLanguageDictionary(Resources,languageDefault) StartExternalProccess(type,processCommand,startupPath,arguments) SystemParameterListPage InitializeComponent() SystemReportListPage InitializeComponent() SystemReportQueueListPage InitializeComponent() SystemStatuses SystemSvgIconListPage InitializeComponent() SystemTranslatedTableList SystemTranslationListPage InitializeComponent() SystemWindowDataModel #ctor() TemplateClassListAutoDBTranslationPage InitializeComponent() TemplateClassListAutoDBTranslationViewPage InitializeComponent() TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() TemplateClassListAutoDBTranslationWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListAutoDBTranslationWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateClassListPage InitializeComponent() TemplateClassListViewPage InitializeComponent() TemplateClassListWithParentPage InitializeComponent() TemplateClassListWithSubPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnItemDelete_Click(sender,e) BtnItemInsert_Click(sender,e) BtnSave_Click(sender,e) ClearItemsFields() Customer_KeyDown(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) InitializeComponent() LoadDataList() NewRecord() NotesChanged(sender,e) PartNumberGotFocus(sender,e) PartNumber_KeyDown(sender,e) SelectCustomer_Enter(sender,e) SelectGotFocus(sender,e) SelectPartNumber_Enter(sender,e) SetCustomer() SetPartNumber() SetRecord(showForm,copy) SetSubListsNonActiveOnNewItem() UpdateCustomerSearchResults() UpdatePartNumberSearchResults() dgSubListView_SelectionChanged(sender,e) TemplateClassListWithSubViewPage #ctor() dataViewSupport BtnCancel_Click(sender,e) BtnSave_Click(sender,e) DeleteRecord() DgListView_MouseDoubleClick(sender,e) DgListView_SelectionChanged(sender,e) DgListView_Translate(sender,ex) DgSubListView_Translate(sender,ex) EditRecord() Filter(filter) Fixed_Checked(sender,e) InitializeComponent() LoadDataList() LoadSubDataList() NewRecord() SetRecord(showForm,copy) TemplateDocumentViewPage #ctor() dataViewSupport InitializeComponent() TemplateSTLPage dataViewSupport InitializeComponent() TemplateSettingsPage #ctor() Languages dataViewSupport BtnApiTest_Click(sender,e) InitializeComponent() TemplateVideoPage dataViewSupport InitializeComponent() TemplateWebViewPage #ctor() dataViewSupport InitializeComponent() TextBoxBehavior TiltTargets ToolsOperations AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) UpdateVariant UserData WebBannedIpAddressListPage InitializeComponent() WebCodeEditorPage InitializeComponent() WebCodeLibraryListPage InitializeComponent() WebCoreFileListPage InitializeComponent() WebDeveloperNewsListPage InitializeComponent() WebDocumentationCodeLibraryListPage InitializeComponent() WebDocumentationListPage InitializeComponent() WebGlobalPageBlockListPage InitializeComponent() WebGroupMenuListPage InitializeComponent() WebMenuListPage InitializeComponent() WebModulePage InitializeComponent() WebSettingListPage InitializeComponent() WebVisitIpListPage InitializeComponent() WelcomePage InitializeComponent() ApiUrls type Namespace EasyITSystemCenter.Api Summary ALL standard View AND Form API Call must end with \"List\" - These will automatic added for reports Definitions TODO From Table? App type Namespace EasyITSystemCenter Summary App #ctor() constructor Summary Application Global Exceptions Controls Definitions Parameters This constructor has no parameters. TiltReceiptDoc constants Summary Tilt Document types definitions appRuntimeData constants Summary Global Application Startup Settings Central Parameters / Languages / User / Configure TODO must centalize to Globall APP class log constants Summary System Core Needs Runtime Data For Working //TODO move to RuntimeData AppQuitRequest(silent) method Summary System or Quit Parameters Name Type Description silent System.Boolean AppRestart() method Summary System Restart Controller Parameters This method has no parameters. ApplicationLogging(ex,customMessage) method Summary Full Application System logging Running If is AppSystemTimer is Enabled for disable other processes exceptions Full Application logging to file if enabled and to DB for solving by Developers Supported Custom Message Here Is Filling Local System Logger for Developers Logging to Database Are All non Developer working Parameters Name Type Description ex System.Exception customMessage System.String ApplicationQuit() method Summary MainWindow Closing Handler for Cleaning TempData, disable AddOns / Tool and Third Party Software Closing Third Party processes Parameters This method has no parameters. CurrentDomain_FirstChanceException(sender,e) method Summary FullSystem Logging Every Exception types are monitored for maximize correct running all processes, System addOns, systems, communications, threads, network All detail of application system add all used possibilities Parameters Name Type Description sender System.Object e System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Main() method Summary Application Entry Point. Parameters This method has no parameters. OnStartup(e) method Summary Connected Starting Video Parameters Name Type Description e System.Windows.StartupEventArgs RootAppKeyDownController(sender,e) method Summary Keyboard Pointer to Central Keyboard Reaction Definitions Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs StartupLocaslWebServer() method Summary Local Web Server Controller Parameters This method has no parameters. AppRuntimeData type Namespace EasyITSystemCenter.GlobalClasses Summary !!!SYSTEM Global Runtime Monitor Definition For One Point monitoring For Processes and each other Definition For optimize the System Running TODO move All Central Definitions Here create Monitor Window for managing AppVersion type Namespace EasyITSystemCenter.Classes Summary Program version Class Authentification type Namespace EasyITSystemCenter.GlobalClasses Summary Class for User Authentication information BasicAttachmentListPage type Namespace EasyITSystemCenter.Pages Summary BasicAttachmentListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCalendarListPage type Namespace EasyITSystemCenter.Pages Summary BasicCalendarListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicCurrencyListPage type Namespace EasyITSystemCenter.Pages Summary BasicCurrencyListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicImageGalleryListPage type Namespace EasyITSystemCenter.Pages Summary BasicImageGalleryListPage ClearGallery() method Summary Phycical clear local storage and form Parameters This method has no parameters. GrayscaleClick(sender,e) method Summary Images Effect Part Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs ImageChangesCancelClick(sender,e) method Summary Image Graphics Changes Controllers Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadFromServer() method Summary Last proccess Returns Parameters This method has no parameters. RefreshViewPhoto(selectedPhotoId) method Summary Parameters Name Type Description selectedPhotoId System.Nullable{System.Int32} selectedPhotoId -1 is Select Last SaveImageToServer(onlyThis) method Summary null For Full Folder else No of dbId, 0 = new Returns Parameters Name Type Description onlyThis System.Nullable{System.Int32} BasicItemListPage type Namespace EasyITSystemCenter.Pages Summary BasicItemListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicUnitListPage type Namespace EasyITSystemCenter.Pages Summary BasicUnitListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BasicVatListPage type Namespace EasyITSystemCenter.Pages Summary BasicVatListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessAddressListPage type Namespace EasyITSystemCenter.Pages Summary BusinessAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessBranchListPage type Namespace EasyITSystemCenter.Pages Summary BusinessBranchListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessCreditNoteListPage type Namespace EasyITSystemCenter.Pages Summary BusinessCreditNoteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessExchangeRateListPage type Namespace EasyITSystemCenter.Pages Summary BusinessExchangeRateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessIncomingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessIncomingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessMaturityListPage type Namespace EasyITSystemCenter.Pages Summary BusinessMaturityListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessNotesListPage type Namespace EasyITSystemCenter.Pages Summary BusinessNotesListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOfferListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOfferListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingInvoiceListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingInvoiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessOutgoingOrderListPage type Namespace EasyITSystemCenter.Pages Summary BusinessOutgoingOrderListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentMethodListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentMethodListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessPaymentStatusListPage type Namespace EasyITSystemCenter.Pages Summary BusinessPaymentStatusListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessReceiptListPage type Namespace EasyITSystemCenter.Pages Summary BusinessReceiptListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. BusinessWarehouseListPage type Namespace EasyITSystemCenter.Pages Summary BusinessWarehouseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ClientSettingsPage type Namespace EasyITSystemCenter.Pages Summary ClientSettingsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. CommOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Communication Operations as Console, Web Socket Plugins and Extensions communications CrashReporterSettings type Namespace EasyITSystemCenter.SystemConfiguration Summary Libreria condivisa _ReportCrash constants Summary FirstRun DBJsonFile type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DBOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised DBFunctions as Load DB Congig, System Dials (Language, Params) Another Db functions As Saving System Loging, Language Dictionary Autofiling DBTranslation(systemName,notCreateNew,comaList,lang) method Summary Centralised Method for Translating by DB Dictionary Service insert the news words for translate (After translate request) to Database Automaticaly with Empty Translate. Service return translate if is possible or requested word send back CamelCase ignored Default Language: CZ Returns Parameters Name Type Description systemName System.String notCreateNew System.Boolean comaList System.Boolean lang System.String LoadOrRefreshUserData() method Summary Centralised Method for Refresh All UserData params, for correct App running. Thinking for remove and new Load Actualy limited by DebugingHelpSetting Itr user After Succes User Login Parameters This method has no parameters. LoadStartupDBData() method Summary Startup Load System Parameters ,Languages, System Controlling, Server Setting Parameters This method has no parameters. LoadWaitingDataInSleepMode() method Summary Reload SYSTEM Dials When System Sleep For Non Blocking Work Was Problem For More Startup Saving and Reloading with Language List Parameters This method has no parameters. SaveSystemFailMessage(message,logLevel) method Summary Save Exception to DB Fail List (System Log) Write to System Logger Parameters Name Type Description message System.String logLevel System.String SetNonUserDataOnSuccessStartUp() method Summary SYSTEM: Set NonUser Startup Data for Correct Prepare System Its for All Status Possible NODB,OS,IS,Network,etc. For check ANY possible problems out of System Parameters This method has no parameters. DBResultMessage type Namespace EasyITSystemCenter.Api Summary Global API Definition of Result API calls for All Calling of Insert / Update / Delete DataOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized DataOperations as Cleaning dataset Language Dictionary Auto filing NullSetInExtensionFields``1() method Summary !!! SYSTEM RULE: ClassList with joining fields names must be nullable before API operation !!! ClassName must contain: \"Extended\" WORD Extension field in Class - Dataset must be set as null before Database Operation else is joining to other dataset is valid and can be blocked by fail key Its Check Extended in ClassName - SYSTEM RULE Returns Parameters This method has no parameters. Generic Types Name Description T ParameterCheck(parameterName) method Summary Return Requested User or if not exist default DB parameter CamelCase Ignored Returns Parameters Name Type Description parameterName System.String TranslateFormFields``1() method Summary !!! SYSTEM RULE: naming of automatic gtanslating fields must be type_fieldname fieldname is Translated Over DB List !!! Translation List is Automatic Filling For Logged Agendas Function using Referenced Objects Defined: Grid[label,button],Label, Button, EXTEND this Fuction for every Parent a Direct Types For One Function Translatings !!! Translate only Empty Contents Returns Parameters This method has no parameters. DataViewSupport type Namespace EasyITSystemCenter.Classes Summary Actual List Item informations for Controls each Page in MainView DeserializedJson type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures DocSrvDocTemplateListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationGroupListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocSrvDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary DocSrvDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. DocumentItemList type Namespace EasyITSystemCenter.GlobalClasses Summary Univessal Document List (Item) for Offer,Order,Invoice FileOperations type Namespace EasyITSystemCenter.GlobalOperations ByteArrayToFile(fileName,byteArray) method Summary Write ByteArray to File Returns Parameters Name Type Description fileName System.String Name of the file. byteArray System.Byte[] The byte array. CheckDirectory(directory) method Summary Checks the directory. Returns Parameters Name Type Description directory System.String The directory. CheckFile(file) method Summary Checks the file. Returns Parameters Name Type Description file System.String The file. ClearFolder(FolderName) method Summary Full Clear Folder Parameters Name Type Description FolderName System.String Name of the folder. CopyDirectory(directory) method Summary Copy Full directory. Returns Parameters Name Type Description directory System.String The directory. CopyFile(from,to) method Summary / Returns Parameters Name Type Description from System.String From. to System.String To. CopyFiles(sourcePath,destinationPath) method Summary Prepared Method for Files Copy Parameters Name Type Description sourcePath System.String destinationPath System.String CreateDirectory(directory) method Summary Creates the directory. Parameters Name Type Description directory System.String The directory. CreateFile(file) method Summary Prepared Method for Create empty file Returns Parameters Name Type Description file System.String CreatePath(path) method Summary Creates the path recursively. Returns Parameters Name Type Description path System.String The path. DeleteDirectory(directory) method Summary Deletes the directory. Parameters Name Type Description directory System.String The directory. DeleteFile(file) method Summary Deletes the file. Returns Parameters Name Type Description file System.String The file. FileDetectEncoding(FileName) method Summary Prepared Method for Get Information of File encoding UTF8,WIN1250,etc Returns Parameters Name Type Description FileName System.String LoadSettings() method Summary Application Startup Check and configure Data Structure in folder ProgramData And required files, load client configuration config.json Returns Parameters This method has no parameters. ReadFile(fileName) method Summary Reads the file. Returns Parameters Name Type Description fileName System.String Name of the file. SaveSettings() method Summary Function for saving Application Configuration This is client configuration only Returns Parameters This method has no parameters. UnicodeToUTF8(strFrom) method Summary Unicodes to ut f8. Returns Parameters Name Type Description strFrom System.String The string from. VncServerIniFile(path) method Summary Generate ini file for start vns server default password: groupware Returns Parameters Name Type Description path System.String WriteToFile(file,content) method Summary Write String to File Used for JsonSaving Parameters Name Type Description file System.String The file. content System.String The content. FormOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised Forms Functions for work with Types, methods, Formats, Logic, supported methods AnalphabetAndNumericOnlyValidated() method Summary TextInput allowing Analphabetical and numeric character Only Parameters This method has no parameters. DisplayAllToolTips_OnClick(userControl) method Summary Secventional Show All Tooltips On Shown Objects in System Parameters Name Type Description userControl System.Windows.FrameworkElement NumberOnlyValidated() method Summary Text Input Allowing Numeric Characters Only Parameters This method has no parameters. RemoveDisabledSpacesFromTextInput() method Summary Removes the disabled spaces from referenced Inpout. Parameters This method has no parameters. GeneratedInternalTypeHelper type Namespace XamlGeneratedNamespace Summary GeneratedInternalTypeHelper AddEventHandler() method Summary AddEventHandler Parameters This method has no parameters. CreateDelegate() method Summary CreateDelegate Parameters This method has no parameters. CreateInstance() method Summary CreateInstance Parameters This method has no parameters. GetPropertyValue() method Summary GetPropertyValue Parameters This method has no parameters. SetPropertyValue() method Summary SetPropertyValue Parameters This method has no parameters. GraphsPage type Namespace EasyITSystemCenter.Pages Summary GraphsPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. HardwareOperations type Namespace EasyITSystemCenter.GlobalOperations ApplicationKeyboardMaping(e) method Summary Application Keyboard controller Parameters Name Type Description e System.Windows.Input.KeyEventArgs HostWin32AppPage type Namespace EasyITSystemCenter.Pages Summary HostWin32AppPage _appWin constants Summary Handle to the application Window _iscreated constants Summary Track if the application has been created _isdisposed constants Summary Track if the control is disposed exeName constants Summary The name of the exe to launch InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. OnResize(e) method Summary Update display of the executable Parameters Name Type Description e System.Object Not used OnSizeChanged(e) method Summary Force redraw of control when size changes Parameters Name Type Description e System.Object Not used OnVisibleChanged(e) method Summary Create control when visibility changes Parameters Name Type Description e System.Object Not used IconMaker type Namespace EasyITSystemCenter.GlobalGenerators Summary System Online Icon Generator from custom Path Its for working with Icon over Database Dynamically Icon(color,iconPath) method Summary Generate Custom Icon from Defined Path Returns Parameters Name Type Description color System.Windows.Media.Color The color. iconPath System.String The icon path. Info type Namespace EasyITSystemCenter Summary A markup extension that returns a InfoPopup control preconfigured with header and text information according to the Title and Body properties. #ctor() constructor Summary Empty default constructor. Parameters This constructor has no parameters. #ctor() constructor Summary Inits the Info markup extension with title and body. Parameters This constructor has no parameters. Body property Summary Either a tooltips main text or a resource key that can be used to look up the text. Title property Summary Either a title text or a resource key that can be used to look up the title. ProvideValue() method Summary Performs a lookup for the defined Title and Info and creates the tooltip control. Returns A ToolTip that contains the InfoPopup control. Parameters This method has no parameters. InfoPopup type Namespace EasyITSystemCenter BodyTextProperty constants Summary The information to be displayed through the popup. HeaderTextProperty constants Summary An optional title to be displayed. May be omitted. BodyText property Summary A property wrapper for the BodyTextProperty dependency property: The information to be displayed through the popup. HeaderText property Summary A property wrapper for the HeaderTextProperty dependency property: An optional title to be displayed. May be omitted. HeaderTextPropertyChanged(d,e) method Summary A static callback listener which is being invoked if the HeaderTextProperty dependency property has been changed. Invokes the OnHeaderTextPropertyChanged instance method of the changed instance. Parameters Name Type Description d System.Windows.DependencyObject The currently processed owner of the property. e System.Windows.DependencyPropertyChangedEventArgs Provides information about the updated property. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. Language type Namespace EasyITSystemCenter.Classes Summary Language definition support LicSrvLicenseActivationFailListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseActivationFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvLicenseAlgorithmListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvLicenseAlgorithmListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LicSrvUsedLicenseListPage type Namespace EasyITSystemCenter.Pages Summary LicSrvUsedLicenseListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. MainWindow type Namespace EasyITSystemCenter Summary MainWindow #ctor() constructor Summary System Core AND ALL shared functionalities Parameters This constructor has no parameters. lastUserAction constants Summary MainControls Screen Variables DataGridSelected property Summary Indicator for Enable New DataGrid Button DataGridSelectedIdListIndicator property Summary DataGrid have selected record indicator DgRefresh property Summary Indicator for enable Refresh Button Indicator DownloadShow property Summary Indicator for show Downloading area DownloadStatus property Summary Downloading of update status variable MultiSameTabsEnabled property Summary Enable/Disable MultiSameTabs Forms OperationRunning property Summary Indicator for mark operation status for any programmatic operations ProgressRing property Summary ProgressRing Visibility indicator RunReleaseMode property ServerLoggerSource property Summary System Logger Source Status and Controller This is status of Settings System Logger Source ServiceRunning property Summary Service Status description ServiceStatus property Summary Service Status public Variable ShowSystemLogger property Summary System Logger Activator by Setted Parametr Can be setted for All Apps or Every User individually SystemLogger property Summary System Online Logger for EASY developing UserLogged property Summary User Logged Status VncRunning property AddOrRemoveTab(headerName,tabPage,tagText) method Summary Tabs Pages control for Insert/Move/Change Pages Parameters Name Type Description headerName System.String tabPage System.Object tagText System.String BtnKeyboardClick(sender,e) method Summary System tools controllers Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs BtnShowLoggerClick(sender,e) method Summary Show System On line Logger Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_LaunchHelp_Click(sender,e) method Summary Help button controller for Show Help File Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_ShowModulePanel_Click(sender,e) method Summary Show Metro Theme possibilities Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Btn_about_click(sender,e) method Summary about applications information Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs CbFilterDropDownClosed(sender,e) method Summary Full dynamic apply sett ed filter Parameters Name Type Description sender System.Object e System.EventArgs CbPrintReportsSelected(sender,e) method Summary Print Report Selection Controller Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs FilterField_SelectionChanged(sender,e) method Summary Full dynamic set sign DataGrid advanced filter type Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadUserMenu() method Summary Load UserMenu After Login And Sort Parameters This method has no parameters. MainGrid_IsDraggingChanged(sender,e) method Summary Dragging and separate to more Applications: TabPanel drag Controller - not Used Parameters Name Type Description sender System.Object e System.Windows.RoutedPropertyChangedEventArgs{System.Boolean} MainWindow_Closing(sender,e) method Summary Applications Close Request Controller Parameters Name Type Description sender System.Object e System.ComponentModel.CancelEventArgs MainWindow_KeyDown(sender,e) method Summary MainWindow Keyboard pointer to Keyboard Central Application controller Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs MainWindow_Loaded(sender,e) method Summary Application Loaded Start Backend timer for check server set Theme Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs MainWindow_MouseLeave() method Summary Writing Last User action for monitoring Free Time Used by: SceenSaver Parameters This method has no parameters. Menu_action_Click(sender,e) method Summary THIS IS AUTOMATIC INCLUDE DATALIST VIEW MENU in FORMAT APIcallPage open or select existed TabPanel VERTICAL MENU - Copy and CHANGE ONLY Page Name AND Report CALL as /XXXX Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_filter_Click(sender,e) method Summary Full dynamic Show/Hidden DataGrid advanced Filter Menu Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs Mi_logout_Click(sender,e) method Summary Application Logout button Controller Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs RemoveFilterItem_Click(sender,e) method Summary Full dynamic Remove Item from DataGrid advanced Filter Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SetServiceStop() method Summary Server is unavailable All operations are blocked Parameters This method has no parameters. SetSystemModuleListPanel() method Summary Set System Module Content Parameters This method has no parameters. ShowLoginDialog() method Summary Application Login Dialog Parameters This method has no parameters. ShowMessageOnMainWindow(error,message,confirm) method Summary Central Application Message Dialog for All Info / Error / other messages for User Returns Parameters Name Type Description error System.Boolean message System.String confirm System.Boolean StringToFilter(filterBox,advancedFilter) method Summary Full dynamic build filter on selected page from saved advanced filter Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox advancedFilter System.String SystemLoggerSourceChanged_Click(sender,e) method Summary System Logger Source Selector Server Logger has Source From Client Settings by WebSocket URL Parameters Name Type Description sender System.Object The source of the event. e System.EventArgs The EventArgs instance containing the event data. SystemModulePanel_Click(sender,e) method Summary Open Selected System Module Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SystemTimerController(sender,e) method Summary Backend System Timer for check server connection Parameters Name Type Description sender System.Object e System.Timers.ElapsedEventArgs TabPanelOnSelectionChange(sender,e) method Summary Tab click selection change reload ID and Pointers for ListView Buttons Parameters Name Type Description sender System.Object The sender. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TiltOpenForm(translateHeader) method Summary Tilts: Standardized Opening or create Tilt documents Returns Parameters Name Type Description translateHeader System.String MathTypeOperations type Namespace EasyITSystemCenter.GlobalOperations CheckTypeValue() method Summary Global DataTypes Chwecker with Bool Result Used on System Parameters Parameters This method has no parameters. MediaOperations type Namespace EasyITSystemCenter.GlobalOperations ArrayToImage(array) method Summary Cresate Bitmap Image from DB array to Image for show preview Returns Parameters Name Type Description array System.Byte[] CreateImageFile(file,frame,fileType) method Summary Create More Image File Types NotUsed Parameters Name Type Description file System.IO.FileStream frame System.Windows.Media.Imaging.BitmapFrame fileType System.String GetImageImmediatelly(path) method Summary Important Closing connections of openned files by Form and binding this is solution for close oppened file after load Solution for All Files Parameters Name Type Description path System.String SaveAppScreenShot(MainWindow,returnArrayOnly) method Summary ScreenShot Function For Application Menu Tool If Return Array True, Image is returned in response Other Save Dialog is Opened Parameters Name Type Description MainWindow EasyITSystemCenter.MainWindow The main window. returnArrayOnly System.Boolean ProdGuidGroupListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidGroupListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidOperationListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPartListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPartListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidPersonListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidPersonListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ProdGuidWorkListPage type Namespace EasyITSystemCenter.Pages Summary ProdGuidWorkListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ReportSelection type Namespace EasyITSystemCenter.Classes Summary Report naming support Resources type Namespace EasyITSystemCenter.Properties Summary Třída prostředků se silnými typy pro vyhledávání lokalizovaných řetězců atp. Culture property Summary Potlačí vlastnost CurrentUICulture aktuálního vlákna pro všechna vyhledání prostředků pomocí třídy prostředků se silnými typy. ResourceManager property Summary Vrací instanci ResourceManager uloženou v mezipaměti použitou touto třídou. no_photo property Summary Vyhledává lokalizovaný prostředek typu System.Drawing.Bitmap. ScreenSaverPage type Namespace EasyITSystemCenter.Pages Summary ScreenSaverPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerBrowsablePathListPage type Namespace EasyITSystemCenter.Pages Summary ServerBrowsablePathListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerCorsDefAllowedOriginListPage type Namespace EasyITSystemCenter.Pages Summary ServerCorsDefAllowedOriginListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerHealthCheckTaskListPage type Namespace EasyITSystemCenter.Pages Summary ServerHealthCheckTaskListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerLiveDataMonitorListPage type Namespace EasyITSystemCenter.Pages Summary ServerLiveDataMonitorListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerModuleAndServiceListPage type Namespace EasyITSystemCenter.Pages Summary ServerModuleAndServiceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerSettingListPage type Namespace EasyITSystemCenter.Pages Summary ServerSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelDefinitionListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelDefinitionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolPanelListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolPanelListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. ServerToolTypeListPage type Namespace EasyITSystemCenter.Pages Summary ServerToolTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailTemplateListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailTemplateListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionEmailerHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SolutionEmailerHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionFailListPage type Namespace EasyITSystemCenter.Pages Summary SolutionFailListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionLanguageListPage type Namespace EasyITSystemCenter.Pages Summary SolutionLanguageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageModuleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMessageTypeListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMessageTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMixedEnumListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMixedEnumListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionMottoListPage type Namespace EasyITSystemCenter.Pages Summary SolutionMottoListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionOperationListPage type Namespace EasyITSystemCenter.Pages Summary SolutionOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionSchedulerListPage type Namespace EasyITSystemCenter.Pages Summary SolutionSchedulerListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionStaticFileListPage type Namespace EasyITSystemCenter.Pages Summary SolutionStaticFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionUserRoleListPage type Namespace EasyITSystemCenter.Pages Summary SolutionUserRoleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SolutionWebsiteListPage type Namespace EasyITSystemCenter.Pages Summary SolutionWebsiteListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SpTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Generated Class TableList from Stored Procedure SystemSpGetTableList Startup type Namespace EasyITSystemCenter Summary Local WebServwer Startup SupportPage type Namespace EasyITSystemCenter.Pages Summary SupportPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemCustomPageListPage type Namespace EasyITSystemCenter.Pages Summary SystemCustomPageListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentAdviceListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentAdviceListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemDocumentTypeListPage type Namespace EasyITSystemCenter.Pages Summary SystemDocumentTypeListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemIgnoredExceptionListPage type Namespace EasyITSystemCenter.Pages Summary SystemIgnoredExceptionListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemLocalEnumSets type Namespace EasyITSystemCenter.GlobalClasses SpecificationScriptTypes constants Summary TODO FOR MOVE TO MICRODIAL languages constants Summary Client Setting Offline enum of Languages sections constants Summary Client Setting offline enum Menu Groups updateVariants constants Summary Client Setting offline enum Updater States SystemLoggerHelper type Namespace EasyITSystemCenter.SystemHelper Summary System Logger Helper Defined Central WebSocket Monitor Controller SystemLoggerWebSocketClass type Namespace EasyITSystemCenter.SystemHelper Summary System Logger WebSocket Monitor Controller Class Definition For Centralized Using SystemLoginHistoryListPage type Namespace EasyITSystemCenter.Pages Summary SystemLoginHistoryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMenuListPage type Namespace EasyITSystemCenter.Pages Summary SystemMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemModuleListPage type Namespace EasyITSystemCenter.Pages Summary SystemModuleListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemMonitorPage type Namespace EasyITSystemCenter.Pages Summary SystemMonitorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationListPage type Namespace EasyITSystemCenter.Pages Summary SystemOperationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemOperationMessage type Namespace EasyITSystemCenter.GlobalClasses Summary Custom Definition for Returning List with One Record from Operation Stored Procedures SystemOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralised System Functions for work with Types, methods, Formats, Logic, supported methods FilterToString(filterBox) method Summary SYSTEM Advanced Filter Conversion for API return existing filter for saving to string in selected Page Returns Parameters Name Type Description filterBox System.Windows.Controls.ComboBox FirstLetterToLower(str) method Summary Change First Character of String Returns Parameters Name Type Description str System.String The string. GetExceptionMessages(exception,msgCount) method Summary Mining All Exception Information For Central System Logger Ignore Some selected Fails is possible by Ignored Exception Settings Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 GetExceptionMessagesAll(exception,msgCount) method Summary Mining All Exception Information For Local System Logger EveryTime Show All fails for Best Developing On Expert Level Returns Parameters Name Type Description exception System.Exception msgCount System.Int32 IncreaseFileVersionBuild() method Summary Automatic Increase version System Ideal for small systems with more release in 1 day Increase Windows Correct 3 position for Widows Installation In Debug is increase last 4 position Returns Parameters This method has no parameters. RandomString(length) method Summary Generate Random String with defined length Returns Parameters Name Type Description length System.Int32 The length. RemoveAppNamespaceFromString(stringForRemoveNamespace) method Summary Its Solution for this is a solution for demanding and multiplied servers Or Running SHARP and Test System By One Backend Server Service API Urls with Namespaces in Name are for Backend model with More Same Database Schemas Backend Databases count in One Server Service is Unlimited Parameters Name Type Description stringForRemoveNamespace System.String SendMailWithMailTo(address,subject,body,attach) method Summary System Mail sending Parameters Name Type Description address System.String subject System.String body System.String attach System.String SendMailWithServerSetting(message) method Summary Email Sender for send Direct Email by Server Configuration for Testing Parameters Name Type Description message System.String The message. SetLanguageDictionary(Resources,languageDefault) method Summary Settings Local Application Translation dictionaries (Resources Files) for Pages Will be replaced by DBDictionary, but for Offline Running must be possible Returns Parameters Name Type Description Resources System.Windows.ResourceDictionary languageDefault System.String StartExternalProccess(type,processCommand,startupPath,arguments) method Summary System External Process Starter for Conrtalized Using Return the processId when is started or null TODO create process Monitor save the monitored procceses to System Monitor must be refactored actual status Returns Parameters Name Type Description type System.String processCommand System.String startupPath System.String The startup path. arguments System.String The arguments. SystemParameterListPage type Namespace EasyITSystemCenter.Pages Summary SystemParameterListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemReportQueueListPage type Namespace EasyITSystemCenter.Pages Summary SystemReportQueueListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemStatuses type Namespace EasyITSystemCenter.GlobalClasses Summary !!SYSTEM Global Definition for System Statuses SYSTEM Running mode In debug mode is disabled the System Logger Visual Studio Debugger difficult operation has problem If you want you can enable SystemLogger by change to: DebugWithSystemLogger Its Used as String EveryWhere Its good Soution for Centarized Statuses of System Errors Are Saved In SystemLogger or Database SystemSvgIconListPage type Namespace EasyITSystemCenter.Pages Summary SystemSvgIconListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemTranslatedTableList type Namespace EasyITSystemCenter.GlobalClasses Summary Class for Using as customized list the List of API urls for Central using in the system One Api is One: Dataview / Right / Report Posibility / Menu Item / Page Exist rules for automatic processing in System Core Logic for simple Developing SystemTranslationListPage type Namespace EasyITSystemCenter.Pages Summary SystemTranslationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. SystemWindowDataModel type Namespace EasyITSystemCenter.SystemStructure #ctor() constructor Summary Its Solution For MultiInstance Application If The InterTab Is Enabled Can be Dragged Tab To the New Application Parameters This constructor has no parameters. TemplateClassListAutoDBTranslationPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListAutoDBTranslationWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListAutoDBTranslationWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListAutoDBTranslationWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateClassListPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListViewPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListViewPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithParentPage type Namespace EasyITSystemCenter.Pages Summary TemplateClassListWithParentPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateClassListWithSubPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemDelete_Click(sender,e) method Summary Standartized method for Direct Delete SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnItemInsert_Click(sender,e) method Summary Standartized method for Direct Insert SubRecord to SubListView Manual work needed, set correct data set for SubRecord This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. ClearItemsFields() method Summary Standartized Method for Clear SubRecord Input Fields with custom Dataset For Correct Using must be Fields changed for used dataset Parameters This method has no parameters. Customer_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. NotesChanged(sender,e) method Summary Standartized Maximal Simle Code with Reaction and Fill input After ParentComboboxSelection Parameters Name Type Description sender System.Object e System.Windows.Controls.SelectionChangedEventArgs PartNumberGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs PartNumber_KeyDown(sender,e) method Summary Standartized method for Keyboard control of SelectBox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectCustomer_Enter(sender,e) method Summary Standartized methods with Indicate Customer Selection and Start Filling Input This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.Input.KeyEventArgs SelectGotFocus(sender,e) method Summary Standartized method indicate start loading all data of SubRecord after Selected in Combobox This is full automatic, not needed manual work Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs SelectPartNumber_Enter(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Input.KeyEventArgs The KeyEventArgs instance containing the event data. SetCustomer() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetPartNumber() method Summary Standartized methods For Filling Input after Selection This is full automatic, not needed manual work Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. SetSubListsNonActiveOnNewItem() method Summary Standartized Method for Load All SubData which is needed for Working with SubRecord For Correct Using must be changed for actual datasets Parameters This method has no parameters. UpdateCustomerSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. UpdatePartNumberSearchResults() method Summary Standartized method Filling Customer Input by Selected Value This is full automatic, not needed manual work Parameters This method has no parameters. dgSubListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on page With Sublist ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. TemplateClassListWithSubViewPage type Namespace EasyITSystemCenter.Pages Summary This standartized Template is only for list view od Data table Called from MainWindow.cs on open New Tab #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data and selected record for All Pages this method is for global working with pages Called from MainWindow.cs for Control of Button Menu and Selections (Report,Filter and more) All is setted as global Classes for All Pages and Work is Fully automatized by System core HERE you Define All Data Variables For This Form BtnCancel_Click(sender,e) method Summary Standartized method for cancel of Editing. Hide Detail and Dataview List is Shown This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. BtnSave_Click(sender,e) method Summary Standartized method for Save Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction FORM to SELECTED RECORD By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. DeleteRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Delete button Click Show MainWindow Standartized Message with info About Delete and After confirm Send DeleteApiRequest Reload Datalist and cancel Selected Record Parameters This method has no parameters. DgListView_MouseDoubleClick(sender,e) method Summary Standartized method for selecting and opening Detail Form. This is only View Page, that is only for Select record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object e System.Windows.Input.MouseButtonEventArgs DgListView_SelectionChanged(sender,e) method Summary Standartized method for select one record only. This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.Controls.SelectionChangedEventArgs The SelectionChangedEventArgs instance containing the event data. DgListView_Translate(sender,ex) method Summary Standartized method for translating column names of DatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs DgSubListView_Translate(sender,ex) method Summary Standartized method for translating column names of SubDatagidView (List Data) Manual Changing is needed for set Translate of Column Names via Dictionary Items Here you can set Format(Date,time, etc),Index position, Hide Column, Translate, change grahics Style This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with page internal reaction on DatagrigView DataFiling on Start Page Runned On Page Loading Parameters Name Type Description sender System.Object ex System.EventArgs EditRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on Edit button Click Only Set Record And Hide Dataview and Show Detail with selected Record Parameters This method has no parameters. Filter(filter) method Summary Standartized method for searching match in setted columns. Searched value is from the simple 'Search Input' for DatagidView (List Data) Manual Changing is needed of filtered columns by Search Value This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs Dynamicaly Called Only from MainWindow.cs when Search value Inserted Parameters Name Type Description filter System.String Fixed_Checked(sender,e) method Summary Standartized method for Loading Data for Selected Record This is full automatic, not needed manual work This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working page its local control From XAML Parameters Name Type Description sender System.Object The source of the event. e System.Windows.RoutedEventArgs The RoutedEventArgs instance containing the event data. InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. LoadDataList() method Summary Standartized Method for Loading data. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. LoadSubDataList() method Summary Standartized Method for Loading SubData. Manual Changing is needed for simple form is All changed By CLASNAME Chage, but If you need More API data for selection Here are Defined All incoming Data Loading is same centralized only change ClasName For Diferent Dataset After all data for DatagridView (List Data) are loaded The ProgressRing is hidden This is on Every page ('View' and 'Form' Types) without 'Setting' Type (Name=Setting and Tag=Setting in XAML part) this method is for global working with pages Called from MainWindow.cs on Refresh button click Runned on Pageloading or Filter or View Change Returns Parameters This method has no parameters. NewRecord() method Summary Standartized Method on All Pages with Forms for New Record ALL Needed changes Are done By Replace CLASSNAME not needed manual work Dynamicaly Called Only from MainWindow.cs on New button Click Only Set Record And Hide Dataview and Show Detail Parameters This method has no parameters. SetRecord(showForm,copy) method Summary Standartized method for ¨Set New Record/ Edit Record / Copy Record And return to Dataview. Manual work need, Here is Join Betwen XAML inputs and Selected Record Dataset (dataset for Detail): Direction Selected record to FORM By ClasName Replacing All other changes are automaticaly (API,DatasetType), just must define and control Each Field Of Dataset this method is for global working page its local control From XAML In this type Form Here Are loaded Data for SublistView (on knows selected record for correct join) Parameters Name Type Description showForm System.Nullable{System.Boolean} if set to true [show form]. copy System.Boolean if set to true [copy]. TemplateDocumentViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For View document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSTLPage type Namespace EasyITSystemCenter.Pages Summary TemplateSTLPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateSettingsPage type Namespace EasyITSystemCenter.Pages Summary TemplateSettingsPage #ctor() constructor Summary Initialize page with loading Dictionary and start loding data Manual work needed Translate All XAML fields by Resources Runned on start Parameters This constructor has no parameters. Languages constants Summary Define Collection For Combobox dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages BtnApiTest_Click(sender,e) method Summary Customized GET Call Parameters Name Type Description sender System.Object e System.Windows.RoutedEventArgs InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateVideoPage type Namespace EasyITSystemCenter.Pages Summary TemplateVideoPage dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TemplateWebViewPage type Namespace EasyITSystemCenter.Pages Summary Template Page For internet pages document, pictures, text and and much more file formats opened in WebViewer #ctor() constructor Summary Initialize page with loading Dictionary and direct show example file Parameters This constructor has no parameters. dataViewSupport constants Summary Standartized declaring static page data for global vorking with pages InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. TextBoxBehavior type Namespace EasyITSystemCenter.ProgramaticXamlBehaviors Summary TextBox Behavior SelectAll on Focus Example of Link in XAML xmlns:behaviors=\"clr-namespace:EasyITSystemCenter.ProgramaticXamlBehaviors\" in TextBox Add behaviors:TextBoxBehavior.SelectAllTextOnFocus=\"True\" TiltTargets type Namespace EasyITSystemCenter.GlobalClasses Summary Tilt Document Types Definitions ToolsOperations type Namespace EasyITSystemCenter.GlobalOperations Summary Centralized Library With Extension Functions Of Exterrnal Tools AvalonEditorFindText(searchQuery,foundedIndex,textEditor,ignoreCaseSensitive) method Summary Avaloneditor Content Search Function With HighLight Parameters Name Type Description searchQuery System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean AvalonEditorReplaceText(sourceString,targetString,foundedIndex,textEditor,ignoreCaseSensitive,selectedonly) method Summary AvalonEditor Replace Matched Strings in Editor Parameters Name Type Description sourceString System.String targetString System.String foundedIndex System.Int32@ textEditor ICSharpCode.AvalonEdit.TextEditor@ ignoreCaseSensitive System.Boolean selectedonly System.Boolean UpdateVariant type Namespace EasyITSystemCenter.GlobalClasses Summary Global class for using Name/Value - Example Reports, Language and others UserData type Namespace EasyITSystemCenter.GlobalClasses Summary Basic user data for login WebBannedIpAddressListPage type Namespace EasyITSystemCenter.Pages Summary WebBannedIpAddressListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeEditorPage type Namespace EasyITSystemCenter.Pages Summary WebCodeEditorPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebCoreFileListPage type Namespace EasyITSystemCenter.Pages Summary WebCoreFileListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDeveloperNewsListPage type Namespace EasyITSystemCenter.Pages Summary WebDeveloperNewsListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationCodeLibraryListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationCodeLibraryListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebDocumentationListPage type Namespace EasyITSystemCenter.Pages Summary WebDocumentationListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGlobalPageBlockListPage type Namespace EasyITSystemCenter.Pages Summary WebGlobalPageBlockListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebGroupMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebGroupMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebMenuListPage type Namespace EasyITSystemCenter.Pages Summary WebMenuListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebModulePage type Namespace EasyITSystemCenter.Pages Summary WebModulePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebSettingListPage type Namespace EasyITSystemCenter.Pages Summary WebSettingListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WebVisitIpListPage type Namespace EasyITSystemCenter.Pages Summary WebVisitIpListPage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters. WelcomePage type Namespace EasyITSystemCenter.Pages Summary WelcomePage InitializeComponent() method Summary InitializeComponent Parameters This method has no parameters."
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocConfiguration.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocConfiguration.html",
    "title": "Using Configurations",
    "keywords": "Using Configurations in application is simple config/config.js file Hre you set One of 3 Modes for Using Editor Run in 3 Modes - Standalone Editor - direct download file from URL/Editor. Static Spa. Need Run from SecuritedWeb - Cors - filesEditor - Manager Loading directly files from \"data\" folder, setted in config - Managing documentations with manually rewrite exported files - apiManager - Managing Api docs from Server with automatic versioning, Using Modern Features & Ideas Expert editor for managing each type Markdown Documentation Extended for multiMedia using Graphs, Structures, etc for unlimited simple Using You can Define Custom Default Template You can Export Html, Pdf file with Any Language only one language Mardown file for Automatic Online Translation / Export to ALL Languages Can be used Offline, Only tlanslating in offline mode is not available Automatic Versioning of Files Open immediatelly write every Changes by each User Automatic Translating can build Universal Web for Doc Viewer. Need only Copy to Web Server for Publishing Automatic Multilingual Exporting Pdf and HTML. MD is in One Language - More Languages Not Needed By Auto Translation Only Api mode automatic Update Source Files (accesible from DB) other modes you must Export and replace Manually Can be Used for Documentations of Processes, Flows, Project, Developing of Everythink, Easy Way for Updating for Requested News by Clients With Generated Summary.md Will be CONVERT TO Doc Book with FullText Seraching and published as WebPages Running as Standalone Application, All OS Support Run By click on index.hml -- Static Pages, WebPages, PC Application Full Code is Available for Buy and unlimited Developing EASY Configurations Can run by Click on index.html Static Pages directly as EASY Media Editor Configuration Standalone is for Manage/Show Saved files Configuration Api is for Manage/Show Api files with Automatic Versioning configuration class definition { Name,AutoVersion,Description,TimeStamp} !!! Select One Of Settings Option !!! Run Only First setted Variant !!! FilesEditor Variant // default [] // example ['test.md','test1.md'] let ConfigFiles = ['helpFullEn.md','help_en.md','MerMaid.md']; Api Documentation Manager Variant let ConfigApiServer = { BasicAuthLoginName: 'tester', BasicAuthLoginPassword: 'tester', ServerApiAddress: 'http:127.0.0.1:5000' } Standalone Offine/Online/StaticSpa/RunByClick Editor Variant // its only Load MarkDown file from URL for Modify and Export // Cors need running Https // default null // example \"https://some.com/makdown.md\" let ConfigUrlMdFile = \"https://kliknetezde.cz:5000/tools/EDC_ESB_InteliHelp/src/README.md\"; Additional Configurations // Default Template file from \"config\" Folder let ConfigDefaultTemplate = \"defaultTemplate.md\"; // Automatic Export file on saving to memory let ConfigExportFileOnSaving = true; //Enable Creting new doc (API - full process, FileManager Creation) let ConfigEnableCreateNewDoc = true; // System message Show Time let ConfigSystemMessageShowTime = 5; //Its needed for multiple export let ConfigMermaidConvertOnExport = true; //TODO not used let ConfigSelectedLanguages = ['cs','en','de','fr']; // Preparing Time for Multiple Export let ConfigWaitingTimeInterval = 10; // Enablwe Automatic Translation on Startup let ConfigAutoMultiTranslateEnabled = true; // Return to Language After Multi Translation let ConfigReturnToLanguage = 'en'; Developer Using //show original help $(\"#Mavon\")[0].__vue__.s_help = true //mavon toolbar control $(\"#Mavon\")[0].__vue__.$root.toolbar.save = false //WebServer Configuration https://www.npmjs.com/package/http-server Developer Next Implement Visions TODO mermaid.mermaidAPI.getConfig() posibilities Now Shown FEW Examples of Creation Sctructures Documentations Headers # h1 Heading 8-) ## h2 Heading ### h3 Heading #### h4 Heading ##### h5 Heading ###### h6 Heading Alternatively, for H1 and H2, an underline-ish style: Alt-H1 ====== Alt-H2 ------ h1 Heading 8-) h2 Heading h3 Heading h4 Heading h5 Heading h6 Heading Alternatively, for H1 and H2, an underline-ish style: Alt-H1 Alt-H2 Emphasis Emphasis, aka italics, with *asterisks* or _underscores_. Strong emphasis, aka bold, with **asterisks** or __underscores__. Combined emphasis with **asterisks and _underscores_**. Strikethrough uses two tildes. ~~Scratch this.~~ **This is bold text** __This is bold text__ *This is italic text* _This is italic text_ ~~Strikethrough~~ Emphasis, aka italics, with asterisks or underscores. Strong emphasis, aka bold, with asterisks or underscores. Combined emphasis with asterisks and underscores. Strikethrough uses two tildes. Scratch this. This is bold text This is bold text This is italic text This is italic text Strikethrough Lists 1. First ordered list item 2. Another item ??* Unordered sub-list. 1. Actual numbers don't matter, just that it's a number ??1. Ordered sub-list 4. And another item. ???You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ???To have a line break without a paragraph, you will need to use two trailing spaces.?? ???Note that this line is separate, but within the same paragraph.?? ???(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) * Unordered list can use asterisks - Or minuses + Or pluses 1. Make my changes 1. Fix bug 2. Improve formatting - Make the headings bigger 2. Push my commits to GitHub 3. Open a pull request * Describe my changes * Mention all the members of my team * Ask for feedback + Create a list by starting a line with `+`, `-`, or `*` + Sub-lists are made by indenting 2 spaces: - Marker character change forces new list start: * Ac tristique libero volutpat at + Facilisis in pretium nisl aliquet - Nulla volutpat aliquam velit + Very easy! First ordered list item Another item ??* Unordered sub-list. Actual numbers don't matter, just that it's a number ??1. Ordered sub-list And another item. ???You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown). ???To have a line break without a paragraph, you will need to use two trailing spaces.?? ???Note that this line is separate, but within the same paragraph.?? ???(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.) Unordered list can use asterisks Or minuses Or pluses Make my changes Fix bug Improve formatting Make the headings bigger Push my commits to GitHub Open a pull request Describe my changes Mention all the members of my team Ask for feedback Create a list by starting a line with +, -, or * Sub-lists are made by indenting 2 spaces: Marker character change forces new list start: Ac tristique libero volutpat at Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Very easy! Task lists - [x] Finish my changes - [ ] Push my commits to GitHub - [ ] Open a pull request - [x] @mentions, #refs, [links](), **formatting**, and <del>tags</del> supported - [x] list syntax required (any unordered or ordered list supported) - [x] this is a complete item - [ ] this is an incomplete item [x] Finish my changes [ ] Push my commits to GitHub [ ] Open a pull request [x] @mentions, #refs, links, formatting, and tags supported [x] list syntax required (any unordered or ordered list supported) [ ] this is a complete item [ ] this is an incomplete item Ignoring Markdown formatting You can tell GitHub to ignore (or escape) Markdown formatting by using \\ before the Markdown character. Let's rename \\*our-new-project\\* to \\*our-old-project\\*. Let's rename *our-new-project* to *our-old-project*. Links [I'm an inline-style link](https://www.google.com) [I'm an inline-style link with title](https://www.google.com \"Google's Homepage\") [I'm a reference-style link][Arbitrary case-insensitive reference text] [I'm a relative reference to a repository file](../blob/master/LICENSE) [You can use numbers for reference-style link definitions][1] Or leave it empty and use the [link text itself]. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or <http://www.example.com> and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later. [arbitrary case-insensitive reference text]: https://www.mozilla.org [1]: http://slashdot.org [link text itself]: http://www.reddit.com I'm an inline-style link I'm an inline-style link with title I'm a reference-style link I'm a relative reference to a repository file You can use numbers for reference-style link definitions Or leave it empty and use the link text itself. URLs and URLs in angle brackets will automatically get turned into links. http://www.example.com or http://www.example.com and sometimes example.com (but not on Github, for example). Some text to show that the reference links can follow later. Images Here's our logo (hover to see the title text): Inline-style: ![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\") Reference-style: ![alt text][logo] [logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\" ![Minion](https://octodex.github.com/images/minion.png) ![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") Like links, Images also have a footnote style syntax ![Alt text][id] With a reference later in the document defining the URL location: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" Here's our logo (hover to see the title text): Inline-style: Reference-style: Like links, Images also have a footnote style syntax With a reference later in the document defining the URL location: Footnotes Footnote 1 link[^first]. Footnote 2 link[^second]. Inline footnote^[Text of inline footnote] definition. Duplicated footnote reference[^second]. [^first]: Footnote **can have markup** and multiple paragraphs. [^second]: Footnote text. Footnote 1 link1. Footnote 2 link2. Inline footnote^[Text of inline footnote] definition. Duplicated footnote reference2. Code and Syntax Highlighting Inline `code` has `back-ticks around` it. Inline code has back-ticks around it. using System.IO.Compression; #pragma warning disable 414, 3021 namespace MyApplication { [Obsolete(\"...\")] class Program : IInterface { public static List<int> JustDoIt(int count) { Console.WriteLine($\"Hello {Name}!\"); return new List<int>(new int[] { 1, 2, 3 }) } } } @font-face { font-family: Chunkfive; src: url('Chunkfive.otf'); } body, .usertext { color: #F0F0F0; background: #600; font-family: Chunkfive, sans; } @import url(print.css); @media print { a[href^=http]::after { content: attr(href) } } function $initHighlight(block, cls) { try { if (cls.search(/\\bno\\-highlight\\b/) != -1) return process(block, true, 0x0F) + ` class=\"${cls}\"`; } catch (e) { /* handle exception */ } for (var i = 0 / 2; i < classes.length; i++) { if (checkCondition(classes[i]) === undefined) console.log('undefined'); } } export $initHighlight; require_once 'Zend/Uri/Http.php'; namespace Location\\Web; interface Factory { static function _factory(); } abstract class URI extends BaseURI implements Factory { abstract function test(); public static $st1 = 1; const ME = \"Yo\"; var $list = NULL; private $var; /** * Returns a URI * * @return URI */ static public function _factory($stats = array(), $uri = 'http') { echo __METHOD__; $uri = explode(':', $uri, 0b10); $schemeSpecific = isset($uri[1]) ? $uri[1] : ''; $desc = 'Multi line description'; // Security check if (!ctype_alnum($scheme)) { throw new Zend_Uri_Exception('Illegal scheme'); } $this->var = 0 - self::$st; $this->list = list(Array(\"1\"=> 2, 2=>self::ME, 3 => \\Location\\Web\\URI::class)); return [ 'uri' => $uri, 'value' => null, ]; } } echo URI::ME . URI::$st1; __halt_compiler () ; datahere datahere datahere */ datahere Tables Colons can be used to align columns. | Tables | Are | Cool | | ------------- |:-------------:| -----:| | col 3 is | right-aligned | $1600 | | col 2 is | centered | $12 | | zebra stripes | are neat | $1 | There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown | Less | Pretty --- | --- | --- *Still* | `renders` | **nicely** 1 | 2 | 3 | First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell | | Command | Description | | --- | --- | | git status | List all new or modified files | | git diff | Show file differences that haven't been staged | | Command | Description | | --- | --- | | `git status` | List all *new or modified* files | | `git diff` | Show file differences that **haven't been** staged | | Left-aligned | Center-aligned | Right-aligned | | :--- | :---: | ---: | | git status | git status | git status | | git diff | git diff | git diff | | Name | Character | | --- | --- | | Backtick | ` | | Pipe | \\| | Colons can be used to align columns. Tables Are Cool col 3 is right-aligned $1600 col 2 is centered $12 zebra stripes are neat $1 There must be at least 3 dashes separating each header cell. The outer pipes (|) are optional, and you don't need to make the raw Markdown line up prettily. You can also use inline Markdown. Markdown Less Pretty Still renders nicely 1 2 3 First Header Second Header Content Cell Content Cell Content Cell Content Cell Command Description git status List all new or modified files git diff Show file differences that haven't been staged Command Description git status List all new or modified files git diff Show file differences that haven't been staged Left-aligned Center-aligned Right-aligned git status git status git status git diff git diff git diff Name Character Backtick ` Pipe | Blockquotes > Blockquotes are very handy in email to emulate reply text. > This line is part of the same quote. Quote break. > This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote. > Blockquotes can also be nested... >> ...by using additional greater-than signs right next to each other... > > > ...or with spaces between arrows. Blockquotes are very handy in email to emulate reply text. This line is part of the same quote. Quote break. This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote. Blockquotes can also be nested... ...by using additional greater-than signs right next to each other... ...or with spaces between arrows. Inline HTML <dl> <dt>Definition list</dt> <dd>Is something people use sometimes.</dd> <dt>Markdown in HTML</dt> <dd>Does *not* work **very** well. Use HTML <em>tags</em>.</dd> </dl> Definition list Is something people use sometimes. Markdown in HTML Does *not* work **very** well. Use HTML tags. Horizontal Rules Three or more... --- Hyphens *** Asterisks ___ Underscores Three or more... Hyphens Asterisks Underscores YouTube Videos <a href=\"http://www.youtube.com/watch?feature=player_embedded&v=YOUTUBE_VIDEO_ID_HERE\" target=\"_blank\"> <img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\" alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\"> </a> [![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE) All Documentation Graphics Code Posibilities Full documentation Codes and posibilities are on MerMaid All Codes needs Copy / Paste Only of codes to code block erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" flowchart LR a --> b & c--> d flowchart LR a --> b & c--> d sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts <br/>prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d classDiagram Class01 <|-- AveryLongClass : Cool Class03 -- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 -- C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label classDiagram Class01 <|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label gitGraph commit commit branch develop commit commit commit checkout main commit commit gitGraph commit commit branch develop commit commit commit checkout main commit commit erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! title: Animal example classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } --- title: Animal example --- classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (excludes accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness<br/>and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest config: sankey: showValues: false sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 --- config: sankey: showValues: false --- sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end Footnote can have markup and multiple paragraphs.↩ Footnote text.↩↩"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDockonfigurace.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDockonfigurace.html",
    "title": "Použití konfigurací",
    "keywords": "Použití konfigurací v aplikaci je jednoduchý soubor config/config.js Zde nastavíte jeden ze 3 režimů použití Editor běží ve 3 režimech - Samostatný editor - přímé stažení souboru z URL/Editoru. Statické lázně. Need Run from SecuritedWeb - Cors - filesEditor - Manager Přímé načítání souborů ze složky \"data\", nastavená v config - Správa dokumentace s ručně přepisovanými exportovanými soubory - apiManager - Správa dokumentů Api ze serveru s automatickým verzováním, Používání moderních funkcí a nápadů Expertní editor pro správu každého typu Markdown Documentation Rozšířeno pro multimédia pomocí grafů, struktur atd. pro neomezené jednoduché použití Můžete definovat vlastní výchozí šablonu Můžete exportovat Html, Pdf soubor s libovolným jazykem pouze jeden jazykový soubor Mardown pro automatický online překlad / export do VŠECH jazyků Lze použít offline, pouze tlanslating v režimu offline není k dispozici Automatické verzování souborů Otevřít okamžitě zapsat všechny změny každým uživatelem Automatický překlad může vytvořit Universal Web pro Doc Viewer. Pro publikování potřebujete pouze Kopírovat na webový server Automatický vícejazyčný export PDF a HTML. MD je v jednom jazyce – automatický překlad nepotřebuje více jazyků Pouze režim Api automaticky aktualizuje zdrojové soubory (přístupné z DB), ostatní režimy musíte exportovat a nahradit ručně Může být použit pro dokumentaci procesů, toků, projektů, vývoje všeho, Snadný způsob aktualizace požadovaných novinek ze strany klientů S Generated Summary.md bude PŘEVEDEN NA DOKUMENTÁCI s fulltextovým vyhledáváním a publikován jako webové stránky Spuštění jako samostatná aplikace, Veškerá podpora OS Spustit kliknutím na index.hml -- Statické stránky, webové stránky, PC aplikace Celý kód je k dispozici pro nákup a neomezený vývoj SNADNÉ konfigurace Lze spustit kliknutím na index.html Statické stránky přímo jako EASY Media Editor Samostatná konfigurace je pro správu/zobrazení uložených souborů Configuration Api je pro správu/zobrazování souborů Api s automatickým verzováním definice konfigurační třídy { Name,AutoVersion,Description,TimeStamp} -!!! Vyberte jednu z možností nastavení!!! Spustit pouze první nastavenou variantu !!! Varianta FilesEditor // výchozí [] // příklad ['test.md','test1.md'] let ConfigFiles = ['helpFullEn.md','help_en.md','MerMaid.md']; Varianta Api Documentation Manager nech ConfigApiServer = { BasicAuthLoginName: 'tester', BasicAuthLoginPassword: 'tester', ServerApiAddress: 'http:127.0.0.1:5000' } Samostatná varianta editoru Offine/Online/StaticSpa/RunByClick // jeho jediné Načtení souboru MarkDown z adresy URL pro úpravy a export // Cors potřebuje spustit Https // výchozí null // příklad \"https://some.com/makdown.md\" let ConfigUrlMdFile = \"https://kliknetezde.cz:5000/tools/EDC_ESB_InteliHelp/src/README.md\"; Další konfigurace // Výchozí soubor šablony ze složky \"config\". let ConfigDefaultTemplate = \"defaultTemplate.md\"; // Automatický export souboru při uložení do paměti let ConfigExportFileOnSaving = true; //Povolit vytvoření nového dokumentu (API - úplný proces, vytvoření správce souborů) let ConfigEnableCreateNewDoc = true; // Systémová zpráva Zobrazit čas let ConfigSystemMessageShowTime = 5; //Je potřeba pro vícenásobný export let ConfigMermaidConvertOnExport = true; //TODO se nepoužívá let ConfigSelectedLanguages = ['cs','en','de','fr']; // Čas přípravy na vícenásobný export nech ConfigWaitingTimeInterval = 10; // Povolení automatického překladu při spuštění nech ConfigAutoMultiTranslateEnabled = true; // Návrat do jazyka po vícenásobném překladu let ConfigReturnToLanguage = 'en'; Použití vývojáře //zobrazit původní nápovědu $(\"#Mavon\")[0].__vue__.s_help = pravda //ovládání panelu nástrojů mavon $(\"#Mavon\")[0].__vue__.$root.toolbar.save = false //Konfigurace webového serveru https://www.npmjs.com/package/http-server"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocumentWebServerCZ.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocumentWebServerCZ.html",
    "title": "",
    "keywords": "Portál dynamické multimediální dokumentace Tento bohatý modul s Web Expert Manager & Viewer a Server je univerzální řešení pro SNADNOU správu jakékoli dokumentace Můžete vytvořit jakoukoli multimediální webovou publikaci vaší dokumentace A naprosto snadná správa všech vašich informací Možnosti správy dokumentace Vícejazyčné - Automatické překlady Vyřešte svůj dokument do všech jazyků jazyků AutoVersionig - Poslední aktualizace automatického verzování s informacemi Historie změn – všechny staré změny jsou uloženy AutoCleaningHistory - Můžete povolit ukládání pouze poslední verze MultiMedial Web Editor - MultiMedia Web Editor & Viewer jsou zahrnuty MultiMedial WINDWS Editor - Multimediální systém Windows je zahrnut Kompletní dokumentace k formátování - přes automatický překlad máte všechny informace o možnostech SNADNÉ Knihovna kódů a formátů – Všechny informace můžete spravovat prostřednictvím knihovny kódů Všechny jazyky Word jsou možné Export všech vybraných jazyků do vybraného formátu jedním kliknutím Automatická konverze na webové stránky HTML Automatický převod na soubory dokumentace MD Automatický převod na obrázky Jazykové možnosti dokumentace Možnosti formování dokumentace Dokumentace Možnosti automatického exportu Web Manager má funkci MultiExport Pro export ve všech jazycích a dalších formátech Úplnou dokumentaci můžete exportovat jedním kliknutím do více vybraných jazyků ve vybraném formátu... Máte připravená data během několika sekund jedním kliknutím Po exportu lze použít jako: - Přizpůsobte MultiMedial Webportal -Automaticky generovaný MD Inteligentní fultextový vyhledávací webový portál - Soubory webových stránek HTML pro vložení na jiné webové stránky, sociální sítě, e-mail, - Soubory dokumentace MD pro vložení na jiné webové stránky, sociální sítě, e-mail, - Soubory obrázků pro vložení na jiné webové stránky, sociální sítě, e-mail, Dokumentace Možnosti webového portálu"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocumentWebServerEN.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ExpertDocumentWebServerEN.html",
    "title": "",
    "keywords": "Server Dynamic MultiMedial Documentation Portal This rich module with Web Expert Manager & Viewer And Server is Universal Solution For EASY Managing Any Documentation You Can create Any MultiMedial Web Publication of Your Documentation And absolute easy Manage All your Informations Documentation Managing Posibilities MultiLingual - Automatic Translations Solve Your Doc To All words Languages AutoVersionig - Automatic Versioning With Info last update Changes History - All Old Changes are saved AutoCleaningHistory - You can Enable Saving Only Last Version MultiMedial Web Editor - MultiMedia Web Editor& Viewer are Included MultiMedial WINDWS Editor - Multimedial Windows System are Included Full Formating Documentation - Over Automatic translating yo have all info about posibilities EASY Codes&Formatin Library - You can manage All Info over Code Library All Word Languages are possible All Selected Languages to Selected Format Export by One Click Auto convert to Html Webpages Auto convert to MD Documentation files Auto convert to Images Documentation Languages Posibilities Documentation Formating Posibilities Documentation AUTO Exporting Posibilities Web Manager has MultiExport functionality For Exporting in Any Languages and More Formats You can Export FullDocumentation By One Click To More Selected Languages in Selected Format... You have Prepared Data in Few Second By One Click After Export can Be used as: - Customize MultiMedial Webportal -Auto Generated MD Inteligent Fultext Search Documentation Web Portal - HTML Webpage Files for Insert to Another WebPages, Social, Email, - MD Documentation Files for Insert to Another WebPages, Social, Email, - Images Files for Insert to Another WebPages, Social, Email, Documentation Web Portal Posibilities"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/GlobálníFunkce.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/GlobálníFunkce.html",
    "title": "",
    "keywords": "Typy Globálních Operací/Funkcí Datové Operace DB Operace Souborové Operace Hardwarové Operace Matematické Operace Mediální Operace Systémové Operace IMPLEMENTED TOOLS 05.12.23 Automatický Překlad Fpopisů Formuláře Vznikla první agenda s automaticky překládanými poli Úkol, aktualizovat všechny existující aonliner agendy na automatický překlad - Automatický Překlad sbírá pomocí funkce \"TranslateFormFields\" všechny Popisky-LAbel typy a Button Tlačítka Typy a překládá je oproti DB překladovému seznamu - Odpadá nutnost vupisovat typy polí - POZOR toto je možné jen preo ONLINE AGENDY seznam je načítaný ze serveru - Další Varianta Překladu je pomocí ruční definice popisku z názvu - použije \"fileType\" pro překlad *DBOperations.DBTranslation(lbl_fileType.Name.Split('_')[1]) nebo přes lokální Slovníky \"Languages\" pro použití OffLine * lbl_fileType.Content = Resources[\"fileType\"].ToString() - Menu je Celé kromě volby Nastavení Klienta zmeněno na automatický překlad DB slovníku - Odpadá nutnost kvůli nové online agendě importovat slovníky - Slovníky lze Generovat z Backendu a Vložit Do projektu Systému pro Offline Použití - Použité Jazyky CS,EN, neomezená možnost jednoduchého rozšíření Lang Tabulky"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/GrafickéUkázky.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/GrafickéUkázky.html",
    "title": "",
    "keywords": "All Documentation Graphics Code Posibilities Full documentation Codes and posibilities are on MerMaid All Codes needs Copy / Paste Only of codes to code block erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" erDiagram CUSTOMER }|..|{ DELIVERY-ADDRESS : has CUSTOMER ||--o{ ORDER : places CUSTOMER ||--o{ INVOICE : \"liable for\" DELIVERY-ADDRESS ||--o{ ORDER : receives INVOICE ||--|{ ORDER : covers ORDER ||--|{ ORDER-ITEM : includes PRODUCT-CATEGORY ||--|{ PRODUCT : contains PRODUCT ||--o{ ORDER-ITEM : \"ordered in\" flowchart LR a --> b & c--> d flowchart LR a --> b & c--> d sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram participant Alice participant Bob Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts <br/>prevail! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d gantt dateFormat YYYY-MM-DD title Adding GANTT diagram to mermaid excludes weekdays 2014-01-10 section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d classDiagram Class01 <|-- AveryLongClass : Cool Class03 -- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 -- C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label classDiagram Class01 <|-- AveryLongClass : Cool Class03 *-- Class04 Class05 o-- Class06 Class07 .. Class08 Class09 --> C2 : Where am i? Class09 --* C3 Class09 --|> Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla Class08 <--> C2: Cool label gitGraph commit commit branch develop commit commit commit checkout main commit commit gitGraph commit commit branch develop commit commit commit checkout main commit commit erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses erDiagram CUSTOMER ||--o{ ORDER : places ORDER ||--|{ LINE-ITEM : contains CUSTOMER }|..|{ DELIVERY-ADDRESS : uses journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me journey title My working day section Go to work Make tea: 5: Me Go upstairs: 3: Me Do work: 1: Me, Cat section Go home Go downstairs: 5: Me Sit down: 5: Me quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] quadrantChart title Reach and engagement of campaigns x-axis Low Reach --> High Reach y-axis Low Engagement --> High Engagement quadrant-1 We should expand quadrant-2 Need to promote quadrant-3 Re-evaluate quadrant-4 May be improved Campaign A: [0.3, 0.6] Campaign B: [0.45, 0.23] Campaign C: [0.57, 0.69] Campaign D: [0.78, 0.34] Campaign E: [0.40, 0.34] Campaign F: [0.35, 0.78] flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end flowchart TB c1-->a2 subgraph one a1-->a2 end subgraph two b1-->b2 end subgraph three c1-->c2 end sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram box Purple Alice & John participant A participant J end box Another Group participant B participant C end A->>J: Hello John, how are you? J->>A: Great! A->>B: Hello Bob, how is Charly ? B->>C: Hello Charly, how are you? sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! sequenceDiagram autonumber Alice->>John: Hello John, how are you? loop Healthcheck John->>John: Fight against hypochondria end Note right of John: Rational thoughts! John-->>Alice: Great! John->>Bob: How about you? Bob-->>John: Jolly good! title: Animal example classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } --- title: Animal example --- classDiagram note \"From Duck till Zebra\" Animal <|-- Duck note for Duck \"can fly\\ncan swim\\ncan dive\\ncan help in debugging\" Animal <|-- Fish Animal <|-- Zebra Animal : +int age Animal : +String gender Animal: +isMammal() Animal: +mate() class Duck{ +String beakColor +swim() +quack() } class Fish{ -int sizeInFeet -canEat() } class Zebra{ +bool is_wild +run() } classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) classDiagram classA --|> classB : Inheritance classC --* classD : Composition classE --o classF : Aggregation classG --> classH : Association classI -- classJ : Link(Solid) classK ..> classL : Dependency classM ..|> classN : Realization classO .. classP : Link(Dashed) stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } stateDiagram-v2 [*] --> Active state Active { [*] --> NumLockOff NumLockOff --> NumLockOn : EvNumLockPressed NumLockOn --> NumLockOff : EvNumLockPressed -- [*] --> CapsLockOff CapsLockOff --> CapsLockOn : EvCapsLockPressed CapsLockOn --> CapsLockOff : EvCapsLockPressed -- [*] --> ScrollLockOff ScrollLockOff --> ScrollLockOn : EvScrollLockPressed ScrollLockOn --> ScrollLockOff : EvScrollLockPressed } erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes erDiagram CAR ||--o{ NAMED-DRIVER : allows CAR { string registrationNumber PK string make string model string[] parts } PERSON ||--o{ NAMED-DRIVER : is PERSON { string driversLicense PK \"The license #\" string(99) firstName \"Only 99 characters are allowed\" string lastName string phone UK int age } NAMED-DRIVER { string carRegistrationNumber PK, FK string driverLicence PK, FK } MANUFACTURER only one to zero or more CAR : makes gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (excludes accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid excludes weekends %% (`excludes` accepts specific dates in YYYY-MM-DD format, days of the week (\"sunday\") or \"weekends\", but not the word \"weekdays\".) section A section Completed task :done, des1, 2014-01-06,2014-01-08 Active task :active, des2, 2014-01-09, 3d Future task : des3, after des2, 5d Future task2 : des4, after des3, 5d section Critical tasks Completed task in the critical line :crit, done, 2014-01-06,24h Implement parser and jison :crit, done, after des1, 2d Create tests for parser :crit, active, 3d Future task in critical line :crit, 5d Create tests for renderer :2d Add to mermaid :1d Functionality added :milestone, 2014-01-25, 0d section Documentation Describe gantt syntax :active, a1, after des1, 3d Add gantt diagram to demo page :after a1 , 20h Add another diagram to demo page :doc1, after a1 , 48h section Last section Describe gantt syntax :after doc1, 3d Add gantt diagram to demo page :20h Add another diagram to demo page :48h requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 requirementDiagram requirement test_req { id: 1 text: the test text. risk: high verifymethod: test } functionalRequirement test_req2 { id: 1.1 text: the second test text. risk: low verifymethod: inspection } performanceRequirement test_req3 { id: 1.2 text: the third test text. risk: medium verifymethod: demonstration } interfaceRequirement test_req4 { id: 1.2.1 text: the fourth test text. risk: medium verifymethod: analysis } physicalRequirement test_req5 { id: 1.2.2 text: the fifth test text. risk: medium verifymethod: analysis } designConstraint test_req6 { id: 1.2.3 text: the sixth test text. risk: medium verifymethod: analysis } element test_entity { type: simulation } element test_entity2 { type: word doc docRef: reqs/test_entity } element test_entity3 { type: \"test suite\" docRef: github.com/all_the_tests } test_entity - satisfies -> test_req2 test_req - traces -> test_req2 test_req - contains -> test_req3 test_req3 - contains -> test_req4 test_req4 - derives -> test_req5 test_req5 - refines -> test_req6 test_entity3 - verifies -> test_req5 test_req <- copies - test_entity2 %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit %%{init: { 'logLevel': 'debug', 'theme': 'base', 'gitGraph': {'rotateCommitLabel': false}} }%% gitGraph commit id: \"feat(api): ...\" commit id: \"a\" commit id: \"b\" commit id: \"fix(client): .extra long label..\" branch c2 commit id: \"feat(modules): ...\" commit id: \"test(client): ...\" checkout main commit id: \"fix(api): ...\" commit id: \"ci: ...\" branch b1 commit branch b2 commit C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") C4Context title System Context diagram for Internet Banking System Enterprise_Boundary(b0, \"BankBoundary0\") { Person(customerA, \"Banking Customer A\", \"A customer of the bank, with personal bank accounts.\") Person(customerB, \"Banking Customer B\") Person_Ext(customerC, \"Banking Customer C\", \"desc\") Person(customerD, \"Banking Customer D\", \"A customer of the bank, <br/> with personal bank accounts.\") System(SystemAA, \"Internet Banking System\", \"Allows customers to view information about their bank accounts, and make payments.\") Enterprise_Boundary(b1, \"BankBoundary\") { SystemDb_Ext(SystemE, \"Mainframe Banking System\", \"Stores all of the core banking information about customers, accounts, transactions, etc.\") System_Boundary(b2, \"BankBoundary2\") { System(SystemA, \"Banking System A\") System(SystemB, \"Banking System B\", \"A system of the bank, with personal bank accounts. next line.\") } System_Ext(SystemC, \"E-mail system\", \"The internal Microsoft Exchange e-mail system.\") SystemDb(SystemD, \"Banking System D Database\", \"A system of the bank, with personal bank accounts.\") Boundary(b3, \"BankBoundary3\", \"boundary\") { SystemQueue(SystemF, \"Banking System F Queue\", \"A system of the bank.\") SystemQueue_Ext(SystemG, \"Banking System G Queue\", \"A system of the bank, with personal bank accounts.\") } } } BiRel(customerA, SystemAA, \"Uses\") BiRel(SystemAA, SystemE, \"Uses\") Rel(SystemAA, SystemC, \"Sends e-mails\", \"SMTP\") Rel(SystemC, customerA, \"Sends e-mails to\") UpdateElementStyle(customerA, $fontColor=\"red\", $bgColor=\"grey\", $borderColor=\"red\") UpdateRelStyle(customerA, SystemAA, $textColor=\"blue\", $lineColor=\"blue\", $offsetX=\"5\") UpdateRelStyle(SystemAA, SystemE, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-10\") UpdateRelStyle(SystemAA, SystemC, $textColor=\"blue\", $lineColor=\"blue\", $offsetY=\"-40\", $offsetX=\"-50\") UpdateRelStyle(SystemC, customerA, $textColor=\"red\", $lineColor=\"red\", $offsetX=\"-50\", $offsetY=\"20\") UpdateLayoutConfig($c4ShapeInRow=\"3\", $c4BoundaryInRow=\"1\") mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid mindmap root((mindmap)) Origins Long history ::icon(fa fa-book) Popularisation British popular psychology author Tony Buzan Research On effectiveness<br/>and features On Automatic creation Uses Creative techniques Strategic planning Argument mapping Tools Pen and paper Mermaid timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2002 LinkedIn 2004 Facebook Google 2005 Youtube 2006 Twitter %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest %%{init: { 'logLevel': 'debug', 'theme': 'forest' } }%% timeline title History of Social Media Platform 2002 : LinkedIn 2004 : Facebook : Google 2005 : Youtube 2006 : Twitter 2007 : Tumblr 2008 : Instagram 2010 : Pinterest config: sankey: showValues: false sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 --- config: sankey: showValues: false --- sankey-beta Agricultural 'waste',Bio-conversion,124.729 Bio-conversion,Liquid,0.597 Bio-conversion,Losses,26.862 Bio-conversion,Solid,280.322 Bio-conversion,Gas,81.144 Biofuel imports,Liquid,35 Biomass imports,Solid,35 Coal imports,Coal,11.606 Coal reserves,Coal,63.965 Coal,Solid,75.571 District heating,Industry,10.639 District heating,Heating and cooling - commercial,22.505 District heating,Heating and cooling - homes,46.184 Electricity grid,Over generation / exports,104.453 Electricity grid,Heating and cooling - homes,113.726 Electricity grid,H2 conversion,27.14 Electricity grid,Industry,342.165 Electricity grid,Road transport,37.797 Electricity grid,Agriculture,4.412 Electricity grid,Heating and cooling - commercial,40.858 Electricity grid,Losses,56.691 Electricity grid,Rail transport,7.863 Electricity grid,Lighting & appliances - commercial,90.008 Electricity grid,Lighting & appliances - homes,93.494 Gas imports,Ngas,40.719 Gas reserves,Ngas,82.233 Gas,Heating and cooling - commercial,0.129 Gas,Losses,1.401 Gas,Thermal generation,151.891 Gas,Agriculture,2.096 Gas,Industry,48.58 Geothermal,Electricity grid,7.013 H2 conversion,H2,20.897 H2 conversion,Losses,6.242 H2,Road transport,20.897 Hydro,Electricity grid,6.995 Liquid,Industry,121.066 Liquid,International shipping,128.69 Liquid,Road transport,135.835 Liquid,Domestic aviation,14.458 Liquid,International aviation,206.267 Liquid,Agriculture,3.64 Liquid,National navigation,33.218 Liquid,Rail transport,4.413 Marine algae,Bio-conversion,4.375 Ngas,Gas,122.952 Nuclear,Thermal generation,839.978 Oil imports,Oil,504.287 Oil reserves,Oil,107.703 Oil,Liquid,611.99 Other waste,Solid,56.587 Other waste,Bio-conversion,77.81 Pumped heat,Heating and cooling - homes,193.026 Pumped heat,Heating and cooling - commercial,70.672 Solar PV,Electricity grid,59.901 Solar Thermal,Heating and cooling - homes,19.263 Solar,Solar Thermal,19.263 Solar,Solar PV,59.901 Solid,Agriculture,0.882 Solid,Thermal generation,400.12 Solid,Industry,46.477 Thermal generation,Electricity grid,525.531 Thermal generation,Losses,787.129 Thermal generation,District heating,79.329 Tidal,Electricity grid,9.452 UK land based bioenergy,Bio-conversion,182.01 Wave,Electricity grid,19.013 Wind,Electricity grid,289.366 graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange graph TB sq[Square shape] --> ci((Circle shape)) subgraph A od>Odd shape]-- Two line<br/>edge comment --> ro di{Diamond with <br/> line break} -.-> ro(Rounded<br>square<br>shape) di==>ro2(Rounded square shape) end %% Notice that no text in shape are added here instead that is appended further down e --> od3>Really long text with linebreak<br>in an Odd shape] %% Comments after double percent signs e((Inner / circle<br>and some odd <br>special characters)) --> f(,.?!+-*?) cyr[Cyrillic]-->cyr2((Circle shape ??????)); classDef green fill:#9f6,stroke:#333,stroke-width:2px; classDef orange fill:#f96,stroke:#333,stroke-width:4px; class sq,e green class di orange sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end sequenceDiagram participant web as Web Browser participant blog as Blog Service participant account as Account Service participant mail as Mail Service participant db as Storage Note over web,db: The user must be logged in to submit blog posts web->>+account: Logs in using credentials account->>db: Query stored accounts db->>account: Respond with query result alt Credentials not found account->>web: Invalid credentials else Credentials found account->>-web: Successfully logged in Note over web,db: When the user is authenticated, they can now submit new posts web->>+blog: Submit new post blog->>db: Store post data par Notifications blog--)mail: Send mail to blog subscribers blog--)db: Store in-site notifications and Response blog-->>-web: Successfully posted end end"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/KonfiguraceServeru.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/KonfiguraceServeru.html",
    "title": "",
    "keywords": "public partial class ServerConfigSettings { #region Emailer Service /// /// Service email, for info about not available service from HeatchCheck Can be used for /// next Develop, automatic checking problems, missing data and all other Its Necessary for /// Correct running Server Internal Core Monitoring /// public static string EmailerServiceEmailAddress { get; set; } = \"Libor.Svoboda@GroupWare-Solution.Eu\"; /// /// SMTP Server Address for Login to External Mail Server Its Necessary for Correct running /// Server Internal Core Monitoring /// public static string EmailerSMTPServerAddress { get; set; } = \"imap.groupware-solution.eu\"; /// /// SMTP Port for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static int EmailerSMTPPort { get; set; } = 25; /// /// EmailerSMTPSslIsEnabled SSl Email Protocol for Login to External Mail Server Its /// Necessary for Correct running Server Internal Core Monitoring /// public static bool EmailerSMTPSslIsEnabled { get; set; } = false; /// /// SMTP UserName for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static string EmailerSMTPLoginUsername { get; set; } = \"backendsolution@groupware-solution.eu\"; /// /// SMTP Password for Login to External Mail Server Its Necessary for Correct running Server /// Internal Core Monitoring /// public static string EmailerSMTPLoginPassword { get; set; } = \"password\"; #endregion Emailer Service #region Server Database /// /// Server Database Connection string for Full Service of Database /// Migration/Api/Check/Unlimited Develop !!!Warning: Check this connection for /// Read/Write/Exec is enabled /// public static string DatabaseConnectionString { get; set; } = \"Server=127.0.0.1;Database=EASYDATACenter;Trusted_Connection=True;TrustServerCertificate=True\"; /// /// Enable Disable Entity Framework Internal Cache I recommend turning it off : from Logic, /// Duplicit Functionality with Database Server in complex process can generate problems /// Recommended: false /// public bool DatabaseInternalCachingEnabled { get; set; } = false; /// /// Time in Minutes for Database Valid Cache Data and Refreshing Duplicit Functionality with /// Database Server /// Recommended: 30 /// public int DatabaseInternalCacheTimeoutMin { get; set; } = 30; #endregion Server Database #region Server Future Technologies /// /// Server Service Name automatic figured in All IS/OS/Engines info /// Recommended: EASYDATACenter /// public static string SpecialServerServiceName { get; set; } = \"EASYDATACenter\"; /// /// User Web Root Path for Startup /// and Any missing address Automatic Redirection /// Not need Regex Configuration /// public string SpecialUserWebRootPath { get; set; } = \"/Dashboard\"; /// /// Activation / Deactivation of Email Sender For Server Core Fails Checker All Catch Write /// to SendEmail, In Debug mode is Written in console in Release mode is Sended email (All /// incorrect server statuses are monitored) Can be writen to Database - !!! Warning for /// infinite Cycling (DB shutdown example) /// Recommended: true /// public static bool SpecialCoreCheckerEmailSenderActive { get; set; } = false; /// /// Special Function: Using Selected Tables with AutoRefresh On change as Local DataSets, /// For Optimize Traffic. For Example LanguageList - Static table with often reading /// Recommended: true - functionality must be implemented in Server Code /// public static bool SpecialUseDbLocalAutoupdatedDials { get; set; } = false; /// /// Server Language for Translating Server internal statuses /// Recommended: cz or en - other languages are not implemented /// public static string SpecialServerLanguage { get; set; } = \"cz\"; /// /// Server support mass emailing as Service /// You can enable Mass Email Api /// public static bool SpecialEnableMassEmail { get; set; } = true; #endregion Server Future Technologies #region ServerConfigurationServices /// /// Set Server Startup Port on Http/HttpS/WebSocket and for All Engines, Modules, API /// Controler and WebPages /// Recommended: 5000 /// public static int ConfigServerStartupPort { get; set; } = 5000; /// /// WebSocket Timeout Connection Settings in Minutes. After timeout when not detected any /// communication socket is closed Set according to your need /// Recommended: 2 /// public static double ConfigWebSocketTimeoutMin { get; set; } = 2; /// /// Maximum socket message size for control Traffic /// Recomended: 10 /// public static int ConfigMaxWebSocketBufferSizeKb { get; set; } = 10; /// /// Bearer Token Timeout Setting in Minutes. Connection must be Refreshed in Interval After /// Timeout connection Must Login Again. It is as needed. You Can Change Key for close All /// connections Immediately. Timeout is good for Webpages /// Recomended: 15 /// public static double ConfigApiTokenTimeoutMin { get; set; } = 15; /// /// Setting for Server URL Services. Logically can run only one Http or Https Server has /// more Security Setting Politics. /// Recommended: true /// public static bool ConfigServerStartupOnHttps { get; set; } = true; /// /// Setting for Automatic Obtain Lets Encrypt /// more Security Setting Politics. /// Recommended: true /// public static bool ConfigServerGetLetsEncrypt { get; set; } = false; /// /// Its Domain for include to Automatic Generated Certificate For Server running on HTTPS. /// Domain is for Your validation Certificate Domain. Can be Changed for commercial. /// Domain is Used for Lets Encrypt also /// Write with Comma separator /// Recommended: 127.0.0.1 /// public static string ConfigCertificateDomain { get; set; } = \"127.0.0.1\"; /// /// Password will be inserted to Server Generated Certificate for HTTPS. /// Recommended: empty = Maximal Security Randomly generated 20 chars string /// public static string ConfigCertificatePassword { get; set; } = ServerCoreFunctions.RandomString(20); /// /// Special Functions:Server AutoGenerated encryption Key For Securing Communication On Each /// Server Restart All Tokens not will be valid and the Login Reconnect is Requested. Its /// AntiHacker Security Rule /// Recommended: empty = Maximal Security Randomly generated 40 chars string /// public static string ConfigJwtLocalKey { get; set; } = ServerCoreFunctions.RandomString(40); #endregion ServerConfigurationServices #region Server Engines /// /// Enable Disable Bearer Token Timeout Validation Token can be valid EveryTime to using: /// Example for machine connection Or is Control last activity /// public static bool ServerTimeTokenValidationEnabled { get; set; } = false; /// /// Enable Razor WebPages support engine with Correct Configuration for Automaping form /// folder 'Pages' /// public static bool ServerRazorWebPagesEngineEnabled { get; set; } = true; /// /// Enable Mvc WebPages support engine with Correct Configuration /// public static bool ServerMvcWebPagesEngineEnabled { get; set; } = true; /// /// Enable JS WebPages support engine with Correct Configuration /// React, Nodejs, etc.. /// public static bool ServerJsWebPagesEngineEnabled { get; set; } = false; /// /// Definition of WebPage Startup npmscript command /// React, Nodejs, etc.. /// public static string ServerJsWebStartupCommand { get; set; } = \"start\"; /// /// Enable WebSocket Engine with Default Example Api Controller /// public static bool ServerWebSocketEngineEnabled { get; set; } = true; /// /// Enable FTP File Server oppened for every connection with full rights /// public static bool ServerFtpEngineEnabled { get; set; } = true; /// /// Enable FTP Security /// For access to FTP must be logged /// public static bool ServerFtpSecurityEnabled { get; set; } = true; /// /// Enable WebPages File Browsing from server Url on Server /// public static bool ServerWebBrowserEnabled { get; set; } = true; /// /// Server support online multi watch Logging /// Its Run on Websocket and the Log Messages are /// sent for All opened connections for wathing /// on Path: ServerCoreMonitor /// You can enable Mass Email Api /// public static bool ServerEnableWebSocketMonitor { get; set; } = true; #endregion Server Engines #region Server Modules /// /// Special Function: Server Automatically Generate Full Documentation of API structure AND /// Database Model. Plus Included API Interface for Online Testing All API Methods with /// Authentication Its Automatic Solution for Third Party cooperation. All changes are /// Reflected after restart server /// public static bool ModuleSwaggerApiDocEnabled { get; set; } = true; /// /// Special Function: AutoGenerated Database DataManager for working with Data Running only /// in Debug mode for simple Develop, can be modified. All changes are Reflected after /// restart server /// public static bool ModuleDataManagerEnabled { get; set; } = true; /// /// Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, /// Over Net can Control Other Company Services Also as Central Control Point With Email /// Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment /// Must be run for Metrics AddOn https://learn.microsoft.com/en-us/dotnet/architecture/microservices/implement-resilient-applications/monitor-app-health /// public static bool ModuleHealthServiceEnabled { get; set; } = true; /// /// Special Function: More than 200 Server Statuses Can be monitored by HeathCheckService, /// Over Net can Control Other Company Services Also as Central Control Point With Email /// Service. For Example: Server/Memory/All DB Types/IP/HDD/Port/Api/NET/Cloud/Environment /// Must be run for Metrics AddOn !!! run in Release mode for Good Reading of Logs without /// HeathChecks Cycling info https://github.com/Xabaril/AspNetCore.Diagnostics.HealthChecks https://testfully.io/blog/api-health-check-monitoring/ /// public static int ModuleHealthServiceRefreshIntervalSec { get; set; } = 30; /// /// Enable Server Structure Documentation for Developers Using RootPath, - Block File /// Browsing Is Good for Server with Documentation only Or Use for Show WebPage and Copy /// \"Only HTML\" /// public static bool ModuleMdDocumentationEnabled { get; set; } = true; /// /// Enable Automatic Database Diagram for Simple show Database structure with All bingings /// public static bool ModuleDbDiagramGeneratorEnabled { get; set; } = true;"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/LogikaaStuktura.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/LogikaaStuktura.html",
    "title": "",
    "keywords": "SYSTEM PROJECT STRUCTURE - DECRIPTION APP Initialization Starting APP with Welcome Page by JSON Setting Initialize Technologies Including Core Styles and themes Set Global Properties Set Global DataLists (Parameters, Setting, Tilts, System Classes, UserData, Erroer Handlers, API Security, etc) Set CrashReporting join Welcome Page - Video Start Page with Mottos MainWindow - Central System Core Point where are All Global Shared methods for system core running LOGICAL HARD DEFINED SYSTEM STRUCTURE Namespaces Pages - ALL Agendas must BE in PAGES ALL 3 TYPED FORMS (Defined in Templates) Classes - EACH AGENDA has 2 FILES - CLASS WITH DB/BACKEND/CUSTOMIZED Class AND XAML FORM API Communications - Class File with API Definitions, All API URLs for communication with Backend, Response format, System Auth GET,POST,PUT,DELETE universal API Cals for full system (All agendas) - Communication control other Logics rules Are implemented in DB Structure - Foreign keys, Views, Procedures GLOBAL Styles - Styles for standardized show vies, form, menu, other or custom controls, inputs, list, menu, etc. GLOBAL Classes - Universal System Classes for correct work SYSTEM CORE -Parameters, Tilt Types, universal Doc Class, Server Set class, etc... GLOBAL Functions -MediaFunctions - Special methods for file formats work, mailSend, images functions, Project Version, System Dictionaries -FileFunctions - COPY,SAVE,DELETE,CHECK Files/Directories, etc. -ServerCoreFunctions - System Parameters, Advanced Filter Generator, etc. Languages Folder for XAML Language Files Manual Folder - WIN Developer Auto generated Help Files with All Core Reviews (F1 - Only for Developers) Generated by External OXYGEN TAB&SYSTEM - Methods and Definitions for CORE Graphics of SYSTEM Builder Tab control, definitions, models, crashReport, Delegates, Theme/Color Control, System Updater, Help etc. Data Folder - External image files, json, and all others external files, examples for system AGENDAS - Folder With All Agendas (Each Form=Agenda has unique defined format -> Class + Xaml Template Form or you can create custom any form) EACH Created FORM is AGENDA - EXAMPLE Calendar - One Table, unique (SETTING TYPE PAGE) Form All agendas you can create from SYSTEM Templates which existed in system. Its prepared for build Robust System, Multimedia system, Terminals, Etc. MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/PopisZměnaVývoje.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/PopisZměnaVývoje.html",
    "title": "",
    "keywords": "Projects Legend EB = EASYBuilder ED = Golden SD = EASYBuilderDataCenter SP = EASYBuilder application I = Install file DB = Database Each changes IN EB/SP can be deployed to the second program Each changes IN ED/SD can be deployed to the second program Project/Program Install file are for absolute simple Installation with all Dependencies Documentation And Software for Testing you find on https://groupware-solution.eu/webdav/Marketing/ login: marketing/marketing ALL Applications Prepared for Simple Installation / Buy in more installation Types - by user friendly Install file and License Server Application Clones FE + BE LicenseSrv - MultiOS License Server with listen API GET/POST server / generate Unlimited Static/Dynamic CODES and Client for managing PRUVODKY - Windows XP+ Implementation Production Guides for Production Companies For Office / Touch Panels using with unlimited Clients and printing possibilities ShoPingER - Windows XP+ MultiBranch Offer/Order/Invoice System with multimedia Files Supported with Unlimited Clients and Printing possibilities LicenceShoper - MultiOS License Server PLUS Windows XP+ MultiBranch Invoice system [LicenseSrv + ShoPingER] SOLUTION MAIN PARTS EASYBuilder Developing C# WPF Visual Studio Project With MustiVariable Menu Settings, With All DataForm Template types DATAView / DATADetail / With SubDATAview / With SubFullDataDetail / 3D / Document / Video for Build ANY Information / Multimedia / Control / Flow / Reporting and More Systems FOR NEXT COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO - Project LICENSE Golden - Universal Secure MultiPlatform MultiDATABASE Backend Server Project WiTH RESTFULL / WEBSOCKET implementations With All Template types for INSERT / UPDATE / DELETE / SELECT / PROCEDURE / SUBFORMDATA and more Other With DATABASE , Table Template, Procedure Template, View Template, Backup/Restore and more Examples With Tables, Indexes, ForeignKeys in All Standard DB Using FOR NEXT COPY / PASTE DEVELOPMENT IN EXTREMELY LOW PRICE 5000Kč/200EURO - Project LICENSE FYI Reporting - FreeWare Full Report Designer and Viewer for Printing All document Types / Barcodes, EAN, QR, Graphs, SubReport, etc. SW Date Version Speed Development Description by one man Only EB/SP/I 1.12.2022 1.5.78.925 Start of Developing steps describing EB 1.12.2022 Added Link for FyiReportink 100 Examples to Help_Commands EB/SP/I 1.12.2022 1.5.78.944 Implemented DB Connection string to settings for All Report as param, centralized EB/SP 1.12.2022 Implemented new TreeView Menu for much more menu items in Menu SD/SP 1.12.2022 Implemented CurrencyList, UnitList, AddressList ItemList Agendas EB/SP 1.12.2022 Implemented Copy menu button for copy Each record in listview SD 1.12.2022 Describe existing API call to documentation EB/SP 2.12.2022 Changed Settings for much more application menu Types and implemented new Menu EB/SP 2.12.2022 1.5.78.954 Publish new version EASYBuilder installers on Google/WebDav/WebSite EB/ED/SD/SP 2.12.2022 Publish Development Info on WebSite And Marketing EB/SP 3.12.2022 Repaired filtering on null values EB/SP 3.12.2022 Centralized load Report List Control from ApiUrl definition List for these addresses SD 3.12.2022 Create TemplateList Table to 15.12.2022 5 Applications Created IN 14 DAYS WITH 20-40 DB tables / Agendas in ONE MAN ONLY 2023.07.07 FAST REcapitulation Exist Few Tasks For Better Settings Maily for EASY SYSTEM BUILDER (SET Full Automatic Translating for Example) But Yesterday Will Be Regenerated Older EDC & ESB Clones Over Automatized Solutions. EDC now MULTI Server (GroupWare Solution) Has Own System Clone As Basic Server Manager - Any Interest of This Solution (its not normal) Server for Testing With Posible FUNCTIONalities most Than commercial Products I have Problem Find Normal Work as alone Developer So in Week Will start The EASY-DATA-CENTER (Backend API from Start, but now + Media,Multi Web,FTP,Socket,DOCs,Emailing,HealthCheck, etc With Absolute News In WORLD) example: Remote Monitoring internal logger of Server over WebSocet, Automatic Translation Table Filler by First World Using in System and much more So News Are In Video, New Full Agenda from DB to System is Finished in 5min - Copy Similar To 5 Hours - Complicated for More Joing Example OCR for Max 2 Days For Implmenent almost perfect Solution for HTML Editing with Allmost HTML shits and Fails in Format. Perhaps Severu's Media Backend Generator, which will generate a RESTFUL API with a lot of other benefits, will awaken interest and I will finally find clients instead of mocking that I can't do IT. PS: i Start IT on ATARI 65XE in 1989 and this Year is 33 Years from My First Program Code. So Recap Solutions By Videos I Found Plan Implement Automatic LetsEncrypt for Server, Gihub Custom Server, cheap EDC Server Generator, Next Few cheap Generator which i build on this Way, ESB Generator, XAML Form Builder for EASY Build System By Clicking on Mouse. 05.12.23 Globální Změny Vznikla první agenda s automaticky překládanými poli Úkol, aktualizovat všechny existující aonliner agendy na automatický překlad - Automatický Překlad sbírá pomocí funkce \"TranslateFormFields\" všechny Popisky-LAbel typy a Button Tlačítka Typy a překládá je oproti DB překladovému seznamu - Odpadá nutnost vupisovat typy polí - POZOR toto je možné jen preo ONLINE AGENDY seznam je načítaný ze serveru - Další Varianta Překladu je pomocí ruční definice popisku z názvu - použije \"fileType\" pro překlad *DBOperations.DBTranslation(lbl_fileType.Name.Split('_')[1]) nebo přes lokální Slovníky \"Languages\" pro použití OffLine * lbl_fileType.Content = Resources[\"fileType\"].ToString() - Menu je Celé kromě volby Nastavení Klienta zmeněno na automatický překlad DB slovníku - Odpadá nutnost kvůli nové online agendě importovat slovníky - Slovníky lze Generovat z Backendu a Vložit Do projektu Systému pro Offline Použití - Použité Jazyky CS,EN, neomezená možnost jednoduchého rozšíření Lang Tabulky"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/PoužitéNástoje3rd.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/PoužitéNástoje3rd.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help Migration between Database Types Install 'Mysql WorkBench' SW run migrations Help: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Download App Link Generator insert App detail link from web store Example: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Windows Apps & Windows Tools in start menu Windows Kits cmd Reset Store Settings wsreset.exe More Hundered Github Soucre Tools And Ideas are Not Used Hundered Finished Tools are Free For Fast Implement Simple Code Logic With Best System Logic Rules Minimalize the needs for implmenting News Example: https://github.com/search?q=wpf+tool&type=repositories Cheap And Fast Implementation News Example: RDP Remote support 1day, HTML Editor For Manage WebPages: 2 days Google Solve impossible Problem in one Day Few Tools Are Implemented Not Need Next For 95% Standard Systems (Example FYIReporting : Full Free Printing Solution) Example Question: How You Solve Update System? - Answer: Easy by Version Number in Filename WHY: Because Are Changes are implemented on AUTO Logic Strucuture or If Not will must be changed to AUTO Logic = Last manual Rewriting Every Each Logic is Failed. This is Actual Problem Of 95% existing Systems Implemented Free Unused Tools Are Best Solution Often More World Sources Are not Used Result is implemented tools In Both Solutions EASY DATA CENTER - More than 100 Free Technogies For Solve ANY Situation And Not Need Next Existed Cheap Solutions EASY SYSTEM BUILDER - From Implemented 50 Packages Are Used Only 10 with few Part of Possibilities actually MarkDown Item Template API Condition for Ignore In Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] API Description For Descripting In Swagger Docs [SwaggerTag(\"API Template with INSERT/UPDATE/DELETE/SELECT AND FILTERING APIs\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StaticWebPortál.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StaticWebPortál.html",
    "title": "",
    "keywords": "Osnova [^first] Static Spa Web Portal Základní Popis [^druha] Implementované Funkcionality a jejich Možnosti [^first]: Static Spa Web Portal Základní Popis Funkce Dynamického Statického Web Portálu Implementovány Grafické Doplňky:Mermaid: UML, Grafy, Struktury,Schemata, a mnohem více viz Dokumentace, ukázky najdete Editoru Implementována Funkcionalita zvýraznění programovacích kódů HighLight, více viz Dokumentace , ukázky najdete Editoru Implementován Systém Metro4, pro vývoj libobolných stránek portálů, systémů atd..., více viz Dokumentace , ukázky najdete Editoru - Stránky Lze Stáhnout a spustit přímo ze složky nebo libovolného web Serveru, nutná pouze konfigurace Backend Serveru v souboru globalstorage.js [^druha]: Implementované Funkcionality a jejich Možnosti Funkce Dynamického Statického Web Portálu Implementovány Grafické Doplňky:Mermaid: UML, Grafy, Struktury,Schemata, a mnohem více viz Dokumentace, ukázky najdete Editoru Implementována Funkcionalita zvýraznění programovacích kódů HighLight, více viz Dokumentace , ukázky najdete Editoru Implementován Systém Metro4, pro vývoj libobolných stránek portálů, systémů atd..., více viz Dokumentace , ukázky najdete Editoru - Stránky Lze Stáhnout a spustit přímo ze složky nebo libovolného web Serveru, nutná pouze konfigurace Backend Serveru v souboru globalstorage.js Osnova [^first] Static Spa Web Portal Základní Popis [^druha] Implementované Funkcionality a jejich Možnosti"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StructureCZ.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StructureCZ.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Nápověda pro Visual Studio",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Nápověda pro Visual Studio Migrace mezi typy databází Nainstalujte SW 'Mysql WorkBench' spustit migrace Nápověda: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Stáhnout App Link Generator vložte odkaz na podrobnosti aplikace z internetového obchodu Příklad: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Aplikace pro Windows a nástroje Windows v nabídce Start Windows Kits cmd Obnovit nastavení obchodu wsreset.exe Více stovek nástrojů a nápadů Github Soucre se nepoužívá Sto hotových nástrojů je zdarma pro rychlou implementaci Jednoduchá logika kódu s nejlepšími pravidly systémové logiky Minimalizujte potřeby pro implementaci zpráv Příklad: https://github.com/search?q=wpf+tool&type=repositories Levné a rychlé zprávy o implementaci Příklad: Vzdálená podpora RDP 1 den, HTML editor pro správu webových stránek: 2 dny Google vyřeší nemožný problém za jeden den Je implementováno jen málo nástrojů, není potřeba další pro 95 % standardních systémů (Příklad FYIRoporting: Kompletní bezplatné tiskové řešení) Příklad otázky: Jak řešíte aktualizaci systému? - Odpověď: Snadno podle čísla verze v názvu souboru PROČ: Protože jsou změny implementovány v logické struktuře AUTO nebo Pokud ne, bude nutné změnit na AUTO Logika = Poslední ruční přepisování Každá každá logika selhala. Toto je skutečný problém 95 % existujících systémů Implementované bezplatné nepoužívané nástroje jsou nejlepším řešením Často se nepoužívá více světových zdrojů Výsledkem jsou implementované nástroje v obou řešeních SNADNÉ DATOVÉ CENTRUM – Více než 100 bezplatných technologií pro vyřešení JAKÉKOLI situace a nepotřebujete další existující levná řešení EASY SYSTEM BUILDER – z implementovaných 50 balíčků se používá pouze 10 s několika částmi možností Zde je testament: EASYTools 3rd Free Addons Podmínka API pro ignorování v Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] Popis API pro popis v Swagger Docs [SwaggerTag(\"Šablona API s INSERT/UPDATE/DELETE/SELECT AND FILTERING API\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete Record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { Šablona položky MarkDown"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StructureEN.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/StructureEN.html",
    "title": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help",
    "keywords": "EASY-SYSTEM-Builder & EASY-DATA-Center Visual Studio Help Migration between Database Types Install 'Mysql WorkBench' SW run migrations Help: https://severalnines.com/blog/how-migrate-mssql-mysql/ SW: https://dev.mysql.com/downloads/file/?id=517975 Windows Store Download App Link Generator insert App detail link from web store Example: https://apps.microsoft.com/store/detail/xaml-studio/9NTLS214TKMQ https://store.rg-adguard.net/ Windows Apps & Windows Tools in start menu Windows Kits cmd Reset Store Settings wsreset.exe More Hundered Github Soucre Tools And Ideas are Not Used Hundered Finished Tools are Free For Fast Implement Simple Code Logic With Best System Logic Rules Minimalize the needs for implmenting News Example: https://github.com/search?q=wpf+tool&type=repositories Cheap And Fast Implementation News Example: RDP Remote support 1day, HTML Editor For Manage WebPages: 2 days Google Solve impossible Problem in one Day Few Tools Are Implemented Not Need Next For 95% Standard Systems (Example FYIReporting : Full Free Printing Solution) Example Question: How You Solve Update System? - Answer: Easy by Version Number in Filename WHY: Because Are Changes are implemented on AUTO Logic Strucuture or If Not will must be changed to AUTO Logic = Last manual Rewriting Every Each Logic is Failed. This is Actual Problem Of 95% existing Systems Implemented Free Unused Tools Are Best Solution Often More World Sources Are not Used Result is implemented tools In Both Solutions EASY DATA CENTER - More than 100 Free Technogies For Solve ANY Situation And Not Need Next Existed Cheap Solutions EASY SYSTEM BUILDER - From Implemented 50 Packages Are Used Only 10 with few Part of Possibilities actually Here is testament: EASYTools 3rd Free Addons API Condition for Ignore In Swagger Docs [ApiExplorerSettings(IgnoreApi = true)] API Description For Descripting In Swagger Docs [SwaggerTag(\"API Template with INSERT/UPDATE/DELETE/SELECT AND FILTERING APIs\")] public class TemplateListApi : ControllerBase { [SwaggerOperation(Summary = \"Get All records\", Description = \"Async standard select record API\", OperationId = \"Select all records\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> GetTemplateList() { [HttpDelete(\"/TemplateList/{id}\")] [Consumes(\"application/json\")] [SwaggerOperation(Summary = \"Delete Record\", Description = \"Async standard Delete record API\", OperationId = \"Delete Record\", Tags = new[] { \"TemplateListApi\" })] public async Task<string> DeleteTemplateList(string id) { MarkDown Item Template"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/UkázkyFormátování.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/UkázkyFormátování.html",
    "title": "Markdown Guide",
    "keywords": "@toc Markdown Guide Detailed: http://commonmark.org/help/ Bold **bold** __bold__ Italic *italic* _italic_ Header # h1 # h1 ==== ## h2 ## h2 ---- ### h3 ### #### h4 #### ##### h5 ##### ###### h6 ###### Dividing line *** --- ^Super^script & ~Sub~script super x^2^ sub H~2~0 ++Underline++ & Strikethrough ++underline++ ~~strikethrough~~ ==Mark== ==mark== Quote > quote 1 >> quote 2 >>> quote 3 ... List ol 1. 2. 3. ... ul - - ... Todo List [x] task 1 [ ] task 2 - [x] task 1 - [ ] task 2 Link Text Link [Text](www.baidu.com) Image Link ![Text](http://www.image.com) Code ``` type cscharp,sql,mermaid,javascript css,vbnet,xml,php,powershell and next 200 code block ``` ` code ` int main() { printf(\"hello world!\"); } code Table | th1 | th2 | th3 | | :-- | :--: | ----: | | left | center | right | th1 th2 th3 left center right ---------------------- ------------- ----------------- Footnote hello[^hello] Look at the bottom1 Emojis Detailed: https://www.webpagefx.com/tools/emoji-cheat-sheet/ :laughing: :blush: :smiley: :) ... 😆:blush::smiley::) \\(\\KaTeX\\) Mathematics We can render formulas for example:\\(x_i + y_i = z_i\\) and \\(\\sum_{i=1}^n a_i=0\\) We can also single-line rendering \\(\\sum_{i=1}^n a_i=0\\) Detailed: katex?katex function??latex Layout ::: hljs-left ::: hljs-left left ::: ::: ::: hljs-center ::: hljs-center center ::: ::: ::: hljs-right ::: hljs-right right ::: ::: deflist Term 1 : Definition 1 Term 2 with inline markup : Definition 2 { some code, part of Definition 2 } Third paragraph of definition 2. Term 1 : Definition 1 Term 2 with *inline markup* : Definition 2 { some code, part of Definition 2 } Third paragraph of definition 2. abbr The HTML specification is maintained by the W3C. *[HTML]: Hyper Text Markup Language *[W3C]: World Wide Web Consortium The HTML specification is maintained by the W3C. ThirdParty Helps Mavon Editor Posibilities Mermaid Design Using footnote↩"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/VizeaNápadyaPostupy.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/VizeaNápadyaPostupy.html",
    "title": "",
    "keywords": "LOW/NO/FULL code EXTREMELY EASY TO DEVELOP ANY SYSTEM For thinking, the development of tools and work with them worthy in the 21st century The development of FRONTEND as an entire IS system as you do not know it - only 3 choices are enough Logic - everything in the database is a LIST (list of invoices) -> This may or may not have a DETAIL (list of items) || OR it needs to be just settings, i.e. Detail (program settings, video processing, etc.) And the result can be a system that SAP or anyone else can only dream of. Almost like tennis, you can publish one table after another, and by evening you have a small system. DEFINITION OF 3 layer SYSTEM and necessary components Database - place for DATA Backend Server - A service that securely conveys data to applications Frontend/User Application - A nice application to easily work with data Print support - creation and printing of any reports START in 1 day you will start your new system in three steps Development in Golden UNIVERS RESTFULL/SOCKET BACKEND SERVER in three user steps Create any database Table. Use the TemplateList Template and just insert your boxes into it. Remember Indexes, Foreign Keys, or look at already existing tables or consult with me. It IS for a few minutes You export the tables as a model using the prepared CMD command to the BACKEND project [ EntityFramework 6 ] command: Scaffold-DbContext \"Server=IP;Database=DB;User ID=USER;Password=PW;\" Microsoft.EntityFrameworkCore.SqlServer -OutputDir DBModel done - the entire database is defined in the Backend server From existing calls, e.g. UserList, copy and rename the new API call for the new table [GET,POST,PUT,PATCH,DELETE] COPY file -> PASTE file -> Rename to new API for example: /skladList and Build&Run Done, the API Server is WAITING at http://vaseip/skladList for your call and deployment at the client, in the company, anywhere Development in EASYBuilder Modern WINDOWS XP+ thin application or system in three user steps You copy the table definition from the model created in the BACKEND project to the FRONTEND project COPY Class from BE Model -> PASTE into FE application -> add new APIURL Select the template you want, there are primarily 3 -> rename it, edit the form and connect it to the MAINMENU so you set the WHERE to search, COPY/PASTE boxes, write Translation in the dictionary and copy the connection to the MAINMENU done - the result is a new form with complete user control Build&Run - you check the work one after the other, because typos are part of us, aren't they the full logging option slaps you in detail where the error is or HURRY GOES Done, the Application is WAITING for your work or deployment at the client, in the company, anywhere evelopment of Press Reports in FYIREPORTING You simply copy the existing DATALIST/DETAIL report and open it in the editor Rename to the new name of your table. You edit your SQL SELECT and Test it, the parameters are already set ID/SEARCH/CONNECT Ideally in MSSQLMS or HEIDYSQL or something and debug it there. Remember everything is just a LIST or Detail. done - and you have the correct data that you just arrange for printing in the form. And you import into the system in the REPORTING list menu, where you set the required link to APIURL/SEARCH/ID Done, the press kit is WAITING for your work or deployment at the client, in the company, anywhere END OF KNOWLEDGE REQUIRED FOR SYSTEM DEVELOPMENT Basic listing of almost unlimited skill application Prepared with common agendas Operation possible on WINDOWS XP, 7, 8, 10, 11 C# WFP, XAML, Drag&Drop technology Complete management of any Agenda (Table) RESTORE/NEW/EDIT/COPY/DELETE Automatically generated list data view. Easy preparation of the form according to prepared templates and ready made agendas more than 100 types of input fields Search in content in the data list also optimized for TOUCH TERMINALS for MANUFACTURING or BUSINESS, SELF*SERVICE environments own printing system with direct printing support Almost unlimited development possibilities with the possibility of own involvement Support for controlling operating systems thousands of already free tools on GitHub connection to any third*party services support for all known protocols EMAIL, IMAP, HTTPS, FTP, SSH, SMTP, TELNET command line support, JavaScript, Telnet Option to connect to 3*party systems, IS and OS systems Support multimedia, hardware, 3D, devices, RFID readers, QR, BAR, EAN, VIDEO, SOUND, MS OFFICE, PDF, XPS, RTF, etc. development of any customized system from 20,000 CZK. System already prepared as a template for any more than just IS SYSTEM the possibility of creating any INFORMATION OR CONTROL, MONITORING, REPORTING system, and so on EASYTOOLS IMPLEMENTED ADD-ONS AddOns for touch panels, controls, data types, forms, media, documents, 3D, They are completely free to download (including every license pack) Open Source community to include more than 1000 tools in the system by community BUILT SYSTEMS IN 14 DAYS LicenseSrv MultiOS license server with listening API GET/POST server / generation of unlimited static/dynamic CODES and management client GUIDES Windows XP+ Implementation Production Guides for Production Companies For office / touch panels with unlimited clients and printing options ShoPingER Windows XP+ MultiBranch Quotation/Order/Invoicing System with multimedia files supported by unlimited clients and printing capabilities LicenceShoper MultiOS License Server PLUS Windows XP+ MultiBranch Billing System [LicenseSrv + ShoPingER] SOLUTION - WHERE TO FIND COMPLETE INFORMATION All documentation, license, case study, price list, media, developer information, help, manuals, technology information, installation, images, videos, downloads, etc. can be found here or: PROJECT IMPLEMENTATION CASE STUDY PROJECTS USING IDEAS For thinking, the development of tools and work with them worthy in the 21st century The first use of this solution was a big change in a manufacturing company For 1000 workers, but it was only four days work for the IT department Implementation of production guides as a task for 4 days CZ In Case Studies Creation of the Billing System as a replacement for the system with discontinued support. Creation of the ShoPingER Invoicing System with a large overlap in 14 days] All Windows Applications are available to try online in the Application ShowRoom https://KlikneteZde.Cz Golden - Backend Server Development Plan Create Backend Server Generator Create Full Customer Support with Project Managements EASYBuilder - WPF Fronted System Builder Development Plan Publish XAML Generator Graphical Tool with Templates Support implement Global Context menu for all DataLists with Count of API record request setting, Properties of Datalist, DataRequest,DataList Controller Convert WPF System to WebApplication for Windows/Linux with all graphics and possibilities Create SYSTEM Generator Create Metro4 Full compatible WEB SYSTEM Variant Implement FastReport Tool (Replace FYI Reporting) Recommended Practices Using References of Variables or Classes - Maximum Saving Memory Performance For All processes which is modified by One Person in One Time - Typical System Using In simple explanation and absolut ideally working with Data - Maximum Clean Code Data flow modify one Variable or Class on Way Over More Sequenced Methods From API List Logic You working only With Primary API Dataset and few sets of Dials For standard Using its best way For Maximum clean code without Exeption Is calculating that you Have Full or Extended Dataset for API everytime Point For Data loading \"'SetRecord' Method\" - load data from model to Dataset Variable Some Operations where you can change data values Point For Recapitulate full Dataset and Save Info Global Server Running: https://Kliknetezde.Cz:5000/ Generators & Client Support is Preparing: https://Kliknetezde.Cz:5000/DashBoard Youtube: https://www.youtube.com/playlist?list=PLmE7gP9LTBimNJQ444ypG8HVce23fa2Hb Facebook: https://www.facebook.com/GroupWareSolution LinkedIn: https://www.linkedin.com/in/libor-svoboda-7b96014a/ Eshop: https://GroupWare-Solutions.Eu WebPages: https://GroupWare-Solution.Eu Online Application for testing: Https://KlikneteZde.Cz GitHub Complete Information and Help: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873 16.11.2023 Spuštěna Centrální Dokumentace Která je online vždy po ruce Aktuální stav je již Robustní řešení, které nikdo nechápe a já škemrám o práci, přitom toto jsou plánované body udělat povečerech po práci během 3 dní (šlo by za 5 pracovních) - Monitorovaní Změn wwwroot a Update klientských spojení - hotovo - nastoje generovani XML, DB schema - v IS systemu Hotovo - dynamicke API z SQL - Vize 1Endpoint pro SQL dotazy (Agenda), vysledek Neomezený dynamický API Server bez nutnosti programovat - Zozčlenění Cwentrální dokumentace do všech vytvořených/použitých klientů chybí MD i do Docs - rozšířit server konfigurace z mnoha 1x nastavení lze udělat Server Agendy"
  },
  "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ÚvodníInformace.html": {
    "href": "EASY-IT-CENTER-SERVER/bin/Debug/net6.0/Docs/ÚvodníInformace.html",
    "title": "",
    "keywords": "EN: New in the menu \"Absolutely unique EASY SYSTEM BUILDER\" absolutely easy to create a 3-tier system (ANY DB, BACKEND-SERVER, FRONTEND-KLIENT) with excel knowledge Just create a Table for Data and a Form, all in graphic designers So you literally click on the system, 1 table every day = sales system with orders and offers per month And that's not all, by any chance. It doesn't have to be only a data system, but also a multimedia one without any problem, for cutting videos, working with photos or 3D or even a CONTROL SYSTEM for machine control (Currently SIEMENS PLC is supported), or any other Hardware after delivery of specifications. Or the Control system, Backup, DataWarehouse, Controlling, BI OLAP, Flow Processes, Production, Information or business touch Terminals. IT CAN ALSO BE USED ONLY AS AN EXTENSION OR CONNECTION OF SYSTEMS The starting cost for the core is only 10,000 CZK / 400 Euro, and you can try it yourself or order cheaply what you want to add there. Don't bow down to the system, GET A CUSTOMIZED SYSTEM. For idea: invoicing system with OBJ+NAB+MULTI BRANCHES, WAREHOUSE, CHECKOUT - 14 DAYS implementation of a touch terminal in production for work reports - 4 DAYS A system for hotels including room agency, invoicing and orders is currently being created - 1 MONTH Free updates, 1 development for all clients via shared project agendas in code Unlimited users, unlimited printing, unlimited options, tutorials, tips, tricks, advice, Prepared for all types of systems and terminals for MS WINDOWS INTELLIGENT DOCUMENTATION: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN/ CODE: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN ONLINE EXAMPLE: https://kliknetezde.cz SO DON'T DELAY AND CALL TODAY BEFORE THE PRICE GOES UP BACKEND SERVER CAN BE USED INDEPENDENTLY FOR ANY OTHER MULTIPLATFORM PROJECT IT Architect Libor Svoboda GroupWare-Solution.Eu Tel: 00420 724986873, email: Libor.Svoboda@GroupWare-Solution.Eu UNIVERSAL MODERN BE + MS FE SOLUTION FOR BUILDING ANY 3-layer technological software or its parts For thinking, the development of tools and work with them worthy in the 21st century Golden - Universal multi-platform MultiDatabase Backend server solution with all standard technologies implemented EASYSYSTEMBuilder - Universal modern Metro WPF Frontend System Builder solution for quick and easy development of any system with minimal knowledge Combined solution - is a simple solution for rapid development of any modern system, runs perfectly on prepared System Core and templates for Graphical/Click Development Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Complete free projects codes, templates, help, tips, trics, etc: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN GroupWare-Solutions FOR Universal IT World SolutionsVisions&Ideas.MD AUTO_STEPS_Look_First.md CoreStructureDefinition.md DATABASES.md Golden_Code_Help.MD EASYSYSTEMBuilder_Code_Help.md EASYTools_3rdFreeAddons.MD FIYReporting.md OS_GIT_GCLOUD_WIN_LIN_DOCKER_Help.md SolutionsChangeLog.MD 3rdPartyVisionsTips.md SUMMARY.md EASY-SYSTEM-Builder Visual Studio project solution EASYSYSTEMBuilder for C# WPF Low/no code solution For immediate development of your own SYSTEM: FOR EVERY Company/Data Management/IS/OS/HW Multilingual WPF application supported Full support for the creation of any MS system (modern SAP, etc.). Control system with graph support Support for a unique media system, Touch terminals supported Bussiness/City/Country/ANY touch touch terminals on Windows AIO monitors are supported NEXT YEAR Web Convert Support for LINUX/WINDOWS Thousands of IS/OS/etc. tools on Github for free Transparent clean code Low/no code development support - Click-to-click graphic development For standard IT/terminal systems development, the XAML graphical Builder with Class Copy is all you need for development System updates are free Code updates and all changes are public 1. DataWorking/IO/PRINT/SHOW With all types of data form templates for standardized: DATAView / DATADetail / DATAView with SubDATAview / DATAView with SubFullDataDetail 3D / Document / Video 1. To build ANY information / multimedia / control / flow / reporting and other systems COPY/PASTE DEVELOPMENT PRICE 5000CZK/200EURO - PROJECT LICENSE EASY-DATA-CENTER Visual Studio project solution Golden ASPNETCORE6 providing: Simple development of Universal secure Multiplatform MultiDB Backend Server With RESTFULL / WEBSOCKET implementations With all types of templates for INSERT / UPDATE / DELETE / SELECT / PROCEDURE / SUBFORMDATA / etc. WITH DATABASE, table template, Procerure template, view template, Backup/restore/set DB rights and other examples With tables, indexes, foreign keys in all standard DB uses **COPY/PASTE DEVELOPMENT PRICE 5000CZK/200EURO - PROJECT LICENSE** FYI Reporting - Report Editor / Viewer FreeWare Full Report Designer and Viewer for printing all types of documents / barcodes, EAN, QR EASYTOOLS Add-ons for touch panels, controls, data types, forms, media, documents, 3D, They are completely free to download (including every license pack) Open Source community to include more than 1000 tools in the system by community EXISTING CLONE SYSTEMS CREATED IN 14 DAYS LicenseSrv MultiOS license server with listening API GET/POST server / generation of unlimited static/dynamic license CODES and application client to manage the Server GUIDES Windows XP+ Implementation of production sources in the production of a production company For office / touch panels with an unlimited number of clients and the possibility of printing ShoPingER Windows XP+ Multi Branch Quotation/Order/Invoicing system with multimedia files supported by unlimited clients and printing capabilities LicenceShoper MultiOS License Server PLUS Windows XP+ MultiBranches Billing System [LicenseSrv + ShoPingER] SOLUTION - WHERE TO FIND COMPLETE INFORMATION All documentation, license, case study, price list, media, developer information, help, manuals, technology information, installation, images, videos, downloads, etc. can be found here: Info Global Server Running: https://Kliknetezde.Cz:5000/ Generators & Client Support is Preparing: https://Kliknetezde.Cz:5000/DashBoard Youtube: https://www.youtube.com/playlist?list=PLmE7gP9LTBimNJQ444ypG8HVce23fa2Hb Facebook: https://www.facebook.com/GroupWareSolution LinkedIn: https://www.linkedin.com/in/libor-svoboda-7b96014a/ Eshop: https://GroupWare-Solutions.Eu WebPages: https://GroupWare-Solution.Eu Online Application for testing: Https://KlikneteZde.Cz GitHub Complete Information and Help: https://github.com/liborsvoboda/EASYSYSTEM-EASYSERVER-EN Complete Development Documentation and Smart Search: https://liborsvoboda.github.io/EASYSYSTEM-EASYSERVER-EN Company contact for suppliers Email: Libor.Svoboda@GroupWare-Solution.eu Libor.Svoboda@KlikneteZde.Cz Address: Street: Žlutava 173 City: Žlutava PostCode: 761 63 State: Czech Republic Phone: 00420 724 986 873"
  },
  "index.html": {
    "href": "index.html",
    "title": "Dokumentace EasyITcenter to je GroupWare",
    "keywords": "Dokumentace EasyITcenter to je GroupWare Krátký Úvod pro seznámení s Projektem Easy IT center a jeho významu a přínosem pro celý svět. Aktuální verzi EasyITcenter můžete vidět online. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz Dokumentace EasyITcenter to je Groupware EASY-IT-CENTER [EIC] je NETCORE6 C# Visual Studio Projekt zaměřený na extrémně snadný a rychlý vývoj Backend API serveru pomocí připravených Šablon Formulářů. Projekt se ale Rozrostl díky snadnosti tvorby do Nyní komplexní správy IT, protože jako bývalý IT admin v 15 firmách to byly první agyndy co mě napadly. ESB je tak Univerzální Server s Backend API a jeho vývojem pouhým kopírováním existujících API šablok ke jménům nově vztvořených Tabulek. A po Dynamickém API nebude potřeba AI to, a Backend Server si nastaví každý sám Dynamickým QueryBuilderem. Nyníí tedy Stačí pouze Vytvořit DB Tabulku - Podporovýny jsou všechny typy DB serverů i Všechny Typy OS. Po vytvoření Tabulky Scaffold Aktualizuje DB Schema a vy jen Doplníte API šablonu k novým Tabulkám. To je vše Co budete chtít vyvjíjet. A brzy toito již jen online a stažením updatovaného Projektu. Server Zabírá sám o sobě 60MB. API šablony jsou stále stejné = REST FULL a vy tedy nemusíte nic než nastavit správný názeb Tabulky. Vše ostatní je součástí šablony, která obsahuje Definici. Implementované Technologie Přes 100+ implemenovaných Technologií dává znát možnostem Tohoto Řešení. Tyto technologie nabídly zaimlpementovat celou podnikoou správu IT do jediného Serveru naví s administrací jakou můžou ostatní systémy jen závidět. Nyní je na programu multiWeb Hosting, Správa Portálů Online, a následně weřejný Portal pro vytváření webů, prezentací, galerií ATD. Ne v tomto Případě. Frameforků je implementováno hned 5. Metro, WPF NET, XCEED, WpfLightToolkit, HelixToolkit Tím máme vyřešeny objekty pro formuláře více než nadstadartně. A nejen to, lze implementovat i naprosto rozdílné technologie, jako např WEB aplikace pouhým vložením do rámečku Okna Windows a máte novou aplikaci. Systém totiž hostuje vlastní web server. Aktuálně je v Systému implementováno přes 100 pečlivě vybraných technologií, které nabízí tolik možností, že je není ani možné všechny využít. Modularní Server to jsou nová API Nové Moduly to jsou nová APi se službami. A takových bude přibývat ještě spousta. Primárně ale server slouží jako WebPortal a Backend Server, brzy ještě Multi WebHosting. Moduly Budou Přybývat ode mne jako nové API služby, např WEbScraping, Dynamic API Managemnt. Ten jje v plánu a Ani API už nebude otřeba Programovat. WebPortal Již nyní obsahuje Nativní Web Stránky a Celý je uložen v Databázi. Řešení EasyITcenter Obsahuje Servery Multi Backend API Server - Any DB support Server Plánovač Úloh Procesy, Emaily, Socket, SQL ANY IT Monitoring HW/SW/SERVICE/NET Hromadný Emailing API Privátní Git Server Privátní FTP Server Web Portal + Online Dev Licenční Server Server MultiMedia Dokumentace Web Project Task Managenent Server Web Portal s Online vývojem z Webu či Systému Data Service API pro Controling API pro Reporty, Pivot, Grafy Nástroje a Moduly AutoWeb s Popisem a Testem API Generátor DB Schema Web Dashboard DB Schema Online Web Dasboard Monitor HW / SW /Service / NET Web Administrace Serveru Dokumentace Web Administrace Portálu Web Project Task Management DashBoard WebStatic Studio Dashboad pro vývoj WEB online WebLiveDataMonitor Web DatabaseManager WebShareFolderOnline WebSocketServerMonitor Dev C#Online Private GitHub Dashboard Web Portal a Web Hosting s implementací 10+ Web Mopderních Frameworků 200+ Web Knihovny Funkcinalit 1000+ Web Knihovny Objektů 100+ Web Editory, Prohlížeče, Galerie 50x Moderní Web stránky 50 Předloh portálů,Systémů, Panelů Web Portal s Online Vývojem z Webu či ze Systému - Metro4 Web Server Slouží k provozu z úložiště DB,souborové,ftp 1x Generovaného Web Portál: s možností přenosu do Statické Stránky pro tvorbu dalšího portálu s Neomezeným počtem další statických webů, stránek, aplikací, Dashbordů, Galeríí, Dokumentací a všeho co si jen dokážete představit... s jednoduchým vývojem z editorů, Visual Studia, Systému ESB, Web Portálu, Notepadu, čeho chcete.. bez jakéhokoliv buildování a nasazování na server, to již provádíte přímo pouhou editací souborů... Vývojem App,Stránek,atd.. z Module Editoru pro vývoj pouhým editorem máte připraveno ihned k použití: original Dokumentace Použitých technologii ve VŠECH JAZYCÍCH do DETAILU: nyní již pochopíte všechny možnosti celých řešení Globální Knihovna kódů pro snadný vývoj kopírováním šablon,již obsahuje veškeré příklady nutné pro vývoj XX Html Editory pro editace a tvorbu Stránek Online, k implementaci atd.. XX Code Editory pro komplexní vývoj Webu z Editoru, Vývoj všech typů Webových Aplikací Database Editory SQLite pro možnost samostatného webu s interní DB Inteligentní Online Code Editory s InteliSense XX Statické UI Frameworky pro Tvorbu Webů,Portálů,Intranetů,Aplikací v různých designech XX Statické UI DashBordy pro Tvorbu Webů,Portálů,Intranetů,Aplikací v různých designech X Statické Generátory Dokumentací Static Filemanager , Soubory jsou řešeny přes API XX Statické Grafické nástroje Galerie,Animace,HighLight,Mermaid,Diagramy,Background Player,Video Galerie,... XX Statické Prohlížeče nejrůznějších formátů souborů, Panorama, Office, 3D, Grafy, XML, PDF, MD,.. XX Další Knihovny Stylů CSS pro dodatečné implemetace Animací, Objektů, Celků, Webů XX Javascript Knihovny pro implementaci všemožných funkcionalit do portálu XX šablony aplikací: Vue,React,Next, a všechny ostatní.. cca 50 typů 50 Šablony moderních Webových Stránek XX Generátory statických webových stránek - Celých webových stránek nebo listů webových stránek technoligií Drag&Drop s možností si přidávat pouhým zkopírováním Cokoliv dalšího z Github a internetu Technologický List Seznam Balíčků rozšiřující Jádro Serveru EIC microsoft.visualstudio.web.browserlink\\2.2.0\\ aspnetcore.healthchecks.applicationstatus\\6.0.0\\ aspnetcore.healthchecks.azurestorage\\6.1.2\\ aspnetcore.healthchecks.eventstore\\6.0.3\\ aspnetcore.healthchecks.mongodb\\6.0.2\\ aspnetcore.healthchecks.mysql\\6.0.2\\ aspnetcore.healthchecks.network\\6.0.4\\ aspnetcore.healthchecks.npgsql\\6.0.2\\ aspnetcore.healthchecks.oracle\\6.0.3\\ aspnetcore.healthchecks.prometheus.metrics\\6.0.2\\ aspnetcore.healthchecks.publisher.prometheus\\6.0.2\\ aspnetcore.healthchecks.sqlite\\6.0.2\\ aspnetcore.healthchecks.sqlserver\\6.0.2\\ aspnetcore.healthchecks.system\\6.0.5\\ aspnetcore.healthchecks.ui.client\\6.0.5\\ aspnetcore.healthchecks.ui.core\\6.0.5\\ aspnetcore.healthchecks.ui.inmemory.storage\\6.0.5\\ aspnetcore.healthchecks.ui.mysql.storage\\6.0.5\\ aspnetcore.healthchecks.ui.postgresql.storage\\6.0.4\\ aspnetcore.healthchecks.ui.sqlite.storage\\6.0.5\\ aspnetcore.healthchecks.ui.sqlserver.storage\\6.0.5\\ aspnetcore.healthchecks.ui\\6.0.5\\ aspnetcore.healthchecks.uris\\6.0.3\\ aspnetcore.markdowndocumenting\\2.3.1\\ codemirror.full\\3.1.0\\ dapper\\2.1.35\\ docfx.markdigengine.extensions\\2.75.3\\ docfx.markdigengine\\2.75.3\\ easydata.aspnetcore\\1.5.2\\ easydata.core\\1.5.2\\ easydata.entityframeworkcore.relational\\1.5.2\\ easydata.exporters.closedxml\\1.5.2\\ easydata.exporters.default\\1.5.2\\ easydata.exporters.pdfsharp\\1.5.2\\ erikej.entityframeworkcore.dgmlbuilder\\6.0.0\\ filecontextcore\\3.4.0\\ fubardev.ftpserver.commands\\3.1.2\\ fubardev.ftpserver.filesystem.dotnet\\3.1.2\\ fubardev.ftpserver\\3.1.2\\ ht.minify\\6.0.11\\ htmlagilitypack\\1.11.59\\ korzh.dbutils.export\\1.4.1\\ korzh.dbutils.import\\1.4.1\\ korzh.dbutils.sqlite\\1.4.1\\ korzh.dbutils.sqlserver\\1.4.1\\ korzh.dbutils\\1.4.1\\ leisn.markdigtoc\\0.1.3\\ lettuceencrypt\\1.3.0\\ libgit2sharp\\0.26.2\\ magick.net.core\\13.6.0\\ markdig\\0.36.2\\ markdigbadheaders\\2017.12.11\\ markdigextensions.syntaxhighlighting\\1.0.3\\ markdigextensions.urlrewriter\\1.0.0\\ microsoft.applicationinsights.aspnetcore\\2.22.0\\ microsoft.applicationinsights.eventcountercollector\\2.22.0\\ microsoft.applicationinsights.profiler.aspnetcore\\2.6.0\\ microsoft.aspnetcore.authentication.certificate\\6.0.27\\ microsoft.aspnetcore.authentication.jwtbearer\\6.0.27\\ microsoft.aspnetcore.components.analyzers\\6.0.27\\ microsoft.aspnetcore.components.authorization\\6.0.27\\ microsoft.aspnetcore.components.forms\\6.0.27\\ microsoft.aspnetcore.components.web\\6.0.27\\ microsoft.aspnetcore.components.webassembly.server\\6.0.27\\ microsoft.aspnetcore.components.webassembly\\6.0.27\\ microsoft.aspnetcore.components.webview\\6.0.27\\ microsoft.aspnetcore.components\\6.0.27\\ microsoft.aspnetcore.dataprotection.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.diagnostics.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.hosting.windowsservices\\6.0.27\\ microsoft.aspnetcore.http.connections.client\\6.0.27\\ microsoft.aspnetcore.http.connections.common\\6.0.27\\ microsoft.aspnetcore.identity.entityframeworkcore\\6.0.27\\ microsoft.aspnetcore.identity.ui\\6.0.27\\ microsoft.aspnetcore.mvc.core\\2.2.5\\ microsoft.aspnetcore.mvc.razor.extensions\\6.0.27\\ microsoft.aspnetcore.mvc.razor.runtimecompilation\\6.0.27\\ microsoft.codeanalysis.razor\\6.0.27\\ microsoft.dependencyvalidation.analyzers\\0.11.0\\ microsoft.entityframeworkcore.abstractions\\6.0.27\\ microsoft.entityframeworkcore.analyzers\\6.0.27\\ microsoft.entityframeworkcore.design\\6.0.27\\ microsoft.entityframeworkcore.inmemory\\6.0.27\\ microsoft.entityframeworkcore.relational\\6.0.27\\ microsoft.entityframeworkcore.sqlserver.nettopologysuite\\6.0.27\\ microsoft.entityframeworkcore.sqlserver\\6.0.27\\ microsoft.entityframeworkcore.tools\\6.0.27\\ microsoft.entityframeworkcore\\6.0.27\\ microsoft.extensions.configuration.abstractions\\6.0.0\\ microsoft.extensions.dependencyinjection.abstractions\\6.0.0\\ microsoft.extensions.diagnostics.healthchecks.abstractions\\6.0.27\\ microsoft.extensions.diagnostics.healthchecks.entityframeworkcore\\6.0.27\\ microsoft.extensions.diagnostics.healthchecks\\6.0.27\\ microsoft.extensions.fileproviders.abstractions\\6.0.0\\ microsoft.extensions.hosting.abstractions\\6.0.0\\ microsoft.extensions.hosting.windowsservices\\6.0.1\\ microsoft.extensions.hosting\\6.0.1\\ microsoft.extensions.identity.core\\6.0.27\\ microsoft.netcore.dotnethostpolicy\\6.0.27\\ microsoft.visualstudio.services.client\\16.205.1\\ microsoft.visualstudio.web.codegeneration.design\\6.0.16\\ microsoft.visualstudio.web.codegeneration.entityframeworkcore\\6.0.16\\ microsoft.visualstudio.web.codegeneration\\6.0.16\\ mimekit\\4.3.0\\ mimetypes\\2.4.1\\ mirrorsharp.aspnetcore\\4.0.0\\ mirrorsharp.common\\3.0.8\\ monaco.pathtree\\1.2.2\\ morincer.markdig.renderers.docx\\1.0.1\\ newtonsoft.json\\13.0.3\\ npoi\\2.6.2\\ nuglify\\1.21.4\\ opengraph-net\\4.0.1\\ pek.markdig.highlightjs\\0.5.1\\ quartz.aspnetcore\\3.8.1\\ quartz.extensions.dependencyinjection\\3.8.1\\ quartz.extensions.hosting\\3.8.1\\ quartz.jobs\\3.8.1\\ quartz.plugins\\3.8.1\\ simplemvcsitemap\\4.0.1\\ snickler.rsscore\\2.0.0\\ statik.files\\0.14.0\\ statik\\0.14.0\\ swashbuckle.aspnetcore.annotations\\6.5.0\\ swashbuckle.aspnetcore.newtonsoft\\6.5.0\\ swashbuckle.aspnetcore.schemabuilder\\1.6.0\\ swashbuckle.aspnetcore.swagger\\6.5.0\\ swashbuckle.aspnetcore.swaggergen\\6.5.0\\ swashbuckle.aspnetcore.swaggerui\\6.5.0\\ swashbuckle.aspnetcore\\6.5.0\\ system.appcontext\\4.3.0\\ system.diagnostics.contracts\\4.3.0\\ system.diagnostics.eventlog\\6.0.0\\ system.diagnostics.stacktrace\\4.3.0\\ system.diagnostics.textwritertracelistener\\4.3.0\\ system.diagnostics.tracesource\\4.3.0\\ system.reactive\\6.0.0\\ system.servicemodel.syndication\\6.0.0\\ system.serviceprocess.servicecontroller\\6.0.1\\ webstoating.markdig.prism\\1.0.0\\ westwind.aspnetcore.livereload\\0.4.2\\ westwind.aspnetcore.markdown\\3.16.0\\ Centrální Správa IT Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba, Systém je Tenký/Tlustý Klient Již Nyní Obsahuje Kompletní centrální Správu IT pro Vaši Společnost Chtějte od svého IT oddělení Více a pořidtě jim toto řešení ještě dnes Jednoduchý Vývoj API - Webů - Aplikací Vývoj je už jen kopírování a vytváření nových tabulek dle potřeby. Řešení nabízí 2x více než Kdokoliv. Dvojí administrace je možná jak ze Systému, Tak i z Webu, Vyvynutí jednoho nebo druhého je stejně snadné na obou stranách. Vývoj Webu je Čistě 1-stránková Statická Aplikace. Takže Změny provádíte hned. Vývoj Serveru a Systému se provádí pomocí Visual Studia nebo již Brzy Online z Portálu. Sstémy bude možné Updatovat a vznikne i Distibuce Agend pro klienty, tedy možnost přivýdělku. Spolupráce, či Cokoliv jinéhjo je vždy Vítána. Právě se Implementuje Subdomain Web Hosting - Multi WebServer React,Node,Next,Static Client Dev Portal s Online Nástroji pro správu Projektů C# Online Centrální Logika Server Distributor Serveru a Systému Online Generátor Serverů Online Generátor Systémů SSH Server Online Dev, Web, Info, Help Portal JS Knihovny Statické nástoje Dynamic User Api - pro Controling, Reporty, Pivot, Grafy Neomezené Možnosti v Jediném Řešení Toto Řešení tak již nyní nabízí doslova unikátní možnosti nastavení jak webových systému, Tak Desktopových Aplikací, A c chcete Více? Plnohodnotná Správa celého IT včetně vlastího IS je součástí Řešení. Vlastní Web s možností kdykoliv si cokoliv ONLINE upravit a navíc jak ze Systému přes Editory či Online pomocí Web Editorů. Chybí jen Vlastní Email Server, který je již taky předchystaný. I Tak Je nachystána další Stovka různých Řešení, která budou postupně Implementována a nabídnuta Zákazníkům k Aktualizaci či rozšíření. Už Bude na každém z vás Jestli se dále Vydáte Vlastní Cestou, nebo Své Úsilí spojíme v plodné a přínosné činnosti. Jednoduchá Instalace Instalace na OS Windows provedete pomocí běžného Instalátoru. Instalace na OS LINUX/MACOS dle přiloženého Návodu Server Funguje jako Systémová Služba Systém je (tlustší)Tenký Klient (tlustý jen vekostí díky vlastnímu serveru,lze očistit na velikost 20MB) Nejlevnější ŘEŠENÍ IT může být Nejlepší To vám nabízí toto řešení. Vyvynutí systému si můžete objednat a díky již existujícím řešením je vývoj raketově rychlý. Nemluvě o implementacích technoogií pouze 1x, Následně je zařazena do výbavy Systému a díky portálu a chystanému Centrálnímu Vývoji pro aktualizace, centralizovaný vývoj a Vývoj Systému Online přes internet pomocí Grafického Studia to bude jen zábava. A mnoho dalšího snad najde své Zájemce Toto byl jen malinký výčet co vše je v projektu obsaženo a kam míří. Pokud vás Projekt zaujal, neváhejte mne kontaktovat a pořídit si jej třeba ještě dnes. Žádná investice se vám nevrátí tak rychle, jako v tomto případě. Podívejte se na Server online hned Teď Aktuální verzi Serveru najdete na KlikneteZde.cz. Online dokumentace, příklady, Git, Knihovny kódů, Nástroje, Online Dev Studio a centrální správu projektů naleznete již nyní či v blízké budoucnosti na tomto portálu. Již Nyní k dispozici 30denní plná verze Serveru EIC i Systému ESB k vyzkoušení ZDARMA. Další informace o projektech EIC a ESB na Portálu KlikneteZde.cz EIC + ESB = Nerozlučná Dvojice, která spolu dokáže VŠE"
  }
}