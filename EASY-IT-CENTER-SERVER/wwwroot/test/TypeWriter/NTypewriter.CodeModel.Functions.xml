<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NTypewriter.CodeModel.Functions</name>
    </assembly>
    <members>
        <member name="T:NTypewriter.CodeModel.Functions.ActionFunctions">
            <summary>
            Set of functions that operates on IMethod
            </summary>
            <summary>
            Set of functions that operates on IMethod
            </summary>
            <summary>
            Set of functions that operates on IMethod
            </summary>
            <summary>
            Set of functions that operates on IMethod
            </summary>
            <summary>
            Set of functions that operates on IMethod
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ActionFunctions.BodyParameter(NTypewriter.CodeModel.IMethod)">
            <summary>
            Returns parameter that receives content sent to a webapi action in a request body.
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ActionFunctions.HttpMethod(NTypewriter.CodeModel.IMethod)">
            <summary>
            Returns the http method used with a webapi action.
            The http method is extracted from Http* or AcceptVerbs attribute or by naming convention if no attributes are specified.
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ActionFunctions.Parameters(NTypewriter.CodeModel.IMethod,System.Boolean)">
            <summary>
            Returns parameters that receive content sent to a webapi action.
            If _includeBodyParameter_ is specified as false, then the Parameter list returned will not include the parameter that is being sent in the body of the request.
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ActionFunctions.ReturnType(NTypewriter.CodeModel.IMethod)">
            <summary>
            Returns type that is returned from action unwrapped from Task and ActionResult generics
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ActionFunctions.Url(NTypewriter.CodeModel.IMethod)">
            <summary>
            Returns the url for the Web API action based on route attributes (or the supplied convention route if no attributes are present).
            Route parameters are converted to TypeScript string interpolation syntax by prefixing all parameters with $ e.g. ${id}.
            Optional parameters are added as QueryString parameters for GET and HEAD requests.
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.ParametersFunctions">
            <summary>
            Parameters functions
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.ParametersFunctions.ToTypeScript(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.IParameter},System.String)">
             <summary>
            
             </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.StringFunctions">
            <summary>
            Set of functions that operates on String
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.StringFunctions.ToCamelCase(System.String)">
            <summary>
            Converts text case to CamelCase
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.StringFunctions.ToUpperFirst(System.String)">
            <summary>
            Converts first letter of the given string to upper case
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.StringFunctions.ToLowerFirst(System.String)">
            <summary>
            Converts first letter of the given string to lower case
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.StringFunctions.SplitIntoSeparateWords(System.String)">
            <summary>
            It tries to extract separate words from string
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.SymbolFunctions">
            <summary>
            Set of functions that operates on ISymbolBase
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolFunctions.HasAttribute(NTypewriter.CodeModel.ISymbolBase,System.String)">
            <summary>
            Checks if symbol is decorated with an attribute
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.SymbolsFunctions">
            <summary>
            Set of filters that operates on IEnumerable&lt;ISymbolBase&gt;
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceStartsWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the beginning of their namespace
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceDoesNotStartWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the beginning of their namespace
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceEndsWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the end of their namespace
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceDoesNotEndWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the end of their namespace
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceMatches(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by regex pattern
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNamespaceDoesNotMatch(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by regex pattern
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameStartsWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the beginning of their name
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameDoesNotStartWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the beginning of their name
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameEndsWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the end of their name
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameDoesNotEndWith(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the end of their name
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameMatches(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by a regex pattern
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.WhereNameDoesNotMatch(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by a regex pattern
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.ThatHaveAttribute(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the presence of an attribute
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.ThatDoNotHaveAttribute(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase},System.String)">
            <summary>
            Filters symbols by the absence of an attribute
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.ThatArePublic(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase})">
            <summary>
            Filters symbols by the public access modifier
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.ThatAreStatic(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase})">
            <summary>
            Filters symbols by the static modifier
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.SymbolsFunctions.ThatAreNotStatic(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.ISymbolBase})">
            <summary>
            Filters symbols by the static modifier
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.SearchIn">
            <summary>
            Areas of the search
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.Properties">
            <summary>
            Properties
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.Methods">
            <summary>
            Methods
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.Fields">
            <summary>
            Fields
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.BaseClass">
            <summary>
            BaseClass
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.Interfaces">
            <summary>
            Implemented interfaces
            </summary>
        </member>
        <member name="F:NTypewriter.CodeModel.Functions.SearchIn.All">
            <summary>
            All
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.TypeFunctions">
            <summary>
            Set of functions that operates on IType
            </summary>
            <summary>
            Set of functions that operates on IType
            </summary>
            <summary>
            Set of functions that operates on IType
            </summary>
            <summary>
            Set of functions that operates on IType
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypeFunctions.AllReferencedTypes(NTypewriter.CodeModel.IType,NTypewriter.CodeModel.Functions.SearchIn)">
            <summary>
            Returns all types that are used in definition of a given type.
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypeFunctions.ToTypeScriptDefault(NTypewriter.CodeModel.IType)">
            <summary>
            The default value of the type.
            (Dictionary types returns {}, enumerable types returns [],
            boolean types returns false, numeric types returns 0, void returns void(0),
            Guid types return empty guid string, Date types return new Date(0),
            all other types return null)
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypeFunctions.ToTypeScriptType(NTypewriter.CodeModel.IType,System.String)">
            <summary>
            Converts type name to typescript type name
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypeFunctions.Unwrap(NTypewriter.CodeModel.IType)">
            <summary>
            Returns the first TypeArgument of a generic type or the type itself if it's not generic.
            </summary>
        </member>
        <member name="T:NTypewriter.CodeModel.Functions.TypesFunctions">
            <summary>
            Set of filters that operates on IEnumerable&lt;IType&gt;
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypesFunctions.ThatImplement(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.IType},System.String)">
            <summary>
            Filters types based on if a type implements given interface (directly or indirectly) 
            </summary>
        </member>
        <member name="M:NTypewriter.CodeModel.Functions.TypesFunctions.ThatInheritFrom(System.Collections.Generic.IEnumerable{NTypewriter.CodeModel.IType},System.String)">
            <summary>
            Filters types based on if a type inherits directly from given type
            </summary>
        </member>
    </members>
</doc>
