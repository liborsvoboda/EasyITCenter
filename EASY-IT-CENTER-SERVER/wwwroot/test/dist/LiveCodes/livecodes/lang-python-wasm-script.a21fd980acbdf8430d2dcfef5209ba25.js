"use strict";(()=>{var f=["esm.sh","skypack","esm.run","jsdelivr.esm","fastly.jsdelivr.esm","gcore.jsdelivr.esm","testingcf.jsdelivr.esm","jsdelivr.b-cdn.esm","jspm"],u=["jsdelivr","fastly.jsdelivr","unpkg","gcore.jsdelivr","testingcf.jsdelivr","jsdelivr.b-cdn","npmcdn"],j=["jsdelivr.gh","fastly.jsdelivr.gh","statically","gcore.jsdelivr.gh","testingcf.jsdelivr.gh","jsdelivr.b-cdn.gh"],n={getModuleUrl:(s,{isModule:e=!0,defaultCDN:r="esm.sh"}={})=>{s=s.replace(/#nobundle/g,"");let o=x(s,e,r);return o||(e?"https://esm.sh/"+s:"https://cdn.jsdelivr.net/npm/"+s)},getUrl:(s,e)=>s.startsWith("http")||s.startsWith("data:")?s:x(s,!1,e||U())||s,cdnLists:{npm:u,module:f,gh:j},checkCDNs:async(s,e)=>{let r=[e,...n.cdnLists.npm].filter(Boolean);for(let o of r)try{if((await fetch(n.getUrl(s,o),{method:"HEAD"})).ok)return o}catch{}return n.cdnLists.npm[0]}},U=()=>{if(globalThis.appCDN)return globalThis.appCDN;try{return new URL(location.href).searchParams.get("appCDN")||n.cdnLists.npm[0]}catch{return n.cdnLists.npm[0]}},x=(s,e,r)=>{let o=e&&s.startsWith("unpkg:")?"?module":"";s.startsWith("gh:")?s=s.replace("gh",j[0]):s.includes(":")||(s=(r||(e?f[0]:u[0]))+":"+s);for(let i of v){let[c,l]=i;if(c.test(s))return s.replace(c,l)+o}return null},v=[[/^(esm\.sh:)(.+)/i,"https://esm.sh/$2"],[/^(npm:)(.+)/i,"https://esm.sh/$2"],[/^(node:)(.+)/i,"https://esm.sh/$2"],[/^(jsr:)(.+)/i,"https://esm.sh/jsr/$2"],[/^(skypack:)(.+)/i,"https://cdn.skypack.dev/$2"],[/^(jsdelivr:)(.+)/i,"https://cdn.jsdelivr.net/npm/$2"],[/^(fastly\.jsdelivr:)(.+)/i,"https://fastly.jsdelivr.net/npm/$2"],[/^(gcore\.jsdelivr:)(.+)/i,"https://gcore.jsdelivr.net/npm/$2"],[/^(testingcf\.jsdelivr:)(.+)/i,"https://testingcf.jsdelivr.net/npm/$2"],[/^(jsdelivr\.b-cdn:)(.+)/i,"https://jsdelivr.b-cdn.net/npm/$2"],[/^(jsdelivr\.gh:)(.+)/i,"https://cdn.jsdelivr.net/gh/$2"],[/^(fastly\.jsdelivr\.gh:)(.+)/i,"https://fastly.jsdelivr.net/gh/$2"],[/^(gcore\.jsdelivr\.gh:)(.+)/i,"https://gcore.jsdelivr.net/gh/$2"],[/^(testingcf\.jsdelivr\.gh:)(.+)/i,"https://testingcf.jsdelivr.net/gh/$2"],[/^(jsdelivr\.b-cdn\.gh:)(.+)/i,"https://jsdelivr.b-cdn.net/gh/$2"],[/^(statically:)(.+)/i,"https://cdn.statically.io/gh/$2"],[/^(esm\.run:)(.+)/i,"https://esm.run/$2"],[/^(jsdelivr\.esm:)(.+)/i,"https://cdn.jsdelivr.net/npm/$2/+esm"],[/^(fastly\.jsdelivr\.esm:)(.+)/i,"https://fastly.jsdelivr.net/npm/$2/+esm"],[/^(gcore\.jsdelivr\.esm:)(.+)/i,"https://gcore.jsdelivr.net/npm/$2/+esm"],[/^(testingcf\.jsdelivr\.esm:)(.+)/i,"https://testingcf.jsdelivr.net/npm/$2/+esm"],[/^(jsdelivr\.b-cdn\.esm:)(.+)/i,"https://jsdelivr.b-cdn.net/npm/$2/+esm"],[/^(jspm:)(.+)/i,"https://jspm.dev/$2"],[/^(esbuild:)(.+)/i,"https://esbuild.vercel.app/$2"],[/^(bundle\.run:)(.+)/i,"https://bundle.run/$2"],[/^(unpkg:)(.+)/i,"https://unpkg.com/$2"],[/^(npmcdn:)(.+)/i,"https://npmcdn.com/$2"],[/^(bundlejs:)(.+)/i,"https://deno.bundlejs.com/?file&q=$2"],[/^(bundle:)(.+)/i,"https://deno.bundlejs.com/?file&q=$2"],[/^(deno:)(.+)/i,"https://deno.bundlejs.com/?file&q=https://deno.land/x/$2/mod.ts"],[/^(https:\/\/deno\.land\/.+)/i,"https://deno.bundlejs.com/?file&q=$1"],[/^(github:|https:\/\/github\.com\/)(.[^\/]+?)\/(.[^\/]+?)\/(?!releases\/)(?:(?:blob|raw)\/)?(.+?\/.+)/i,"https://deno.bundlejs.com/?file&q=https://cdn.jsdelivr.net/gh/$2/$3@$4"],[/^(gist\.github:)(.+?\/[0-9a-f]+\/raw\/(?:[0-9a-f]+\/)?.+)$/i,"https://gist.githack.com/$2"],[/^(gitlab:|https:\/\/gitlab\.com\/)([^\/]+.*\/[^\/]+)\/(?:raw|blob)\/(.+?)(?:\?.*)?$/i,"https://deno.bundlejs.com/?file&q=https://gl.githack.com/$2/raw/$3"],[/^(bitbucket:|https:\/\/bitbucket\.org\/)([^\/]+\/[^\/]+)\/(?:raw|src)\/(.+?)(?:\?.*)?$/i,"https://deno.bundlejs.com/?file&q=https://bb.githack.com/$2/raw/$3"],[/^(bitbucket:)snippets\/([^\/]+\/[^\/]+)\/revisions\/([^\/\#\?]+)(?:\?[^#]*)?(?:\#file-(.+?))$/i,"https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4"],[/^(bitbucket:)snippets\/([^\/]+\/[^\/\#\?]+)(?:\?[^#]*)?(?:\#file-(.+?))$/i,"https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3"],[/^(bitbucket:)\!api\/2.0\/snippets\/([^\/]+\/[^\/]+\/[^\/]+)\/files\/(.+?)(?:\?.*)?$/i,"https://bb.githack.com/!api/2.0/snippets/$2/files/$3"],[/^(api\.bitbucket:)2.0\/snippets\/([^\/]+\/[^\/]+\/[^\/]+)\/files\/(.+?)(?:\?.*)?$/i,"https://bb.githack.com/!api/2.0/snippets/$2/files/$3"],[/^(rawgit:)(.+?\/[0-9a-f]+\/raw\/(?:[0-9a-f]+\/)?.+)$/i,"https://gist.githack.com/$2"],[/^(rawgit:|https:\/\/raw\.githubusercontent\.com)(\/[^\/]+\/[^\/]+|[0-9A-Za-z-]+\/[0-9a-f]+\/raw)\/(.+)/i,"https://deno.bundlejs.com/?file&q=https://raw.githack.com/$2/$3"]];var{getUrl:p,getModuleUrl:C}=n,g="5.5.2";var y="0.6.64",B=p(`malinajs@${y}/malina.js`);var D=`https://typescript.azureedge.net/cdn/${g}/monaco/min/vs`;var d=p("https://cdn.jsdelivr.net/pyodide/v0.24.0/full/");var q=p(`typescript@${g}/lib/typescript.js`);if(livecodes.pyodideLoading===void 0){let s=document.createElement("script");s.src=`${d}pyodide.js`,document.head.append(s)}window.addEventListener("load",async()=>{parent.postMessage({type:"loading",payload:!0},"*");let s="";document.querySelectorAll('script[type="text/python"]').forEach(t=>s+=t.innerHTML+`
`);async function r(){if(livecodes.pyodideLoading!==!1){if(livecodes.pyodideLoading){await livecodes.pyodideLoading;return}livecodes.pyodideLoading=new Promise(async t=>{livecodes.pyodide=await loadPyodide({indexURL:d}),await livecodes.pyodide.loadPackage("micropip"),livecodes.micropip=livecodes.pyodide.pyimport("micropip"),livecodes.pyodideLoading=!1,t()}),await livecodes.pyodideLoading}}async function o(){if(livecodes.pyodideState)try{livecodes.pyodide.pyodide_py._state.restore_state(livecodes.pyodideState)}catch{livecodes.pyodideLoading=void 0,await r()}}async function i(){await m;let t=`
from js import prompt
def input(p):
    return prompt(p)
__builtins__.input = input
`.trim();await livecodes.pyodide.runPythonAsync(t)}async function c(t){let b=[...livecodes.pyodide.pyodide_py.code.find_imports(t)].filter(a=>!(a in livecodes.pyodide.loadedPackages));for(let a of b)try{await livecodes.micropip.install(a)}catch{}}async function l(t){await m,await o(),await i(),await c(t);try{livecodes.pyodideState=livecodes.pyodide.pyodide_py._state.save_state(),await livecodes.pyodide.runPythonAsync(t)}catch(h){console.log(h)}}let m=r();await l(s),parent.postMessage({type:"loading",payload:!1},"*")});})();
