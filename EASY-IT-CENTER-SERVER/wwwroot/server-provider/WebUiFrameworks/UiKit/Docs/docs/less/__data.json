{"type":"data","nodes":[{"type":"data","data":[{"navigation":1},{"Getting started":2,"Components":14},{"Introduction":3,"Installation":4,"Less":5,"Sass":6,"JavaScript":7,"Webpack":8,"Custom icons":9,"Avoiding conflicts":10,"Accessibility":11,"RTL support":12,"Migration":13},"introduction","installation","less","sass","javascript","webpack","custom-icons","avoiding-conflicts","accessibility","rtl","migration",{"Accordion":15,"Alert":16,"Align":17,"Animation":18,"Article":19,"Background":20,"Badge":21,"Base":22,"Breadcrumb":23,"Button":24,"Card":25,"Close":26,"Column":27,"Comment":28,"Container":29,"Countdown":30,"Cover":31,"Description List":32,"Divider":33,"Dotnav":34,"Drop":35,"Dropbar":36,"Dropdown":37,"Dropnav":38,"Filter":39,"Flex":40,"Form":41,"Grid":42,"Heading":43,"Height":44,"Icon":45,"Iconnav":46,"Image":47,"Inverse":48,"Label":49,"Leader":50,"Lightbox":51,"Link":52,"List":53,"Margin":54,"Marker":55,"Modal":56,"Nav":57,"Navbar":58,"Notification":59,"Off-canvas":60,"Overlay":61,"Padding":62,"Pagination":63,"Parallax":64,"Placeholder":65,"Position":66,"Print":67,"Progress":68,"Scroll":69,"Scrollspy":70,"Search":71,"Section":72,"Slidenav":73,"Slider":74,"Slideshow":75,"Sortable":76,"Spinner":77,"Sticky":78,"Subnav":79,"SVG":80,"Switcher":81,"Tab":82,"Table":83,"Text":84,"Thumbnav":85,"Tile":86,"Toggle":87,"Tooltip":88,"Totop":89,"Transition":90,"Upload":91,"Utility":92,"Video":93,"Visibility":94,"Width":95},"accordion","alert","align","animation","article","background","badge","base","breadcrumb","button","card","close","column","comment","container","countdown","cover","description-list","divider","dotnav","drop","dropbar","dropdown","dropnav","filter","flex","form","grid","heading","height","icon","iconnav","image","inverse","label","leader","lightbox","link","list","margin","marker","modal","nav","navbar","notification","offcanvas","overlay","padding","pagination","parallax","placeholder","position","print","progress","scroll","scrollspy","search","section","slidenav","slider","slideshow","sortable","spinner","sticky","subnav","svg","switcher","tab","table","text","thumbnav","tile","toggle","tooltip","totop","transition","upload","utility","video","visibility","width"],"uses":{},"slash":"never"},{"type":"data","data":[{"test":1,"doc":2},false,{"ids":3,"content":13,"title":14},[4,7,10],{"id":5,"title":6},"how-to-build","How to build",{"id":8,"title":9},"create-a-uikit-theme","Create a UIkit theme",{"id":11,"title":12},"how-to-structure-your-theme","How to structure your theme","\u003Ch1>Less\u003C/h1>\u003Cp class=\"uk-text-lead\">Learn how to modify the UIkit styling and create your own theme with Less.\u003C/p>\n\n\u003Cp>When you have \u003Ca href=\"/docs/installation\">installed UIkit\u003C/a> with Less sources, you can compile it and add your own custom theme. \u003Ca href=\"http://lesscss.org/\">Less\u003C/a> is the language that the UIkit styles are written in. This allows you to include customizations in the build process, rather than manually overwriting a lot of CSS rules by hand.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"how-to-build\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#how-to-build\">How to build\u003C/a>\u003C/h2>\u003Cp>The Less source files allow you to customize UIkit. To use the customized version on your website, you need to compile the Less sources into CSS. There are basically two approaches available to you: Set up your own build process or use the build scripts included in UIkit.\u003C/p>\n\u003Ch3 id=\"use-your-own-build-process\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#use-your-own-build-process\">Use your own build process\u003C/a>\u003C/h3>\u003Cp>To include UIkit in your project&#39;s build workflow, you need to import the core UIkit styles (\u003Ccode>uikit.less\u003C/code>) or UIkit with its default theme (\u003Ccode>uikit.theme.less\u003C/code>) into your project&#39;s own Less file. This main Less file then needs to be compiled in any way you like. Read the \u003Ca href=\"http://lesscss.org/usage/\">official Less docs\u003C/a> if you are unsure how to compile Less.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// Import UIkit default theme (or uikit.less with only core styles)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;node_modules/uikit/src/less/uikit.theme.less&quot;\u003C/span>;\n\n\u003Cspan class=\"hljs-comment\">// Your custom code goes here, e.g. mixins, variables.\u003C/span>\n\u003Cspan class=\"hljs-comment\">// See &quot;how to create a theme&quot; below for more info.\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"use-included-build-process\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#use-included-build-process\">Use included build process\u003C/a>\u003C/h3>\u003Cp>If you want to change the styling of UIkit, you can use its build process to create a differently themed version of the CSS, that you can then include in your project. That way you do not need to set up your own build process.\u003C/p>\n\u003Cp>To include your own Less theme in the build process, create a \u003Ccode>/custom\u003C/code> directory, which will contain all of your custom themes.\u003C/p>\n\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> The \u003Ccode>/custom\u003C/code> folder is listed in \u003Ccode>.gitignore\u003C/code>, which prevents your custom files from being pushed into the UIkit repository. You might also have the \u003Ccode>/custom\u003C/code> directory as your own Git repository. That way your theme files are under version control without interfering with the UIkit files.\u003C/p>\n\u003Cp>Create a file \u003Ccode>/custom/my-theme.less\u003C/code> (or any other name) and import the core UIkit styles (\u003Ccode>uikit.less\u003C/code>) or UIkit with its default theme (\u003Ccode>uikit.theme.less\u003C/code>).\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// Import UIkit default theme (or uikit.less with only core styles)\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;../src/less/uikit.theme.less&quot;\u003C/span>;\n\n\u003Cspan class=\"hljs-comment\">// Your custom code goes here, e.g. mixins, variables.\u003C/span>\n\u003Cspan class=\"hljs-comment\">// See &quot;how to create a theme&quot; below for more info.\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Cp>To compile UIkit and your custom theme into CSS, run the pnpm task \u003Ccode>compile\u003C/code> .\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\"># Run once to install all dependencies\u003C/span>\npnpm \u003Cspan class=\"hljs-keyword\">install\u003C/span>\n\n\u003Cspan class=\"hljs-comment\"># Compile all source files including your theme\u003C/span>\npnpm compile\n\n\u003Cspan class=\"hljs-comment\"># Watch files and compile automatically every time a file changes\u003C/span>\npnpm watch\u003C/code>\u003C/pre>\u003C/div>\u003Cp>The generated CSS files will be located in the \u003Ccode>/dist/css\u003C/code> folder.\u003C/p>\n\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> The custom theme is also available in the test files, just navigate your browser to the index of the \u003Ccode>/tests\u003C/code> directory and select your theme from the Dropdown menu.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"create-a-uikit-theme\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#create-a-uikit-theme\">Create a UIkit theme\u003C/a>\u003C/h2>\u003Cp>When you have set up a file to put in your own Less code, you can get started to theme UIkit the way you want. If you have never used Less before, check out the \u003Ca href=\"http://lesscss.org/features/\">language features\u003C/a>. When working with the UIkit Less sources, we have a few recommendations.\u003C/p>\n\u003Ch3 id=\"use-variables\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#use-variables\">Use variables\u003C/a>\u003C/h3>\u003Cp>A lot of customization is possible by simply overwriting the values of already declared variables. You can find all variables for each component inside their Less files of the framework and override them in your theme.\u003C/p>\n\u003Cp>First, find a Less variable you want to change inside the UIkit source. For example, the global link color is defined in \u003Ccode>/src/less/components/variables.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// default value\u003C/span>\n\u003Cspan class=\"hljs-variable\">@global-link-color:\u003C/span> \u003Cspan class=\"hljs-number\">#4091D2\u003C/span>;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Then, overwrite the default by setting a custom value inside your own file, i.e. in \u003Ccode>/custom/my-theme.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// new value\u003C/span>\n\u003Cspan class=\"hljs-variable\">@global-link-color:\u003C/span> \u003Cspan class=\"hljs-number\">#DA7D02\u003C/span>;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>The compiled CSS will then have your custom value. But not only has the global link color changed. Many components make use of the \u003Ccode>@global-*\u003C/code> variables to infer their own colors, and just adapt them slightly. That way you can rapidly create a theme by just changing some global variables.\u003C/p>\n\u003Ch3 id=\"use-hooks\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#use-hooks\">Use hooks\u003C/a>\u003C/h3>\u003Cp>To prevent overhead selectors, we use Mixins from \u003Ca href=\"http://lesscss.org\">Less\u003C/a>, which hook into predefined selectors from the UIkit source and apply additional properties. Selectors don&#39;t have to be repeated throughout all documents and global changes can be made much more easily.\u003C/p>\n\u003Cp>First, find a rule that you want to extend by looking through the component&#39;s Less file, for example \u003Ccode>/src/less/components/card.less\u003C/code> for the Card component:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// CSS rule\u003C/span>\n.uk\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-keyword\">card\u003C/span> {\n    position\u003Cspan class=\"hljs-operator\">:\u003C/span> relative;\n    \u003Cspan class=\"hljs-built_in\">box\u003C/span>\u003Cspan class=\"hljs-operator\">-\u003C/span>sizing\u003Cspan class=\"hljs-operator\">:\u003C/span> border\u003Cspan class=\"hljs-operator\">-\u003C/span>\u003Cspan class=\"hljs-built_in\">box\u003C/span>;\n\n    \u003Cspan class=\"hljs-comment\">// mixin to allow adding new declarations\u003C/span>\n    .hook\u003Cspan class=\"hljs-operator\">-\u003C/span>card();\n}\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Then, inject additional CSS by using the hook inside your own Less file, i.e. in \u003Ccode>/custom/my-theme.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// mixin to add new declaration\u003C/span>\n\u003Cspan class=\"hljs-selector-class\">.hook-card\u003C/span>() { \u003Cspan class=\"hljs-attribute\">color\u003C/span>: \u003Cspan class=\"hljs-number\">#000\u003C/span>; }\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"miscellaneous-hooks\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#miscellaneous-hooks\">Miscellaneous hooks\u003C/a>\u003C/h3>\u003Cp>Should there be neither a variable nor a hook available, you can also create your own selector. To do so, use the \u003Cem>.hook-card-misc\u003C/em> hook and write your selector inside. This will sort your new selector to the right place of the compiled CSS file. Just add the following lines to your own Less file, i.e. to \u003Ccode>/custom/my-theme.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// misc mixin\u003C/span>\n\u003Cspan class=\"hljs-selector-class\">.hook-card-misc\u003C/span>() {\n\n    \u003Cspan class=\"hljs-comment\">// new rule\u003C/span>\n    \u003Cspan class=\"hljs-selector-class\">.uk-card\u003C/span> \u003Cspan class=\"hljs-selector-tag\">a\u003C/span> { \u003Cspan class=\"hljs-attribute\">color\u003C/span>: \u003Cspan class=\"hljs-number\">#f00\u003C/span>; }\n}\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"disable-inverse-component\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#disable-inverse-component\">Disable inverse component\u003C/a>\u003C/h3>\u003Cp>The Inverse component generates CSS to color all components for the according background color. If your project does not need to inverse content colors, you can disable it when compiling Less. This results in a smaller file size of the compiled CSS. To do so, search for Less variables containing \u003Ccode>color-mode\u003C/code> (e.g. \u003Ccode>@card-primary-color-mode\u003C/code>), and set them to \u003Ccode>none\u003C/code>.\u003C/p>\n\u003Cp>To disable the inverse styles completely, set:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-variable\">@inverse-global-color-mode:\u003C/span> none;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>You can also disable the inverse mode for specific components. Here is a complete list of all components.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// Card\u003C/span>\n\u003Cspan class=\"hljs-variable\">@card-default-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@card-primary-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@card-secondary-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Dropbar\u003C/span>\n\u003Cspan class=\"hljs-variable\">@dropbar-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Dropdown\u003C/span>\n\u003Cspan class=\"hljs-variable\">@dropdown-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Navbar\u003C/span>\n\u003Cspan class=\"hljs-variable\">@navbar-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@navbar-dropdown-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Off-canvas\u003C/span>\n\u003Cspan class=\"hljs-variable\">@offcanvas-bar-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Overlay\u003C/span>\n\u003Cspan class=\"hljs-variable\">@overlay-default-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@overlay-primary-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Section\u003C/span>\n\u003Cspan class=\"hljs-variable\">@section-default-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@section-muted-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@section-primary-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@section-secondary-color-mode:\u003C/span> none;\n\n\u003Cspan class=\"hljs-comment\">// Tile\u003C/span>\n\u003Cspan class=\"hljs-variable\">@tile-default-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@tile-muted-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@tile-primary-color-mode:\u003C/span> none;\n\u003Cspan class=\"hljs-variable\">@tile-secondary-color-mode:\u003C/span> none;\u003C/code>\u003C/pre>\u003C/div>\u003Ch2 id=\"how-to-structure-your-theme\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#how-to-structure-your-theme\">How to structure your theme\u003C/a>\u003C/h2>\u003Cp>In the examples above, we have added all custom rules directly to \u003Ccode>/custom/my-theme.less\u003C/code>. When you change a few variables but are happy with the rest, this is perfectly fine. However, for larger customizations, we recommend only using this file as an entry point for the Less compiler. You should sort all rules into a single file per component inside of a subfolder. This is the same structure that you can find in the default theme \u003Ccode>/src/less/uikit.theme.less\u003C/code>.\u003C/p>\n\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> The example assumes you are building a theme in the \u003Ccode>/custom\u003C/code> directory of the full UIkit project. You can adapt these paths if you have set up your own build process.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>custom/\n\n    \u003Cspan class=\"hljs-comment\">&lt;!-- entry file for Less compiler --&gt;\u003C/span>\n    my-theme.less\n\n    \u003Cspan class=\"hljs-comment\">&lt;!-- folder with single Less files --&gt;\u003C/span>\n    my-theme/\n\n        \u003Cspan class=\"hljs-comment\">&lt;!-- imports all components in this folder --&gt;\u003C/span>\n        _import.less\n\n        \u003Cspan class=\"hljs-comment\">&lt;!-- one file per customized component --&gt;\u003C/span>\n        accordion.less\n        alert.less\n        …\u003C/code>\u003C/pre>\u003C/div>\u003Cp>The entry point for the Less compiler, \u003Ccode>/custom/my-theme.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// Core\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;../../src/less/uikit.less&quot;\u003C/span>;\n\n\u003Cspan class=\"hljs-comment\">// Theme\u003C/span>\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;my-theme/_import.less&quot;\u003C/span>;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Your theme folder has one file that imports all single component customizations, \u003Ccode>custom/my-theme/_import.less\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;accordion.less&quot;\u003C/span>;\n\u003Cspan class=\"hljs-keyword\">@import\u003C/span> \u003Cspan class=\"hljs-string\">&quot;alert.less&quot;\u003C/span>;\n\u003Cspan class=\"hljs-comment\">// …\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> With this setup you can remove the import statements of components you do not use. This will produce smaller CSS. Just make sure to preserve the correct import order as listed in \u003Ca href=\"https://github.com/uikit/uikit/blob/develop/src/less/components/_import.less\">src/less/components/_import.less\u003C/a>.\u003C/p>\n","Less"],"uses":{"params":["slug"]}}]}
