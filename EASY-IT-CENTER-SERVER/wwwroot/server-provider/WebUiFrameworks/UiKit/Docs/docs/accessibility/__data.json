{"type":"data","nodes":[{"type":"data","data":[{"navigation":1},{"Getting started":2,"Components":14},{"Introduction":3,"Installation":4,"Less":5,"Sass":6,"JavaScript":7,"Webpack":8,"Custom icons":9,"Avoiding conflicts":10,"Accessibility":11,"RTL support":12,"Migration":13},"introduction","installation","less","sass","javascript","webpack","custom-icons","avoiding-conflicts","accessibility","rtl","migration",{"Accordion":15,"Alert":16,"Align":17,"Animation":18,"Article":19,"Background":20,"Badge":21,"Base":22,"Breadcrumb":23,"Button":24,"Card":25,"Close":26,"Column":27,"Comment":28,"Container":29,"Countdown":30,"Cover":31,"Description List":32,"Divider":33,"Dotnav":34,"Drop":35,"Dropbar":36,"Dropdown":37,"Dropnav":38,"Filter":39,"Flex":40,"Form":41,"Grid":42,"Heading":43,"Height":44,"Icon":45,"Iconnav":46,"Image":47,"Inverse":48,"Label":49,"Leader":50,"Lightbox":51,"Link":52,"List":53,"Margin":54,"Marker":55,"Modal":56,"Nav":57,"Navbar":58,"Notification":59,"Off-canvas":60,"Overlay":61,"Padding":62,"Pagination":63,"Parallax":64,"Placeholder":65,"Position":66,"Print":67,"Progress":68,"Scroll":69,"Scrollspy":70,"Search":71,"Section":72,"Slidenav":73,"Slider":74,"Slideshow":75,"Sortable":76,"Spinner":77,"Sticky":78,"Subnav":79,"SVG":80,"Switcher":81,"Tab":82,"Table":83,"Text":84,"Thumbnav":85,"Tile":86,"Toggle":87,"Tooltip":88,"Totop":89,"Transition":90,"Upload":91,"Utility":92,"Video":93,"Visibility":94,"Width":95},"accordion","alert","align","animation","article","background","badge","base","breadcrumb","button","card","close","column","comment","container","countdown","cover","description-list","divider","dotnav","drop","dropbar","dropdown","dropnav","filter","flex","form","grid","heading","height","icon","iconnav","image","inverse","label","leader","lightbox","link","list","margin","marker","modal","nav","navbar","notification","offcanvas","overlay","padding","pagination","parallax","placeholder","position","print","progress","scroll","scrollspy","search","section","slidenav","slider","slideshow","sortable","spinner","sticky","subnav","svg","switcher","tab","table","text","thumbnav","tile","toggle","tooltip","totop","transition","upload","utility","video","visibility","width"],"uses":{},"slash":"never"},{"type":"data","data":[{"test":1,"doc":2},false,{"ids":3,"content":13,"title":14},[4,7,10],{"id":5,"title":6},"color-contrasts","Color contrasts",{"id":8,"title":9},"interactive-components","Interactive components",{"id":11,"title":12},"internationalization","Internationalization","\u003Ch1>Accessibility\u003C/h1>\u003Cp>UIkit is a fully accessible front-end framework. All its interactive components are accessible out of the box. Still, the accessibility largely depends on the author&#39;s markup. In each component documentation we provide best practice examples on how to use UIkit to comply with the \u003Ca href=\"https://www.w3.org/TR/WCAG/\">WCAG 2.1\u003C/a> standards. \u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"color-contrasts\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#color-contrasts\">Color contrasts\u003C/a>\u003C/h2>\u003Cp>UIkit&#39;s default color palette may have insufficient color contrast, in particular the muted text and background colors. WCAG 2.1 requires a 4.5:1 ratio for text contrast and 3:1 ratio for the non-text color. To meet the color contrast requirements, overwrite the \u003Ca href=\"/docs/less#use-variables\">Less variables\u003C/a> accordingly.\u003C/p>\n\u003Cp>For the UIkit default style, it should be sufficient to change the following global variables. \u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-variable\">@global-color:\u003C/span> \u003Cspan class=\"hljs-number\">#666\u003C/span>;\n\u003Cspan class=\"hljs-variable\">@global-emphasis-color:\u003C/span> \u003Cspan class=\"hljs-number\">#333\u003C/span>;\n\u003Cspan class=\"hljs-variable\">@global-muted-color:\u003C/span> \u003Cspan class=\"hljs-number\">#999\u003C/span>;\n\n\u003Cspan class=\"hljs-variable\">@global-muted-background:\u003C/span> \u003Cspan class=\"hljs-number\">#f8f8f8\u003C/span>;\u003C/code>\u003C/pre>\u003C/div>\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"interactive-components\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#interactive-components\">Interactive components\u003C/a>\u003C/h2>\u003Cp>UIkit&#39;s interactive JavaScript components, for example, slideshow, lightbox, dropdown, among others, are accessible to keyboard users. We implement the common keyboard navigation convention in which the \u003Ckbd>tab\u003C/kbd> and \u003Ckbd>shift+tab\u003C/kbd> keys move focus from one component to another while other keys like arrow keys move focus inside of components that include multiple focusable elements. Learn more about keyboard interaction in the documentation of each component.\u003C/p>\n\u003Cp>By using relevant \u003Ca href=\"https://www.w3.org/WAI/standards-guidelines/aria/\">WAI-ARIA\u003C/a> roles, states and properties, the JavaScript components are readable and operable using assistive technologies like screen readers. They automatically set the required HTML attributes in the markup. Learn more about accessibility in the documentation of each component. \u003C/p>\n\u003Cp>Since our JavaScript components are designed to be generic, it&#39;s not always possible to determine the precise WAI-ARIA roles and properties that need to be set by a component. Please refer to the \u003Ca href=\"https://www.w3.org/WAI/ARIA/apg/\">ARIA Authoring Practices Guide (APG)\u003C/a> for further reading. \u003C/p>\n\u003Cp>If you find the documentation or the components lacking accessibility, please open an issue or pull request for the \u003Ca href=\"https://github.com/uikit/uikit-site\">documentation\u003C/a> or \u003Ca href=\"https://github.com/uikit/uikit\">UIkit\u003C/a> on GitHub.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"internationalization\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#internationalization\">Internationalization\u003C/a>\u003C/h2>\u003Cp>UIkit supports language internationalization (i18n) of its components. The default texts for the \u003Ccode>aria-label\u003C/code> attributes can be translated. The translation keys for each component can be found in the corresponding documentation.\u003C/p>\n\u003Cp>There are several ways to modify the default texts. You can pass an object to the \u003Ccode>i18n\u003C/code> option of the component.\u003C/p>\n\u003Ch3 id=\"instance\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#instance\">Instance\u003C/a>\u003C/h3>\u003Cp>The i18n option can be set as shown in the following examples. \u003C/p>\n\u003Cp>As a valid JSON format:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>&lt;\u003Cspan class=\"hljs-keyword\">div\u003C/span> uk-marker=&#x27;{\u003Cspan class=\"hljs-string\">&quot;i18n&quot;\u003C/span>: {\u003Cspan class=\"hljs-string\">&quot;label&quot;\u003C/span>: \u003Cspan class=\"hljs-string\">&quot;Open&quot;\u003C/span>}}&#x27;&gt;&lt;/\u003Cspan class=\"hljs-keyword\">div\u003C/span>&gt;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>As a single attribute:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>&lt;\u003Cspan class=\"hljs-keyword\">div\u003C/span> uk-marker i18n=\u003Cspan class=\"hljs-string\">&quot;label: Open;&quot;\u003C/span>&gt;&lt;/\u003Cspan class=\"hljs-keyword\">div\u003C/span>&gt;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>As a single attribute prefixed with \u003Ccode>data-\u003C/code>:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>&lt;\u003Cspan class=\"hljs-keyword\">div\u003C/span> uk-marker data-i18n=\u003Cspan class=\"hljs-string\">&quot;label: Open;&quot;\u003C/span>&gt;&lt;/\u003Cspan class=\"hljs-keyword\">div\u003C/span>&gt;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Or pass the i18n option to the component programmatically:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>UIkit.\u003Cspan class=\"hljs-title function_ invoke__\">marker\u003C/span>(\u003Cspan class=\"hljs-string\">&#x27;.marker&#x27;\u003C/span>, {\n    \u003Cspan class=\"hljs-attr\">i18n\u003C/span>: {\u003Cspan class=\"hljs-attr\">label\u003C/span>: \u003Cspan class=\"hljs-string\">&#x27;Open&#x27;\u003C/span>}\n});\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"globally\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#globally\">Globally\u003C/a>\u003C/h3>\u003Cp>The default texts for a component can be changed globally by extending the component.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>UIkit.\u003Cspan class=\"hljs-keyword\">mixin\u003C/span>({\n    i18n: {label: \u003Cspan class=\"hljs-string\">&#x27;Open&#x27;\u003C/span>}\n}, \u003Cspan class=\"hljs-string\">&#x27;marker&#x27;\u003C/span>);\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"complete-translation\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#complete-translation\">Complete Translation\u003C/a>\u003C/h3>\u003Cp>Here is an example of all available component translation strings applied.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-string\">const\u003C/span> \u003Cspan class=\"hljs-string\">i18n\u003C/span> \u003Cspan class=\"hljs-string\">=\u003C/span> {\n    \u003Cspan class=\"hljs-attr\">close:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Close&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">totop:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Back to top&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">marker:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Open&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">navbarToggleIcon:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Open menu&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">paginationPrevious:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Next page&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">paginationNext:\u003C/span> { \u003Cspan class=\"hljs-attr\">label:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Previous page&#x27;\u003C/span> },\n    \u003Cspan class=\"hljs-attr\">slider:\u003C/span> {\n        \u003Cspan class=\"hljs-attr\">next:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Next slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">previous:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Previous slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">slideX:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Slide %s&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">slideLabel:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;%s of %s&#x27;\u003C/span>,\n    },\n    \u003Cspan class=\"hljs-attr\">slideshow:\u003C/span> {\n        \u003Cspan class=\"hljs-attr\">next:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Next slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">previous:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Previous slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">slideX:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Slide %s&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">slideLabel:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;%s of %s&#x27;\u003C/span>,\n    },\n    \u003Cspan class=\"hljs-attr\">lightboxPanel:\u003C/span> {\n        \u003Cspan class=\"hljs-attr\">next:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Next slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">previous:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Previous slide&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">slideLabel:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;%s of %s&#x27;\u003C/span>,\n        \u003Cspan class=\"hljs-attr\">close:\u003C/span> \u003Cspan class=\"hljs-string\">&#x27;Close&#x27;\u003C/span>,\n    },\n}\u003Cspan class=\"hljs-string\">;\u003C/span>\n\n\u003Cspan class=\"hljs-string\">for\u003C/span> \u003Cspan class=\"hljs-string\">(const\u003C/span> \u003Cspan class=\"hljs-string\">component\u003C/span> \u003Cspan class=\"hljs-string\">in\u003C/span> \u003Cspan class=\"hljs-string\">i18n)\u003C/span> {\n    \u003Cspan class=\"hljs-string\">UIkit.mixin(\u003C/span>{ \u003Cspan class=\"hljs-attr\">i18n:\u003C/span> \u003Cspan class=\"hljs-string\">i18n\u003C/span>[\u003Cspan class=\"hljs-string\">component\u003C/span>] }, \u003Cspan class=\"hljs-string\">component);\u003C/span>\n}\u003C/code>\u003C/pre>\u003C/div>","Accessibility"],"uses":{"params":["slug"]}}]}
