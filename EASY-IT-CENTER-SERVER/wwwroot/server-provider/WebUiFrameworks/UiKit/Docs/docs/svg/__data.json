{"type":"data","nodes":[{"type":"data","data":[{"navigation":1},{"Getting started":2,"Components":14},{"Introduction":3,"Installation":4,"Less":5,"Sass":6,"JavaScript":7,"Webpack":8,"Custom icons":9,"Avoiding conflicts":10,"Accessibility":11,"RTL support":12,"Migration":13},"introduction","installation","less","sass","javascript","webpack","custom-icons","avoiding-conflicts","accessibility","rtl","migration",{"Accordion":15,"Alert":16,"Align":17,"Animation":18,"Article":19,"Background":20,"Badge":21,"Base":22,"Breadcrumb":23,"Button":24,"Card":25,"Close":26,"Column":27,"Comment":28,"Container":29,"Countdown":30,"Cover":31,"Description List":32,"Divider":33,"Dotnav":34,"Drop":35,"Dropbar":36,"Dropdown":37,"Dropnav":38,"Filter":39,"Flex":40,"Form":41,"Grid":42,"Heading":43,"Height":44,"Icon":45,"Iconnav":46,"Image":47,"Inverse":48,"Label":49,"Leader":50,"Lightbox":51,"Link":52,"List":53,"Margin":54,"Marker":55,"Modal":56,"Nav":57,"Navbar":58,"Notification":59,"Off-canvas":60,"Overlay":61,"Padding":62,"Pagination":63,"Parallax":64,"Placeholder":65,"Position":66,"Print":67,"Progress":68,"Scroll":69,"Scrollspy":70,"Search":71,"Section":72,"Slidenav":73,"Slider":74,"Slideshow":75,"Sortable":76,"Spinner":77,"Sticky":78,"Subnav":79,"SVG":80,"Switcher":81,"Tab":82,"Table":83,"Text":84,"Thumbnav":85,"Tile":86,"Toggle":87,"Tooltip":88,"Totop":89,"Transition":90,"Upload":91,"Utility":92,"Video":93,"Visibility":94,"Width":95},"accordion","alert","align","animation","article","background","badge","base","breadcrumb","button","card","close","column","comment","container","countdown","cover","description-list","divider","dotnav","drop","dropbar","dropdown","dropnav","filter","flex","form","grid","heading","height","icon","iconnav","image","inverse","label","leader","lightbox","link","list","margin","marker","modal","nav","navbar","notification","offcanvas","overlay","padding","pagination","parallax","placeholder","position","print","progress","scroll","scrollspy","search","section","slidenav","slider","slideshow","sortable","spinner","sticky","subnav","svg","switcher","tab","table","text","thumbnav","tile","toggle","tooltip","totop","transition","upload","utility","video","visibility","width"],"uses":{},"slash":"never"},{"type":"data","data":[{"test":1,"doc":2},true,{"ids":3,"content":16,"title":17},[4,7,10,13],{"id":5,"title":6},"usage","Usage",{"id":8,"title":9},"stroke-animation","Stroke Animation",{"id":11,"title":12},"component-options","Component options",{"id":14,"title":15},"javascript","JavaScript","\u003Ch1>SVG\u003C/h1>\u003Cp class=\"uk-text-lead\">Inject inline SVG images into the page markup and style them with CSS.\u003C/p>\n\n\u003Cp>SVGs or Scalable Vector Graphics are really handy, for example to display a logo that remains crisp when scaling or that is animated. The SVG component provides more control to style and animate the image and its vector parts. It injects the image into the markup as an inline SVG including all attributes, like IDs, classes, width and height, so that they can easily be targeted using CSS.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"usage\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#usage\">Usage\u003C/a>\u003C/h2>\u003Cp>To apply this component, add the \u003Ccode>uk-svg\u003C/code> attribute to an \u003Ccode>&lt;img&gt;\u003C/code> element.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>&lt;img src\u003Cspan class=\"hljs-operator\">=\u003C/span>\u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span> width\u003Cspan class=\"hljs-operator\">=\u003C/span>\u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span> height\u003Cspan class=\"hljs-operator\">=\u003C/span>\u003Cspan class=\"hljs-string\">&quot;&quot;\u003C/span> uk-svg&gt;\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Using the \u003Ccode>uk-svg\u003C/code> attribute also allows you to inject a symbol from the SVG file. Just append the symbol&#39;s ID to the image path as you would in any fragmented URL.\u003C/p>\n\u003Cdiv class=\"uk-position-relative uk-margin-medium js-example\">\n\n                \u003Cul uk-tab=\"swiping: false\">\n                    \u003Cli>\u003Ca href=\"#\">Preview\u003C/a>\u003C/li>\n                    \u003Cli>\u003Ca href=\"#\">Markup\u003C/a>\u003C/li>\n                \u003C/ul>\n\n                \u003Cul class=\"uk-switcher uk-margin\">\n                    \u003Cli>\u003C!-- Targets the SVG image -->\n\u003Cimg src=\"../assets/uikit/src/images/icons/cloud-download.svg\" width=\"40\" height=\"40\" uk-svg>\n\n\u003C!-- Targets a symbol inside the SVG image -->\n\u003Cimg src=\"../assets/uikit/tests/images/icons.svg#cloud-upload\" width=\"40\" height=\"40\" uk-svg>\u003C/li>\n                    \u003Cli>\u003Cpre>\u003Ccode id=\"code-example\">\u003Cspan class=\"hljs-comment\">&lt;!-- Targets the SVG image --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">img\u003C/span> \u003Cspan class=\"hljs-attr\">src\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;../assets/uikit/src/images/icons/cloud-download.svg&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">width\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;40&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">height\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;40&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">uk-svg\u003C/span>&gt;\u003C/span>\n\n\u003Cspan class=\"hljs-comment\">&lt;!-- Targets a symbol inside the SVG image --&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">img\u003C/span> \u003Cspan class=\"hljs-attr\">src\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;../assets/uikit/tests/images/icons.svg#cloud-upload&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">width\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;40&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">height\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;40&quot;\u003C/span> \u003Cspan class=\"hljs-attr\">uk-svg\u003C/span>&gt;\u003C/span>\u003C/code>\u003C/pre>\u003C/li>\n                \u003C/ul>\n\n                \u003Cdiv class=\"uk-position-top-right uk-margin-small-top\">\n                    \u003Cul class=\"uk-iconnav\">\n                        \u003Cli>\u003Ca href class=\"js-copy\" uk-tooltip=\"Copy to Clipboard\" rel=\"#code-example\" role=\"button\" aria-label=\"Copy to Clipboard\">\u003Cimg class=\"uk-icon\" src=\"../images/icon-clipboard.svg\" uk-svg>\u003C/a>\u003C/li>\n                        \u003Cli>\u003Ca href class=\"js-codepen\" uk-tooltip=\"Edit on Codepen\" rel=\"#code-example\" aria-label=\"Edit on Codepen\">\u003Cimg class=\"uk-icon\" src=\"../images/icon-flask.svg\" uk-svg>\u003C/a>\u003C/li>\n                    \u003C/ul>\n                \u003C/div>\n                \n            \u003C/div>\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> SVGs will adapt the current color for their stroke and fill color. To prevent this behavior, add the \u003Ccode>.uk-preserve\u003C/code> class to the SVG itself or the elements inside the SVG.\u003C/p>\n\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> The \u003Ccode>loading=&quot;lazy&quot;\u003C/code> attribute for \u003Ccode>&lt;img&gt;\u003C/code> elements is taken into account, and SVG images will be injected as inline SVG as they enter the viewport.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"stroke-animation\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#stroke-animation\">Stroke Animation\u003C/a>\u003C/h2>\u003Cp>There are two ways to animate SVG strokes. First by using the \u003Ca href=\"/docs/animation#svg-strokes\">Animation component\u003C/a> and \u003Ccode>uk-svg=&quot;stroke-animation: true&quot;\u003C/code>, and second by using the \u003Ca href=\"/docs/parallax#svg-strokes\">Parallax component\u003C/a>.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"component-options\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#component-options\">Component options\u003C/a>\u003C/h2>\u003Cp>Any of these options can be applied to the component attribute. Separate multiple options with a semicolon. \u003Ca href=\"/docs/javascript#component-configuration\">Learn more\u003C/a>\u003C/p>\n\u003Cdiv class=\"uk-overflow-auto\">\u003Ctable class=\"uk-table uk-table-divider\">\u003Cthead>\u003Ctr>\n\u003Cth>Option\u003C/th>\n\u003Cth>Value\u003C/th>\n\u003Cth>Default\u003C/th>\n\u003Cth>Description\u003C/th>\n\u003C/tr>\n\u003C/thead>\u003Ctbody>\u003Ctr>\n\u003Ctd>\u003Ccode>src\u003C/code>\u003C/td>\n\u003Ctd>String\u003C/td>\n\u003Ctd>\u003C/td>\n\u003Ctd>The SVG source URL. If a location hash is present, only the \u003Ccode>&lt;symbol&gt;\u003C/code> of the SVG with the given ID is shown.\u003C/td>\n\u003C/tr>\n\u003Ctr>\n\u003Ctd>\u003Ccode>stroke-animation\u003C/code>\u003C/td>\n\u003Ctd>Boolean\u003C/td>\n\u003Ctd>\u003Ccode>false\u003C/code>\u003C/td>\n\u003Ctd>Animate all elements with the \u003Ccode>stroke\u003C/code> attribute in the SVG.\u003C/td>\n\u003C/tr>\n\u003C/tbody>\u003C/table>\u003C/div>\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"javascript\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#javascript\">JavaScript\u003C/a>\u003C/h2>\u003Cp>Learn more about \u003Ca href=\"/docs/javascript#programmatic-use\">JavaScript components\u003C/a>.\u003C/p>\n\u003Ch3 id=\"initialization\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#initialization\">Initialization\u003C/a>\u003C/h3>\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>UIkit.svg(element, \u003Cspan class=\"hljs-keyword\">options\u003C/span>);\u003C/code>\u003C/pre>\u003C/div>\u003Ch3 id=\"properties\" class=\"uk-h4 tm-heading-fragment\">\u003Ca href=\"#properties\">Properties\u003C/a>\u003C/h3>\u003Ch4 id=\"svg\" class=\"uk-h5 tm-heading-fragment\">\u003Ca href=\"#svg\">svg\u003C/a>\u003C/h4>\u003Cp>A JavaScript Promise that will resolve with the added SVG Node.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>UIkit.svg(element).svg.then(\u003Cspan class=\"hljs-keyword\">function\u003C/span>\u003Cspan class=\"hljs-params\">(svg)\u003C/span> { svg.querySelector(\u003Cspan class=\"hljs-string\">&#x27;path&#x27;\u003C/span>).style.stroke = \u003Cspan class=\"hljs-string\">&#x27;red&#x27;\u003C/span>; })\u003C/code>\u003C/pre>\u003C/div>","SVG"],"uses":{"params":["slug"]}}]}
