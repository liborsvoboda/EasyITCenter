{"type":"data","nodes":[{"type":"data","data":[{"navigation":1},{"Getting started":2,"Components":14},{"Introduction":3,"Installation":4,"Less":5,"Sass":6,"JavaScript":7,"Webpack":8,"Custom icons":9,"Avoiding conflicts":10,"Accessibility":11,"RTL support":12,"Migration":13},"introduction","installation","less","sass","javascript","webpack","custom-icons","avoiding-conflicts","accessibility","rtl","migration",{"Accordion":15,"Alert":16,"Align":17,"Animation":18,"Article":19,"Background":20,"Badge":21,"Base":22,"Breadcrumb":23,"Button":24,"Card":25,"Close":26,"Column":27,"Comment":28,"Container":29,"Countdown":30,"Cover":31,"Description List":32,"Divider":33,"Dotnav":34,"Drop":35,"Dropbar":36,"Dropdown":37,"Dropnav":38,"Filter":39,"Flex":40,"Form":41,"Grid":42,"Heading":43,"Height":44,"Icon":45,"Iconnav":46,"Image":47,"Inverse":48,"Label":49,"Leader":50,"Lightbox":51,"Link":52,"List":53,"Margin":54,"Marker":55,"Modal":56,"Nav":57,"Navbar":58,"Notification":59,"Off-canvas":60,"Overlay":61,"Padding":62,"Pagination":63,"Parallax":64,"Placeholder":65,"Position":66,"Print":67,"Progress":68,"Scroll":69,"Scrollspy":70,"Search":71,"Section":72,"Slidenav":73,"Slider":74,"Slideshow":75,"Sortable":76,"Spinner":77,"Sticky":78,"Subnav":79,"SVG":80,"Switcher":81,"Tab":82,"Table":83,"Text":84,"Thumbnav":85,"Tile":86,"Toggle":87,"Tooltip":88,"Totop":89,"Transition":90,"Upload":91,"Utility":92,"Video":93,"Visibility":94,"Width":95},"accordion","alert","align","animation","article","background","badge","base","breadcrumb","button","card","close","column","comment","container","countdown","cover","description-list","divider","dotnav","drop","dropbar","dropdown","dropnav","filter","flex","form","grid","heading","height","icon","iconnav","image","inverse","label","leader","lightbox","link","list","margin","marker","modal","nav","navbar","notification","offcanvas","overlay","padding","pagination","parallax","placeholder","position","print","progress","scroll","scrollspy","search","section","slidenav","slider","slideshow","sortable","spinner","sticky","subnav","svg","switcher","tab","table","text","thumbnav","tile","toggle","tooltip","totop","transition","upload","utility","video","visibility","width"],"uses":{},"slash":"never"},{"type":"data","data":[{"test":1,"doc":2},false,{"ids":3,"content":10,"title":11},[4,7],{"id":5,"title":6},"custom-prefix","Custom prefix",{"id":8,"title":9},"scope-mode","Scope mode","\u003Ch1>Avoiding conflicts\u003C/h1>\u003Cp class=\"uk-text-lead\">Use a custom prefix and the scope mode to make UIkit work in any environment.\u003C/p>\n\n\u003Cp>By default, all classes and attributes in UIkit start with the \u003Ccode>uk-\u003C/code> prefix. This avoids name collisions when introducing UIkit to existing projects or when combining it with other frameworks. UIkit allows to change that prefix. This even allows the use of multiple versions of UIkit alongside each other. In addition, the scope mode allows you to limit the UIkit styles to only affect certain parts of your pages.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"custom-prefix\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#custom-prefix\">Custom prefix\u003C/a>\u003C/h2>\u003Cp>Using a custom prefix allows the use of multiple versions of UIkit on the same page. This might be needed when you are building something like a CMS plugin. In such cases, you do not know what other versions of UIkit might be loaded, so it is a good idea to use a custom prefix.\u003C/p>\n\u003Cp>When you have \u003Ca href=\"/docs/installation#compile-from-github-source\">set up UIkit from GitHub source\u003C/a>, you can compile it with a custom prefix. If you choose a custom prefix, for example \u003Ccode>xyz\u003C/code>, all attributes and classes will now start with that prefix, for example \u003Ccode>xyz-grid\u003C/code> instead of \u003Ccode>uk-grid\u003C/code>. The global JavaScript object \u003Ccode>UIkit\u003C/code> will also be renamed to \u003Ccode>xyzUIkit\u003C/code>.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>pnpm \u003Cspan class=\"hljs-keyword\">prefix \u003C/span>-- -p xyz \u003Cspan class=\"hljs-comment\"># replace xyz with your custom prefix.\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> \u003Ccode>pnpm prefix\u003C/code> will prompt for a prefix.\u003C/p>\n\u003Cp>The script will go through all CSS files in the \u003Ccode>/dist\u003C/code> folder and replace them with your custom prefix version.\u003C/p>\n\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> The Base component will still include styles that affect some base HTML elements. To avoid this, either create a \u003Ca href=\"/docs/less\">custom build\u003C/a> without including the Base component, or use the scoped mode.\u003C/p>\n\u003Chr class=\"uk-margin-large\">\u003Ch2 id=\"scope-mode\" class=\"uk-h3 tm-heading-fragment\">\u003Ca href=\"#scope-mode\">Scope mode\u003C/a>\u003C/h2>\u003Cp>Using a scoped version of UIkit allows you to limit styles to only apply to a certain part of your document. This might be needed in environments of admin interfaces, such as the backend of WordPress or Joomla. When you have \u003Ca href=\"/docs/installation#compile-from-github-source\">set up UIkit from GitHub source\u003C/a>, you can recompile UIkit as a scoped version.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>pnpm \u003Cspan class=\"hljs-keyword\">scope\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Cp>\u003Cspan class=\"uk-label\">Note\u003C/span> Type \u003Ccode>pnpm scope -- -h\u003C/code> to get more options.\u003C/p>\n\u003Cp>You will find the generated CSS and JS files in the \u003Ccode>/dist\u003C/code> folder. To use the scoped version, wrap the document section with your UIkit markup in an element with the \u003Ccode>.uk-scope\u003C/code> class.\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-meta\">&lt;!DOCTYPE \u003Cspan class=\"hljs-keyword\">html\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">head\u003C/span>&gt;\u003C/span>…\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">head\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n\n        \u003Cspan class=\"hljs-comment\">&lt;!-- non UIkit markup --&gt;\u003C/span>\n        …\n\n        \u003Cspan class=\"hljs-tag\">&lt;\u003Cspan class=\"hljs-name\">div\u003C/span> \u003Cspan class=\"hljs-attr\">class\u003C/span>=\u003Cspan class=\"hljs-string\">&quot;uk-scope&quot;\u003C/span>&gt;\u003C/span>\n            \u003Cspan class=\"hljs-comment\">&lt;!-- your UIkit markup --&gt;\u003C/span>\n            …\n        \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">div\u003C/span>&gt;\u003C/span>\n    \u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">body\u003C/span>&gt;\u003C/span>\n\u003Cspan class=\"hljs-tag\">&lt;/\u003Cspan class=\"hljs-name\">html\u003C/span>&gt;\u003C/span>\u003C/code>\u003C/pre>\u003C/div>\u003Cp>Now you need to tell \u003Ccode>uk-modal\u003C/code>, \u003Ccode>uk-tooltip\u003C/code> and \u003Ccode>uk-lightbox\u003C/code> where to append themselves into the DOM when they do not have the \u003Ccode>container\u003C/code> option set, e.g. the default container for said components.\nTo do so, set the following parameter:\u003C/p>\n\u003Cdiv class=\"uk-margin-medium\">\u003Cpre>\u003Ccode>\u003Cspan class=\"hljs-comment\">// simply pass the selector\u003C/span>\nUIkit.\u003Cspan class=\"hljs-built_in\">container\u003C/span> = \u003Cspan class=\"hljs-string\">&#x27;.uk-scope&#x27;\u003C/span>;\n\n\u003Cspan class=\"hljs-comment\">// or you can set an element directly, for example:\u003C/span>\nUIkit.\u003Cspan class=\"hljs-built_in\">container\u003C/span> = document.getElementById(\u003Cspan class=\"hljs-string\">&#x27;#id-of-scope-element&#x27;\u003C/span>);\u003C/code>\u003C/pre>\u003C/div>","Avoiding conflicts"],"uses":{"params":["slug"]}}]}
