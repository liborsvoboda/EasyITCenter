import{a as k,b as P}from"./chunk-EE57ZIMK.js";import"./chunk-UEO6IQ7K.js";import"./chunk-UFISP26C.js";import"./chunk-XSSXK7EZ.js";import{a as l,b as M,c as v}from"./chunk-AS5FXEGH.js";import{a as u,b as D}from"./chunk-X2ZDE2AM.js";import"./chunk-5R6LCAUH.js";import"./chunk-ZFN2ACGN.js";import"./chunk-QLODAJMV.js";import{A as T,z as E}from"./chunk-UWMVDULA.js";import{o as w,t as b}from"./chunk-N5X6XDRN.js";import{Jb as e,Nc as y,Oa as C,Sa as h,V as g,da as m,ea as x,kb as p,rb as o,sb as i,tb as a}from"./chunk-ZJD4PHQZ.js";import"./chunk-P2VZOJAX.js";var A=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["architecture-doc"]],decls:11,vars:0,consts:[[1,"notification"],["alt","Architecture","src","https://primefaces.org/cdn/primeng/images/architecture.jpg",1,"w-full","mb-5"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p",0)(2,"strong"),e(3,"Note"),i(),e(4,": In upcoming versions, theming architecture will be redesigned to utilize CSS variables instead of SCSS variables in a backward compatible way for a dynamic approach. In addition, a new "),o(5,"strong"),e(6,"Unstyled"),i(),e(7," mode will be provided as an alternative to the default styling so that CSS libraries like Tailwind or Bootstrap can be used to style the components. This work is planned to be completed in Q3 2023. "),i(),o(8,"p"),e(9," PrimeNG is a design agnostic library so unlike other UI libraries it does not enforce a certain styling such as material or bootstrap. In order to achieve this, styling has been separated into two parts, core and theme. The core resides inside PrimeNG to implement the structure of the components such as positioning whereas theme brings the colors and spacing. "),i()(),a(10,"img",1))},dependencies:[l],encapsulation:2});let n=t;return n})();var F=(()=>{let t=class t{constructor(){this.code={basic:`primeng/resources/themes/bootstrap4-light-blue/theme.css
primeng/resources/themes/bootstrap4-light-purple/theme.css
primeng/resources/themes/bootstrap4-dark-blue/theme.css
primeng/resources/themes/bootstrap4-dark-purple/theme.css
primeng/resources/themes/md-light-indigo/theme.css
primeng/resources/themes/md-light-deeppurple/theme.css
primeng/resources/themes/md-dark-indigo/theme.css
primeng/resources/themes/md-dark-deeppurple/theme.css
primeng/resources/themes/mdc-light-indigo/theme.css
primeng/resources/themes/mdc-light-deeppurple/theme.css
primeng/resources/themes/mdc-dark-indigo/theme.css
primeng/resources/themes/mdc-dark-deeppurple/theme.css
primeng/resources/themes/fluent-light/theme.css
primeng/resources/themes/lara-light-blue/theme.css
primeng/resources/themes/lara-light-indigo/theme.css
primeng/resources/themes/lara-light-purple/theme.css
primeng/resources/themes/lara-light-teal/theme.css
primeng/resources/themes/lara-dark-blue/theme.css
primeng/resources/themes/lara-dark-indigo/theme.css
primeng/resources/themes/lara-dark-purple/theme.css
primeng/resources/themes/lara-dark-teal/theme.css
primeng/resources/themes/soho-light/theme.css
primeng/resources/themes/soho-dark/theme.css
primeng/resources/themes/viva-light/theme.css
primeng/resources/themes/viva-dark/theme.css
primeng/resources/themes/mira/theme.css
primeng/resources/themes/nano/theme.css
primeng/resources/themes/saga-blue/theme.css
primeng/resources/themes/saga-green/theme.css
primeng/resources/themes/saga-orange/theme.css
primeng/resources/themes/saga-purple/theme.css
primeng/resources/themes/vela-blue/theme.css
primeng/resources/themes/vela-green/theme.css
primeng/resources/themes/vela-orange/theme.css
primeng/resources/themes/vela-purple/theme.css
primeng/resources/themes/arya-blue/theme.css
primeng/resources/themes/arya-green/theme.css
primeng/resources/themes/arya-orange/theme.css
primeng/resources/themes/arya-purple/theme.css
primeng/resources/themes/nova/theme.css
primeng/resources/themes/nova-alt/theme.css
primeng/resources/themes/nova-accent/theme.css
primeng/resources/themes/luna-amber/theme.css
primeng/resources/themes/luna-blue/theme.css
primeng/resources/themes/luna-green/theme.css
primeng/resources/themes/luna-pink/theme.css
primeng/resources/themes/rhea/theme.css`}}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["builtin-themes-doc"]],decls:8,vars:2,consts:[[1,"border-round","inline-flex","border-1","w-2rem","h-2rem","p-0","align-items-center","justify-content-center","bg-primary"],[1,"pi","pi-palette"],[1,"h-20rem","overflow-auto"],[3,"code","hideToggleCode"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2," PrimeNG ships with various free themes to choose from. The list below states all the available themes in the npm distribution with import paths. For a live preview, use the configurator "),o(3,"span",0),a(4,"span",1),i(),e(5," at the topbar to switch themes. "),i()(),o(6,"div",2),a(7,"app-code",3),i()),r&2&&(h(7),p("code",c.code)("hideToggleCode",!0))},dependencies:[u,l],encapsulation:2});let n=t;return n})();var N=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["css-variables-doc"]],decls:6,vars:0,consts:[["routerLink","/colors"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2,"Each PrimeNG theme exports numerous CSS variables, refer to "),o(3,"a",0),e(4,"Colors"),i(),e(5," page for more details."),i()())},dependencies:[w,l],encapsulation:2});let n=t;return n})();var j=(()=>{let t=class t{constructor(){this.code1={basic:"sass --update themes/mytheme/theme.scss:themes/mytheme/theme.css"},this.code2={basic:"@import 'assets/theme.css';"}}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["custom-theme-doc"]],decls:86,vars:4,consts:[["href","http://github.com/primefaces/primeng-sass-theme"],["href","https://www.primefaces.org/designer/api/primeng/15.0.0"],["href","https://github.com/primefaces/primeng-sass-theme/releases"],["href","https://www.npmjs.com/package/sass"],[3,"code","hideToggleCode"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2," Themes are created with SASS using the "),o(3,"i"),e(4,"primeng-sass-theme"),i(),e(5," project available at "),o(6,"a",0),e(7,"github"),i(),e(8,". This repository contains all the scss files for the components and the variables of the built-in themes so that you may customize an existing theme or create your own. The scss variables used in a theme are available at the "),o(9,"a",1),e(10,"SASS API"),i(),e(11," documentation. "),i(),o(12,"p"),e(13," There are 2 alternatives to create your own theme. First option is compiling a theme with command line sass whereas second option is embedding scss files within your project to let your build environment do the compilation. In all cases, the generated theme file should be imported to your project. "),i(),o(14,"h3"),e(15,"Theme SCSS"),i(),o(16,"p"),e(17," The theme scss is available as open source at "),o(18,"a",0),e(19,"primeng-sass-theme"),i(),e(20," repository. The "),o(21,"i"),e(22,"theme-base"),i(),e(23," folder contains the theming structure of the components, themes under "),o(24,"i"),e(25,"themes"),i(),e(26," folder import the base and define the SCSS variables. The "),o(27,"i"),e(28,"themes"),i(),e(29," folder also contains all the built-in themes so you can customize their code as well. "),i(),o(30,"p"),e(31," To create your own theme, "),o(32,"a",2),e(33,"download"),i(),e(34," the release matching your PrimeNG version and access the "),o(35,"i"),e(36,"themes/mytheme"),i(),e(37," folder. The sass variables to customize are available under the "),o(38,"i"),e(39,"variables"),i(),e(40," folder. The "),o(41,"i"),e(42,"_fonts"),i(),e(43," file can be used to define a custom font for your project whereas the optional "),o(44,"i"),e(45,"_extensions"),i(),e(46," file is provided to add overrides to the components designs. The "),o(47,"i"),e(48,"theme.scss"),i(),e(49," file imports the theme files along with the "),o(50,"i"),e(51,"theme-base"),i(),e(52," folder at the root to combine everything together. Next step would be compilation of the scss that can either be command line or within your project. "),i(),o(53,"h3"),e(54,"Compile SCSS Manually"),i(),o(55,"p"),e(56,"Once your theme is ready run the following command to compile it. Note that "),o(57,"a",3),e(58,"sass"),i(),e(59," command should be available in your terminal."),i(),a(60,"app-code",4),o(61,"p"),e(62,"Then copy and import the theme.css file in your application. For example, in Angular CLI you may place theme.css under assets folder and then import it at "),o(63,"i"),e(64,"styles.css"),i(),e(65,"."),i(),a(66,"app-code",4),o(67,"h3"),e(68,"Build Time Compilation"),i(),o(69,"p"),e(70," This approach eliminates the manual compilation by delegating it to Angular CLI. Copy the "),o(71,"i"),e(72,"theme-base"),i(),e(73," folder along with "),o(74,"i"),e(75,"themes/mytheme"),i(),e(76," folder to your application where assets reside. At a suitable location like "),o(77,"i"),e(78,"styles.scss"),i(),e(79,", import the "),o(80,"i"),e(81,"theme.scss"),i(),e(82," from "),o(83,"i"),e(84,"assets/themes/mytheme"),i(),e(85,". That would be it, during build time, your project will compile the sass and import the theme. Any changes to your theme will be reflected instantly. "),i()()),r&2&&(h(60),p("code",c.code1)("hideToggleCode",!0),h(6),p("code",c.code2)("hideToggleCode",!0))},dependencies:[u,l],encapsulation:2});let n=t;return n})();var q=(()=>{let t=class t{constructor(){this.code1={basic:`<div class="card flex flex-column md:flex-row md:justify-content-between row-gap-3">
    <p-button label="Button 1"></p-button>
    <p-button styleClass="p-button-secondary" label="Button 2"></p-button>
    <p-button styleClass="p-button-help" label="Button 3"></p-button>
</div>`}}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["primeflex-doc"]],decls:19,vars:2,consts:[["href","https://primeflex.org/"],["href","https://blocks.primeng.org"],[1,"card","flex","flex-column","md:flex-row","md:justify-content-between","row-gap-3"],["label","Button 1"],["styleClass","p-button-secondary","label","Button 2"],["styleClass","p-button-help","label","Button 3"],[3,"code","hideToggleCode"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p")(2,"a",0),e(3,"PrimeFlex"),i(),e(4," is a lightweight responsive CSS utility library to accompany Prime UI libraries and static webpages as well. PrimeNG can be used with any CSS utility library like bootstrap and tailwind however PrimeFlex has benefits like integration with PrimeNG themes usign CSS variables so that colors classes e.g. "),o(5,"i"),e(6,"bg-blue-500"),i(),e(7," receive the color code from the PrimeNG theme being used. PrimeNG follows the CSS utility approach of PrimeFlex and currently does not provide an extended style property like "),o(8,"i"),e(9,"sx"),i(),e(10,". Same approach is also utilized in "),o(11,"a",1),e(12,"PrimeBlocks for PrimeNG"),i(),e(13," project as well. "),i()(),o(14,"div",2),a(15,"p-button",3)(16,"p-button",4)(17,"p-button",5),i(),a(18,"app-code",6)),r&2&&(h(18),p("code",c.code1)("hideToggleCode",!0))},dependencies:[u,l,E],encapsulation:2});let n=t;return n})();var I=(()=>{let t=class t{constructor(){this.code={basic:`html {
    font-size: 16px;
}`}}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["scaling-doc"]],decls:4,vars:2,consts:[[3,"code","hideToggleCode"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2," PrimeNG utilizes rem units to make sure the components blend in with the rest of your UI perfectly. This also enables scaling, for example changing the size of the components is easy as configuring the font size of your document. Code below sets the scale of the components based on 16px. If you reqire bigger or smaller components, just change this variable and components will scale accordingly. "),i()(),a(3,"app-code",0)),r&2&&(h(3),p("code",c.code)("hideToggleCode",!0))},dependencies:[u,l],encapsulation:2});let n=t;return n})();var B=(()=>{let t=class t{constructor(){this.code={basic:`<p-panel header="Scoped Panel">
    <p class="m-0">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    </p>
</p-panel>`,html:`
<p-panel header="Scoped Panel">
    <p class="m-0">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
        consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    </p>
</p-panel>`,typescript:`
import { Component } from '@angular/core';

@Component({
    selector: 'scoped-css-demo',
    styles: [
        \`
            :host ::ng-deep .p-panel-header {
                background-color: var(--teal-500);
                border-color: var(--teal-500);
                color: #ffffff;
            }

            :host ::ng-deep .p-panel-content {
                border-color: var(--teal-500);
            }
        \`
    ],
    templateUrl: './scoped-css-demo.html'
})
export class ScopedCssDemo {}`}}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["scoped-css-doc"]],decls:11,vars:1,consts:[[1,"card"],["header","Scoped Panel"],[1,"m-0"],["selector","scoped-css-demo",3,"code"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2,"Theming styles the components globally, in case you require to change the style of a certain component use "),o(3,"i"),e(4,"::ng-deep"),i(),e(5,"."),i()(),o(6,"div",0)(7,"p-panel",1)(8,"p",2),e(9," Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. "),i()()(),a(10,"app-code",3)),r&2&&(h(10),p("code",c.code))},dependencies:[u,l,k],styles:["[_nghost-%COMP%]     .p-panel-header{background-color:var(--teal-500);border-color:var(--teal-500);color:#fff}[_nghost-%COMP%]     .p-panel-content{border-color:var(--teal-500)}"]});let n=t;return n})();var U=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["switch-themes-doc"]],decls:5,vars:0,consts:[[1,"video-container"],["width","560","height","315","src",C`https://www.youtube.com/embed/5VOuUdDXRsE`,"frameborder","0","allowfullscreen",""]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2,"Themes can be switched on-the-fly so that users of your app can choose their own theme. We have created a video tutorial that goes through the steps."),i()(),o(3,"div",0),a(4,"iframe",1),i())},dependencies:[l],encapsulation:2});let n=t;return n})();var G=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["utils-doc"]],decls:47,vars:0,consts:[[1,"doc-tablewrapper"],[1,"doc-table"]],template:function(r,c){r&1&&(o(0,"app-docsectiontext")(1,"p"),e(2,"A couple of utility classes are provided as a solution to common requirements."),i()(),o(3,"div",0)(4,"table",1)(5,"thead")(6,"tr")(7,"th"),e(8,"Name"),i(),o(9,"th"),e(10,"Description"),i()()(),o(11,"tbody")(12,"tr")(13,"td"),e(14,"p-component"),i(),o(15,"td"),e(16,"Applies component theming such as font-family and font-size to an element."),i()(),o(17,"tr")(18,"td"),e(19,"p-fluid"),i(),o(20,"td"),e(21,"Applies 100% width to all descendant components."),i()(),o(22,"tr")(23,"td"),e(24,"p-disabled"),i(),o(25,"td"),e(26,"Applies an opacity to display as disabled."),i()(),o(27,"tr")(28,"td"),e(29,"p-sr-only"),i(),o(30,"td"),e(31,"Element becomes visually hidden however accessibility is still available."),i()(),o(32,"tr")(33,"td"),e(34,"p-reset"),i(),o(35,"td"),e(36,"Resets the browsers defaults."),i()(),o(37,"tr")(38,"td"),e(39,"p-link"),i(),o(40,"td"),e(41,"Renders a button as a link."),i()(),o(42,"tr")(43,"td"),e(44,"p-error"),i(),o(45,"td"),e(46,"Indicates an error text."),i()()()()())},dependencies:[l],encapsulation:2});let n=t;return n})();var z=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=x({type:t}),t.\u0275inj=g({imports:[y,b,D,v,T,P,v]});let n=t;return n})();var O=(()=>{let t=class t{constructor(){this.docs=[{id:"architecture",label:"Architecture",component:A},{id:"builtinthemes",label:"Built-in Themes",component:F},{id:"switchthemes",label:"Switch Themes",component:U},{id:"customtheme",label:"Custom Theme",component:j},{id:"scopedcss",label:"Scoped CSS",component:B},{id:"scale",label:"Scale",component:I},{id:"primeflex",label:"PrimeFlex",component:q},{id:"utils",label:"Utils",component:G},{id:"css-variables",label:"CSS Variables",component:N}]}};t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=m({type:t,selectors:[["ng-component"]],decls:1,vars:1,consts:[["docTitle","Theming - PrimeNG","header","Theming","description","Choose from a variety of themes or develop your own theme easily.",3,"docs"]],template:function(r,c){r&1&&a(0,"app-doc",0),r&2&&p("docs",c.docs)},dependencies:[M],styles:[".designer-image[_ngcontent-%COMP%], .architecture-image[_ngcontent-%COMP%]{width:75%;margin:0 auto;display:block;margin-top:2rem;margin-bottom:2rem}.designer-videos[_ngcontent-%COMP%]{width:75%;margin:0 auto;display:block}@media screen and (max-width: 960px){.designer-image[_ngcontent-%COMP%], .architecture-image[_ngcontent-%COMP%]{width:100%}}"]});let n=t;return n})();var L=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=x({type:t}),t.\u0275inj=g({imports:[b.forChild([{path:"",component:O}]),b]});let n=t;return n})();var Qe=(()=>{let t=class t{};t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=x({type:t}),t.\u0275inj=g({imports:[y,L,z]});let n=t;return n})();export{Qe as ThemingModule};
