{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-a9c93aa65ae07b4d.js","test/line/index.js","src/index.js","src/charts/index.js","src/charts/base/index.js","src/defaults/chart.js","src/defaults/elements/border.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/defaults/elements/font.js","src/defaults/elements/title.js","src/defaults/elements/legend.js","src/defaults/elements/margin.js","src/defaults/elements/padding.js","src/defaults/elements/tooltip.js","src/defaults/elements/colors.js","src/helpers/merge.js","src/helpers/is-object.js","src/draw/text.js","src/mixins/legend.js","src/helpers/get-textbox-width.js","src/draw/square.js","src/draw/box.js","src/helpers/expand-padding.js","src/helpers/expand-margin.js","src/mixins/tooltip.js","src/charts/area/index.js","src/defaults/area.js","src/defaults/elements/axis.js","src/defaults/elements/cross.js","src/defaults/elements/arrow.js","src/helpers/min-max.js","src/draw/circle.js","src/draw/triangle.js","src/draw/diamond.js","src/draw/area.js","src/mixins/cross.js","src/mixins/axis.js","src/draw/vector.js","src/helpers/round.js","src/mixins/add-point.js","src/draw/line.js","src/mixins/arrows.js","src/draw/arrow-x.js","src/draw/arrow-y.js","src/charts/bar/index.js","src/defaults/bar.js","src/draw/rect.js","src/animation/index.js","src/animation/ease.js","src/charts/bubble/index.js","src/defaults/bubble.js","src/charts/histogram/index.js","src/defaults/histogram.js","src/charts/line/index.js","src/defaults/line.js","src/draw/curve.js","src/helpers/merge-props.js","src/charts/pie/index.js","src/defaults/pie.js","src/draw/sector.js","src/charts/stacked/index.js","src/defaults/stacked-bar.js","src/charts/gauge/index.js","src/defaults/gauge.js","src/draw/arc.js","src/helpers/get-fill-colors.js","src/charts/donut/index.js","src/defaults/donut.js","src/charts/segment/index.js","src/defaults/segment.js","src/draw/rounded-rect.js","src/charts/candlestick/index.js","src/defaults/сandlestick.js","src/draw/candle.js","test/helpers/index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"17297baa59ba1819\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import {lineChart} from \"../../src\"\nimport {genData} from \"../helpers\"\nimport {defaultColors} from \"../../src/defaults/elements/colors\"\n\nconst data1 = [\n    genData(50, 70, 95),\n    genData(50, 50, 65),\n    genData(50, 30, 45),\n    genData(50, 0, 25),\n]\n\nconst lines1 = [\n    {\n        name: \"Line 1\",\n        size: 1,\n        dots: {\n            type: 'circle',\n        }\n    },\n    {\n        name: \"Line 2\",\n        size: 1,\n        dots: {\n            type: 'square',\n        }\n    },\n    {\n        name: \"Line 3\",\n        size: 1,\n        dots: {\n            type: 'triangle',\n        }\n    },\n    {\n        name: \"Line 4\",\n        size: 1,\n        dots: {\n            type: 'diamond',\n        }\n    },\n]\n\nlineChart(\"#line-1\", data1, {\n    lines: lines1,\n    height: 600,\n    accuracy: 4,\n    colors: [defaultColors.lime, defaultColors.blue, defaultColors.violet, defaultColors.orange],\n    boundaries: {\n        minY: -10,\n        maxY: 110\n    },\n    dots: {\n        fill: '#fff',\n        size: 4\n    },\n    title: {\n        text: 'The LineChart',\n        align: 'center',\n        font: {\n            lineHeight: 1\n        }\n    },\n    axis: {\n        x: {\n            line: {\n                count: 15\n            },\n            label: {\n                count: 5,\n                fixed: 0\n            }\n        },\n        y: {\n            line: {\n                count: 20\n            },\n            label: {\n                count: 10,\n                fixed: 0\n            }\n        }\n    },\n    padding: {\n        bottom: 60,\n    },\n    legend: {\n        margin: {\n            top: 30\n        }\n    }\n})\n\n\nconst data2 = [\n    genData(20, 0, 100),\n    genData(20, 0, 70),\n    genData(20, 0, 50),\n]\n\nconst lines2 = [\n    {\n        name: \"Line 1\",\n        size: 1,\n        showLine: false,\n        dots: {\n            type: 'dot',\n            fill: '#fff',\n            size: 3\n        }\n    },\n    {\n        name: \"Line 2\",\n        size: 1,\n        showLine: false,\n        dots: {\n            type: 'square',\n            fill: '#fff',\n            size: 3\n        }\n    },\n    {\n        name: \"Line 3\",\n        size: 1,\n        dots: false\n    },\n]\n\nlineChart(\"#line-2\", data2, {\n    background: \"#000\",\n    lines: lines2,\n    height: 600,\n    accuracy: 4,\n    colors: ['red', 'green', 'blue'],\n    title: {\n        text: 'The LineChart :: disabled lines',\n        align: 'center',\n        font: {\n            lineHeight: 1\n        }\n    },\n    axis: {\n        x: {\n            line: {\n                count: 10\n            },\n            label: {\n                count: 5,\n                fixed: 0\n            }\n        },\n        y: {\n            line: {\n                count: 10\n            },\n            label: {\n                count: 5,\n                fixed: 0\n            }\n        }\n    },\n    legend: {\n        color: '#fff4db',\n        vertical: true,\n        position: \"top-right\",\n        margin: {\n            top: 40,\n            right: 10\n        },\n        padding: {\n            top: 10,\n            left: 10,\n            right: 10,\n            bottom: 10\n        },\n        border: {\n            color: '#ffdc73'\n        },\n        dash: [],\n    },\n    drawType: 'curve',\n})\n\n","export * from \"./charts\"\n\n","import {Chart} from \"./base\"\nimport {areaChart, AreaChart} from \"./area\"\nimport {barChart, BarChart} from \"./bar\"\nimport {bubbleChart, BubbleChart} from \"./bubble\"\nimport {histogramChart, HistogramChart} from \"./histogram\"\nimport {lineChart, LineChart} from \"./line\"\nimport {pieChart, PieChart} from \"./pie\"\nimport {stackedBarChart, StackedBarChart} from \"./stacked\"\nimport {gauge, Gauge} from \"./gauge\"\nimport {donut, Donut} from \"./donut\"\nimport {segment, Segment} from \"./segment\"\nimport {candlestickChart, CandlestickChart} from \"./candlestick\"\n\nexport {\n    Chart,\n    AreaChart, areaChart,\n    BarChart, barChart,\n    BubbleChart, bubbleChart,\n    HistogramChart, histogramChart,\n    LineChart, lineChart,\n    PieChart, pieChart,\n    StackedBarChart, stackedBarChart,\n    Gauge, gauge,\n    Donut, donut,\n    Segment, segment,\n    CandlestickChart, candlestickChart\n}","import {defaultOptions} from \"../../defaults/chart\"\nimport {merge} from \"../../helpers/merge\";\nimport {drawText} from \"../../draw/text\";\n\nimport {MixinLegend} from \"../../mixins/legend\"\nimport {MixinTooltip} from \"../../mixins/tooltip\"\nimport {expandPadding} from \"../../helpers/expand-padding\";\n\nexport class Chart {\n    constructor(el, data = [], options = {}, type = 'unknown') {\n        if (typeof el === \"string\") {\n            this.el = document.querySelector(el)\n        } else if (el instanceof HTMLElement) {\n            this.el = el\n        }\n\n        if (!this.el) {\n            throw new Error(\"You must define an element or a selector of element for chart container!\")\n        }\n\n        this.options = merge({}, defaultOptions, options)\n\n        this.data = data\n\n        this.canvas = null\n        this.ctx = null\n        this.raf = null\n        this.tooltip = null\n        this.legendItems = []\n        this.chartType = type\n        this.rect = this.el.getBoundingClientRect()\n        this.canvasRect = null\n        this.static = false\n\n        const that = this\n\n        this.proxy = new Proxy({}, {\n            set(...args) {\n                const result = Reflect.set(...args)\n                that.raf = requestAnimationFrame(that.draw.bind(that))\n                return result\n            }\n        })\n\n        if (this.options.border) {\n            this.el.style.border = `${this.options.border.width}px ${this.options.border.lineType} ${this.options.border.color}`\n        }\n\n        this.calcInternalValues()\n        this.createCanvas()\n        this.addEvents()\n    }\n\n    createCanvas(){\n        this.canvas = document.createElement(\"canvas\")\n        this.el.innerHTML = \"\"\n        this.el.style.overflow = 'hidden'\n        this.el.appendChild(this.canvas)\n        this.ctx = this.canvas.getContext('2d')\n        this.setCanvasSize()\n        this.canvasRect = this.canvas.getBoundingClientRect()\n    }\n\n    setCanvasSize(){\n        const o = this.options\n\n        this.canvas.style.height = this.height + 'px'\n        this.canvas.style.width = this.width + 'px'\n        this.canvas.width = o.dpi * this.width\n        this.canvas.height = o.dpi * this.height\n    }\n\n    calcInternalValues(){\n        let width, height\n        const o = this.options, padding = expandPadding(o.padding)\n        const rect = this.el.getBoundingClientRect();\n        const {width: elWidth, height: elHeight} = rect\n\n        width = o.width.toString().includes('%') ? elWidth / 100 * parseInt(o.width) : +o.width\n        height = o.height.toString().includes('%') ? elHeight / 100 * parseInt(o.height) : +o.height\n\n        this.width = width\n        this.height = height\n        this.dpi = o.dpi\n        this.dpiHeight = this.dpi * height\n        this.dpiWidth = this.dpi * width\n        this.viewHeight = this.dpiHeight - (padding.top + padding.bottom)\n        this.viewWidth = this.dpiWidth - (padding.left + padding.right)\n        this.center = [this.dpiWidth / 2, this.dpiHeight / 2]\n        this.radius = Math.min(this.viewHeight, this.viewWidth) / 2\n    }\n\n    title(){\n        const title = this.options.title\n        const ctx = this.ctx\n        const magic = 5\n        let x\n\n        if (!title || !title.text) {\n            return\n        }\n\n        const {text, align, color, font} = title\n\n        switch (align) {\n            case 'center':\n                x = this.dpiWidth / 2\n                break\n            case 'right':\n                x = this.dpiWidth - magic\n                break\n            default: x = magic\n        }\n\n        drawText(ctx, text, [x, font.size + magic], {\n            align: title.align,\n            color: title.color,\n            stroke: title.color,\n            font: title.font\n        })\n    }\n\n    setBackground(bg){\n        if (bg) {\n            this.options.background = bg\n        }\n\n        this.ctx.fillStyle = this.options.background\n        this.ctx.fillRect(0,0, this.canvas.width, this.canvas.height)\n    }\n\n    draw(){\n        this.clear()\n        this.setBackground()\n        this.title()\n    }\n\n    clear(){\n        this.ctx.clearRect(0, 0, this.dpiWidth, this.dpiHeight)\n    }\n\n    setData(data, index, redraw = true){\n        if (typeof index !== \"undefined\") {\n            this.data[index].data = data\n        } else {\n            this.data = data\n        }\n\n        if (redraw) this.resize()\n    }\n\n    setBoundaries(obj, redraw = true){\n        const grantedKeys = [\"minX\", \"minY\", \"minZ\", \"maxX\", \"maxY\", \"maxZ\", \"min\", \"max\"]\n\n        for (let k in obj) {\n            if (grantedKeys.includes(k)) {\n                this[k] = obj[k]\n                this.options.boundaries[k] = obj[k]\n            }\n        }\n\n        if (redraw) {\n            this.draw()\n        }\n    }\n\n    mouseMove(e){\n        const onHover = this.options.onHover\n        const {clientX: x, clientY: y} = e.changedTouches ? e.touches[0] : e\n\n        if (typeof onHover === \"function\")\n            onHover.apply(null, [x, y])\n\n        this.proxy.mouse = {\n            x: x,\n            y: y\n        }\n\n        if (e.cancelable) e.preventDefault()\n    }\n\n    mouseLeave(){\n        const fn = this.options.onLeave\n\n        if (typeof fn === \"function\")\n            fn.apply(null, [])\n\n        this.proxy.mouse = null\n    }\n\n    resize(){\n        this.calcInternalValues()\n        this.setCanvasSize()\n        this.rect = this.el.getBoundingClientRect()\n        this.canvasRect = this.canvas.getBoundingClientRect()\n\n        this.draw()\n    }\n\n    addEvents(){\n        const canvas = this.canvas\n\n        canvas.addEventListener(\"mousemove\", this.mouseMove.bind(this))\n        canvas.addEventListener(\"touchmove\", this.mouseMove.bind(this), {passive: false})\n        canvas.addEventListener(\"mouseleave\", this.mouseLeave.bind(this))\n        window.addEventListener(\"resize\", this.resize.bind(this))\n    }\n\n    destroy(){\n        const canvas = this.canvas\n\n        cancelAnimationFrame(this.raf)\n\n        canvas.removeEventListener(\"mousemove\", this.mouseMove.bind(this))\n        canvas.removeEventListener(\"mouseleave\", this.mouseLeave.bind(this))\n        window.removeEventListener(\"resize\", this.resize.bind(this))\n    }\n}\n\nObject.assign(Chart.prototype, MixinLegend)\nObject.assign(Chart.prototype, MixinTooltip)\n","import {defaultBorder} from \"./elements/border\";\nimport {defaultFont} from \"./elements/font\";\nimport {defaultTitle} from \"./elements/title\";\nimport {defaultLegend} from \"./elements/legend\";\nimport {defaultTooltip} from \"./elements/tooltip\";\nimport {defaultPadding} from \"./elements/padding\";\nimport {defaultMargin} from \"./elements/margin\";\nimport {defaultColors} from \"./elements/colors\";\n\nexport const defaultOptions = {\n    dpi: 1,\n    height: 200,\n    width: \"100%\",\n    padding: {\n        top: 40,\n        left: 40,\n        right: 40,\n        bottom: 40\n    },\n    margin: defaultMargin,\n    background: '#fff',\n    color: '#000',\n    font: defaultFont,\n    border: defaultBorder,\n    title: defaultTitle,\n    legend: defaultLegend,\n    tooltip: defaultTooltip,\n    boundaries: false,\n    colors: Object.values(defaultColors),\n    animate: false,\n\n    onDrawLabelY: null,\n    onDrawLabelX: null,\n    onTooltipShow: null,\n    onHover: null,\n    onLeave: null\n}\n\n","export const defaultBorder = {\n    width: 1,\n    lineType: 'solid',\n    color: '#e3e3e3',\n    radius: 0\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","export const defaultFont = {\n    style: 'normal',\n    family: \"Helvetica, sans-serif\",\n    size: 12,\n    weight: 'normal',\n    lineHeight: 1.2,\n    color: '#000'\n}\n\nexport const labelFont = Object.assign({}, defaultFont, {weight: 'bold'})\nexport const titleFont = Object.assign({}, defaultFont, {weight: 'bold', size: 24})\n","import {titleFont} from \"./font\";\n\nexport const defaultTitle = {\n    display: true,\n    align: 'center', // start, center, end\n    rtl: false,\n    color: '#000',\n    text: '',\n    font: titleFont,\n    padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10,\n    },\n}","import {labelFont} from \"./font\";\nimport {defaultBorder} from \"./border\";\nimport {defaultMargin} from \"./margin\";\nimport {defaultPadding} from \"./padding\";\n\nexport const defaultLegend = {\n    rtl: false,\n    margin: defaultMargin,\n    padding: defaultPadding,\n    font: labelFont,\n    border: defaultBorder,\n    dash: [],\n    background: '#fff',\n    vertical: false,\n    position: 'top-left', // top-left, top-right, bottom-left, bottom-right, top-center, bottom-center\n}","export const defaultMargin = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n}","export const defaultPadding = {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n}","import {defaultFont} from \"./font\";\nimport {defaultBorder} from \"./border\";\n\nexport const defaultTooltip = {\n    width: \"auto\",\n    background: \"#fff\",\n    color: \"#000\",\n    font: defaultFont,\n    border: defaultBorder,\n    padding: {\n        top: 10,\n        bottom: 10,\n        left: 10,\n        right: 10\n    },\n    shadow: {\n        shiftX: 2,\n        shiftY: 2,\n        blur: 4,\n        stretch: 0,\n        color: 'rgba(0,0,0,.5)'\n    },\n}","export const defaultColors = {\n    aliceBlue: \"#f0f8ff\",\n    antiqueWhite: \"#faebd7\",\n    aqua: \"#00ffff\",\n    aquamarine: \"#7fffd4\",\n    azure: \"#f0ffff\",\n    beige: \"#f5f5dc\",\n    bisque: \"#ffe4c4\",\n    black: \"#000000\",\n    blanchedAlmond: \"#ffebcd\",\n    blue: \"#0000ff\",\n    blueViolet: \"#8a2be2\",\n    brown: \"#a52a2a\",\n    burlyWood: \"#deb887\",\n    cadetBlue: \"#5f9ea0\",\n    chartreuse: \"#7fff00\",\n    chocolate: \"#d2691e\",\n    coral: \"#ff7f50\",\n    cornflowerBlue: \"#6495ed\",\n    cornsilk: \"#fff8dc\",\n    crimson: \"#dc143c\",\n    cyan: \"#00ffff\",\n    darkBlue: \"#00008b\",\n    darkCyan: \"#008b8b\",\n    darkEasyITCenterRod: \"#b8860b\",\n    darkGray: \"#a9a9a9\",\n    darkGreen: \"#006400\",\n    darkKhaki: \"#bdb76b\",\n    darkMagenta: \"#8b008b\",\n    darkOliveGreen: \"#556b2f\",\n    darkOrange: \"#ff8c00\",\n    darkOrchid: \"#9932cc\",\n    darkRed: \"#8b0000\",\n    darkSalmon: \"#e9967a\",\n    darkSeaGreen: \"#8fbc8f\",\n    darkSlateBlue: \"#483d8b\",\n    darkSlateGray: \"#2f4f4f\",\n    darkTurquoise: \"#00ced1\",\n    darkViolet: \"#9400d3\",\n    deepPink: \"#ff1493\",\n    deepSkyBlue: \"#00bfff\",\n    dimGray: \"#696969\",\n    dodgerBlue: \"#1e90ff\",\n    fireBrick: \"#b22222\",\n    floralWhite: \"#fffaf0\",\n    forestGreen: \"#228b22\",\n    fuchsia: \"#ff00ff\",\n    gainsboro: \"#DCDCDC\",\n    ghostWhite: \"#F8F8FF\",\n    gold: \"#ffd700\",\n    EasyITCenterRod: \"#daa520\",\n    gray: \"#808080\",\n    green: \"#008000\",\n    greenYellow: \"#adff2f\",\n    honeyDew: \"#f0fff0\",\n    hotPink: \"#ff69b4\",\n    indianRed: \"#cd5c5c\",\n    indigo: \"#4b0082\",\n    ivory: \"#fffff0\",\n    khaki: \"#f0e68c\",\n    lavender: \"#e6e6fa\",\n    lavenderBlush: \"#fff0f5\",\n    lawnGreen: \"#7cfc00\",\n    lemonChiffon: \"#fffacd\",\n    lightBlue: \"#add8e6\",\n    lightCoral: \"#f08080\",\n    lightCyan: \"#e0ffff\",\n    lightEasyITCenterRodYellow: \"#fafad2\",\n    lightGray: \"#d3d3d3\",\n    lightGreen: \"#90ee90\",\n    lightPink: \"#ffb6c1\",\n    lightSalmon: \"#ffa07a\",\n    lightSeaGreen: \"#20b2aa\",\n    lightSkyBlue: \"#87cefa\",\n    lightSlateGray: \"#778899\",\n    lightSteelBlue: \"#b0c4de\",\n    lightYellow: \"#ffffe0\",\n    lime: \"#00ff00\",\n    limeGreen: \"#32dc32\",\n    linen: \"#faf0e6\",\n    magenta: \"#ff00ff\",\n    maroon: \"#800000\",\n    mediumAquaMarine: \"#66cdaa\",\n    mediumBlue: \"#0000cd\",\n    mediumOrchid: \"#ba55d3\",\n    mediumPurple: \"#9370db\",\n    mediumSeaGreen: \"#3cb371\",\n    mediumSlateBlue: \"#7b68ee\",\n    mediumSpringGreen: \"#00fa9a\",\n    mediumTurquoise: \"#48d1cc\",\n    mediumVioletRed: \"#c71585\",\n    midnightBlue: \"#191970\",\n    mintCream: \"#f5fffa\",\n    mistyRose: \"#ffe4e1\",\n    moccasin: \"#ffe4b5\",\n    navajoWhite: \"#ffdead\",\n    navy: \"#000080\",\n    oldLace: \"#fdd5e6\",\n    olive: \"#808000\",\n    oliveDrab: \"#6b8e23\",\n    orange: \"#ffa500\",\n    orangeRed: \"#ff4500\",\n    orchid: \"#da70d6\",\n    paleEasyITCenterRod: \"#eee8aa\",\n    paleGreen: \"#98fb98\",\n    paleTurquoise: \"#afeeee\",\n    paleVioletRed: \"#db7093\",\n    papayaWhip: \"#ffefd5\",\n    peachPuff: \"#ffdab9\",\n    peru: \"#cd853f\",\n    pink: \"#ffc0cb\",\n    plum: \"#dda0dd\",\n    powderBlue: \"#b0e0e6\",\n    purple: \"#800080\",\n    rebeccaPurple: \"#663399\",\n    red: \"#ff0000\",\n    rosyBrown: \"#bc8f8f\",\n    royalBlue: \"#4169e1\",\n    saddleBrown: \"#8b4513\",\n    salmon: \"#fa8072\",\n    sandyBrown: \"#f4a460\",\n    seaGreen: \"#2e8b57\",\n    seaShell: \"#fff5ee\",\n    sienna: \"#a0522d\",\n    silver: \"#c0c0c0\",\n    slyBlue: \"#87ceeb\",\n    slateBlue: \"#6a5acd\",\n    slateGray: \"#708090\",\n    snow: \"#fffafa\",\n    springGreen: \"#00ff7f\",\n    steelBlue: \"#4682b4\",\n    tan: \"#d2b48c\",\n    teal: \"#008080\",\n    thistle: \"#d8bfd8\",\n    tomato: \"#ff6347\",\n    turquoise: \"#40e0d0\",\n    violet: \"#ee82ee\",\n    wheat: \"#f5deb3\",\n    white: \"#ffffff\",\n    whiteSmoke: \"#f5f5f5\",\n    yellow: \"#ffff00\",\n    yellowGreen: \"#9acd32\",\n}","import {isObject} from \"./is-object\"\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nexport function merge(target, ...sources) {\n    if (!sources.length) return target;\n    const source = sources.shift();\n\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (isObject(source[key])) {\n                if (!target[key]) Object.assign(target, { [key]: {} });\n                merge(target[key], source[key]);\n            } else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n\n    return merge(target, ...sources);\n}","/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n","export const drawText = (ctx, text, [x, y], {align = 'left', baseLine = 'middle', color = '#000', stroke = '#000', font, angle = 0, translate = [0,0]} = {}) => {\n    const {\n        style = 'normal',\n        weight = 'normal',\n        size = 12,\n        lineHeight = 1,\n        family = 'sans-serif'\n    } = font\n\n    let tX = 0, tY = 0\n\n    if (typeof translate === \"number\") {\n        tX = tY = translate\n    } else if (Array.isArray(translate)) {\n        [tX, tY] = translate\n    }\n\n    ctx.save()\n    ctx.beginPath()\n    ctx.textAlign = align\n    ctx.fillStyle = color\n    ctx.strokeStyle = stroke\n    ctx.font = `${style} ${weight} ${size}px/${lineHeight} ${family}`\n    ctx.translate(tX, tY)\n    ctx.rotate(angle * Math.PI / 180)\n    ctx.textBaseline = baseLine\n\n    const lines = text.toString().split('\\n')\n\n    lines.map( (str, i) => {\n        ctx.fillText(str, x, y + (y * i * lineHeight))\n    })\n\n    ctx.closePath()\n    ctx.restore()\n}","import {isObject} from \"../helpers/is-object\"\nimport {getTextBoxWidth} from \"../helpers/get-textbox-width\"\nimport {drawSquare} from \"../draw/square\"\nimport {drawText} from \"../draw/text\"\nimport {drawBox} from \"../draw/box\"\nimport {expandPadding} from \"../helpers/expand-padding\"\nimport {expandMargin} from \"../helpers/expand-margin\"\n\nexport const MixinLegend = {\n    legend() {\n        const o = this.options\n\n        return o.legend.vertical === true\n            ? this.legendVertical()\n            : this.legendHorizontal()\n    },\n\n    legendHorizontal(){\n        const o = this.options, padding = expandPadding(o.padding), legend = o.legend\n        const ctx = this.ctx\n        const items = this.legendItems\n\n        if (!legend || !isObject(legend)) return\n        if (!items || !Array.isArray(items) || !items.length) return\n\n        const legendPadding = expandPadding(legend.padding)\n        const legendMargin = expandMargin(legend.margin)\n        let lh, x, y, magic = 5, box\n        let offset = 0\n\n        box = legend.font.size / 2\n\n        lh = legend.font.size * legend.font.lineHeight\n        y = padding.top + this.viewHeight + (legend.font.size + legendPadding.top + legendMargin.top)\n        x = padding.left + legendPadding.left + legendMargin.left\n\n        for (let i = 0; i < items.length; i++) {\n            let [name, _, value] = items[i]\n            offset += getTextBoxWidth(ctx,[[legend.showValue ? `${name} - ${value}` : name]], {font: legend.font}) + box * 2 + magic\n        }\n\n        offset = (this.viewWidth - offset) / 2\n\n        for (let i = 0; i < items.length; i++) {\n            let [name, color, value] = items[i]\n\n            const nameWidth = getTextBoxWidth(ctx,[[legend.showValue ? `${name} - ${value}` : name]], {font: legend.font})\n\n            if (x + nameWidth > this.viewWidth) {\n                x = padding.left + legendPadding.left + legendMargin.left\n                y += lh\n            }\n\n            drawSquare(ctx, [offset + x, y, box], {color, fill: color})\n            drawText(\n                ctx,\n                legend.showValue ? `${name} - ${value}` : name,\n                [offset + x + box + magic, y + box / 2],\n                {\n                    color: legend.font.color,\n                    stroke: legend.font.color,\n                    font: o.font\n                }\n            )\n\n            x += box + nameWidth + 20\n        }\n    },\n\n    legendVertical(){\n        const o = this.options, legend = o.legend, font = legend.font ?? o.font\n        let lh, x, y, magic = 5, box = font.size / 2\n        const ctx = this.ctx\n        const items = this.legendItems\n        let textBoxWidth, textBoxHeight\n        const legendPadding = expandPadding(legend.padding), legendMargin = expandMargin(legend.margin)\n        const padding = expandPadding(o.padding)\n\n        if (!legend || !isObject(legend)) return\n        if (!items || !Array.isArray(items) || !items.length) return\n\n        lh = font.size * font.lineHeight\n\n        textBoxWidth = getTextBoxWidth(ctx, items, {font}) + legendPadding.left + legendPadding.right + box * 3 + magic\n        textBoxHeight = items.length * lh + legendPadding.top + legendPadding.bottom + magic\n\n        if (legend.position === 'top-left') {\n            x = legendPadding.left + legendMargin.left\n            y = legendPadding.top + legendMargin.top\n        } else if (legend.position === 'top-right') {\n            x = this.dpiWidth - textBoxWidth - legendMargin.right - padding.right\n            y = legendPadding.top + legendMargin.top\n        } else if (legend.position === 'bottom-left') {\n            x = legendPadding.left + legendMargin.left\n            y = this.dpiHeight - textBoxHeight - legendPadding.bottom - legendMargin.bottom\n        } else {\n            x = this.dpiWidth - textBoxWidth - legendMargin.right - legendPadding.right\n            y = this.dpiHeight - textBoxHeight - legendPadding.bottom - legendMargin.bottom\n        }\n\n        drawBox(ctx, [x, y, textBoxWidth, textBoxHeight], {\n            color: legend.background,\n            dash: legend.dash,\n            size: legend.border.width,\n            borderColor: legend.border.color\n        })\n\n        x += box + magic + legendPadding.left\n        y += box + magic + legendPadding.top\n\n        for (let i = 0; i < items.length; i++) {\n            let [name, color, value] = items[i]\n\n            drawSquare(ctx, [x, y, box], {color, fill: color})\n            drawText(ctx, legend.showValue ? `${name} - ${value}` : name, [x + box + magic, y + 1], {color: legend.font.color, stroke: legend.font.color, font: legend.font})\n\n            y += lh\n        }\n    }\n}","export const getTextBoxWidth = (ctx, items, {font = null}) => {\n    let size = 0, w\n\n    ctx.save()\n\n    if (font) {\n        const {style = 'normal', weight = 'normal', size = 12, lineHeight = 1.2, family = 'sans-serif'} = font\n        ctx.font = `${style} ${weight} ${size}px/${lineHeight} ${family}`\n    }\n\n    for(let i = 0; i < items.length; i++) {\n        w = ctx.measureText(items[i][0]).width\n        if (w > size) size = w\n    }\n\n    ctx.restore()\n\n    return size\n}","export const drawSquare = (ctx, [x, y, r], {color = '#000', fill = '#fff', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.rect(x - r, y - r, r * 2, r * 2)\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","export const drawBox = (ctx, [x, y, w, h], {color = '#fff', borderColor = '#000', dash = [], size = 1} = {}) => {\n    ctx.save()\n    ctx.beginPath()\n    ctx.strokeStyle = borderColor\n    ctx.fillStyle = color\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.clearRect(x, y, w, h)\n    ctx.fillRect(x, y, w, h)\n    if (size) ctx.strokeRect(x, y, w, h)\n    ctx.closePath()\n    ctx.restore()\n}","export const expandPadding = padding => {\n    if (typeof padding === \"number\") {\n        return {\n            top: padding,\n            left: padding,\n            right: padding,\n            bottom: padding\n        }\n    }\n\n    return padding\n}","export const expandMargin = margin => {\n    if (typeof margin === \"number\") {\n        return {\n            top: margin,\n            left: margin,\n            right: margin,\n            bottom: margin\n        }\n    }\n\n    return margin\n}","import {expandPadding} from \"../helpers/expand-padding\";\n\nexport const MixinTooltip = {\n    showTooltip(data, graph){\n        const o = this.options\n\n        if (this.tooltip) {\n            this.tooltip.remove()\n            this.tooltip = null\n        }\n\n        if (!o.tooltip) return\n\n        let {x, y} = this.proxy.mouse\n        const tooltip = document.createElement(\"div\")\n        const onShow = o.onTooltipShow\n        const font = o.tooltip.font\n        const shadow = o.tooltip.shadow\n        const border = o.tooltip.border\n        const padding = expandPadding(o.tooltip.padding)\n\n        tooltip.style.position = 'fixed'\n        tooltip.style.border = `${border.width}px ${border.lineType} ${border.color}`\n        tooltip.style.borderRadius = `${border.radius}`\n        tooltip.style.padding = `${padding.top}px ${padding.right}px ${padding.bottom}px ${padding.left}px`\n        tooltip.style.background = `${o.tooltip.background}`\n        tooltip.style.font = `${font.style} ${font.weight} ${font.size}px/${font.lineHeight} ${font.family}`\n        tooltip.style.boxShadow = `${shadow.shiftX}px ${shadow.shiftY}px ${shadow.blur}px ${shadow.color}`\n\n        tooltip.innerHTML = onShow && typeof onShow === 'function' ? onShow.apply(null, [data, graph]) : data\n\n        document.querySelector('body').appendChild(tooltip)\n\n        tooltip.style.top = `${y - tooltip.clientHeight - 15}px`\n        tooltip.style.left = `${x - tooltip.clientWidth / 2 - 5}px`\n\n        this.tooltip = tooltip\n    }\n}\n","import {defaultAreaChartOptions} from \"../../defaults/area\"\nimport {Chart} from \"../base\"\nimport {minMax} from \"../../helpers/min-max\"\nimport {drawCircle} from \"../../draw/circle\"\nimport {drawSquare} from \"../../draw/square\"\nimport {drawTriangle} from \"../../draw/triangle\"\nimport {drawDiamond} from \"../../draw/diamond\"\nimport {merge} from \"../../helpers/merge\"\nimport {expandPadding} from \"../../helpers/expand-padding\"\nimport {drawArea} from \"../../draw/area\";\n\nimport {MixinCross} from \"../../mixins/cross\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {MixinAddPoint} from \"../../mixins/add-point\";\nimport {drawLine} from \"../../draw/line\";\nimport {MixinArrows} from \"../../mixins/arrows\";\nimport {isObject} from \"../../helpers/is-object\";\n\nexport class AreaChart extends Chart {\n    constructor(el, data = [], options = {}) {\n        super(el, data, merge({}, defaultAreaChartOptions, options), 'area')\n\n        this.coords = {}\n        this.minX = 0\n        this.maxX = 0\n        this.minY = 0\n        this.maxY = 0\n\n        this.legendItems = []\n        const legend = this.options.legend\n        const areas = this.options.areas\n        const colors = this.options.colors\n        if (legend) {\n            for (let i = 0; i < this.data.length; i++) {\n                this.legendItems.push([areas[i].name, colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        for (let _data of this.data) {\n            if (!Array.isArray(_data)) continue\n\n            for( const [x, y] of _data) {\n                a.push([x, y])\n            }\n        }\n\n        const [minX, maxX] = minMax(a, 'x');\n        const [minY, maxY] = minMax(a, 'y');\n\n        this.minX = o.boundaries && !isNaN(o.boundaries.minX) ? o.boundaries.minX : minX\n        this.maxX = o.boundaries && !isNaN(o.boundaries.maxX) ? o.boundaries.maxX : maxX\n        this.minY = o.boundaries && !isNaN(o.boundaries.minY) ? o.boundaries.minY : minY\n        this.maxY = o.boundaries && !isNaN(o.boundaries.maxY) ? o.boundaries.maxY : maxY\n\n        if (isNaN(this.minX)) this.minX = 0\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.minY)) this.minX = 0\n        if (isNaN(this.maxY)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratioX = this.viewWidth / (this.maxX === this.minX ? this.maxX : this.maxX - this.minX)\n        this.ratioY = this.viewHeight / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    areas(){\n        const o = this.options, padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        let coords\n\n        if (!this.data || !this.data.length) return\n\n        for (let i = 0; i < this.data.length; i++) {\n            const area = o.areas[i]\n            const data = this.data[i]\n            const color = area.color ?? o.colors[i]\n            const fill = area.fill ?? color\n\n            coords = []\n\n            coords.push([padding.left, this.viewHeight + padding.top, 0, 0])\n\n            for (const [x, y] of data) {\n                let _x = Math.floor((x - this.minX) * this.ratioX + padding.left)\n                let _y = Math.floor(this.viewHeight + padding.top - (y - this.minY) * this.ratioY)\n\n                coords.push([_x, _y, x, y])\n            }\n\n            coords.push([coords[coords.length - 1][0], this.viewHeight + padding.top, 0, 0])\n\n            drawArea(ctx, coords, {color, fill, size: area.size})\n\n            let dots = area.dots ? area.dots : {\n                type: 'dot', // dot, square, triangle\n            }\n            let opt = {\n                color: dots.color ?? color,\n                fill: dots.fill ?? color,\n                radius: dots.size ?? 4\n            }\n\n            let drawPointFn\n\n            switch (dots.type) {\n                case 'square':\n                    drawPointFn = drawSquare\n                    break\n                case 'triangle':\n                    drawPointFn = drawTriangle\n                    break\n                case 'diamond':\n                    drawPointFn = drawDiamond\n                    break\n                default: drawPointFn = drawCircle\n            }\n\n            if (area.dots && o.showDots !== false) {\n                coords.map(([x, y], index) => {\n                    if (index && index < coords.length - 1)\n                        drawPointFn(ctx, [x, y, opt.radius], opt)\n                })\n            }\n\n            this.coords[area.name] = {\n                area,\n                coords,\n                drawPointFn,\n                opt\n            }\n\n            coords.shift()\n            coords.pop()\n\n            if (area.showLines !== false) {\n                drawLine(ctx, coords, {color, fill, size: area.size})\n            }\n        }\n    }\n\n    floatPoint(){\n        const o = this.options\n        const ctx = this.ctx\n        const rect = this.canvas.getBoundingClientRect()\n        let tooltip = false\n\n        if (!this.data || !this.data.length) return\n        if (!this.proxy.mouse) return\n\n        let {x, y} = this.proxy.mouse\n\n        const mx = x - rect.left\n        const my = y - rect.top\n\n        for (const name in this.coords) {\n            const item = this.coords[name]\n            const drawPointFn = item.drawPointFn\n            const opt = item.opt\n\n            for (const [px, py, _x, _y] of item.coords) {\n                const accuracy = +(o.accuracy || opt.radius)\n                const lx = px - accuracy, rx = px + accuracy\n                const ly = py - accuracy, ry = py + accuracy\n\n                if ((mx > lx && mx < rx) && (o.hoverMode !== 'default')) {\n                    drawPointFn(ctx, [px, py, opt.radius], {color: opt.color, fill: opt.fill})\n                }\n\n                if ((mx > lx && mx < rx) && (my > ly && my < ry)) {\n                    if (o.hoverMode === 'default') drawPointFn(ctx, [px, py, opt.radius * 2], {color: opt.color, fill: opt.fill})\n                    if ( o.tooltip ) {\n                        this.showTooltip([_x, _y], item.graph)\n                        tooltip = true\n                    }\n                    break\n                }\n            }\n\n            if (!tooltip && this.tooltip) {\n                this.tooltip.remove()\n                this.tooltip = null\n            }\n        }\n    }\n\n    add(index, [x, y], shift, align){\n        this.addPoint(index, [x, y], shift)\n\n        this.minX = this.data[index][0][0]\n        this.maxX = x\n\n        if (align) {\n            if (isObject(align)) {\n                this.align(align)\n            }\n        } else {\n            if (y < this.minY) this.minY = y\n            if (y > this.maxY) this.maxY = y\n        }\n\n        this.resize()\n    }\n\n    align({minX, maxX, minY, maxY}){\n        let a = []\n\n        for (let _data of this.data) {\n            if (!Array.isArray(_data)) continue\n\n            for( const [x, y] of _data) {\n                a.push([x, y])\n            }\n        }\n\n        const [_minX, _maxX] = minMax(a, 'x')\n        const [_minY, _maxY] = minMax(a, 'y')\n\n        if (minX) this.minX = _minX\n        if (minY) this.minY = _minY\n        if (maxX) this.maxX = _maxX\n        if (maxY) this.maxY = _maxY\n    }\n\n    draw(){\n        super.draw()\n        this.calcRatio()\n        this.axisXY()\n        this.arrows()\n        this.areas()\n        this.floatPoint()\n        this.cross()\n        this.legend()\n    }\n}\n\nObject.assign(AreaChart.prototype, MixinCross)\nObject.assign(AreaChart.prototype, MixinAxis)\nObject.assign(AreaChart.prototype, MixinAddPoint)\nObject.assign(AreaChart.prototype, MixinArrows)\n\nexport const areaChart = (el, data, options) => new AreaChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultCross} from \"./elements/cross\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultAreaChartOptions = {\n    axis: defaultAxis,\n    cross: defaultCross,\n    showDots: true,\n    accuracy: 2,\n    arrows: defaultArrows\n}","import {labelFont} from \"./font\";\n\nconst line = {\n    color: '#e3e3e3',\n    size: 1,\n    dash: [],\n    shortLineSize: 5\n}\n\nconst label = {\n    color: '#000',\n    font: labelFont,\n    count: 5,\n    fixed: false,\n    opposite: false,\n    angle: 0,\n    align: 'center',\n    shift: {\n        x: 0,\n        y: 0\n    },\n    skip: 0,\n    showLine: true,\n    showLabel: true,\n    showMin: true,\n    step: \"auto\"\n}\n\nconst axis = {\n    line,\n    label,\n}\n\nexport const defaultAxis = {\n    x: axis,\n    y: {\n        ...axis,\n        label: {\n            ...label,\n            align: 'right'\n        }\n    }\n}","export const defaultCross = {\n    size: 1,\n    color: '#bbb',\n    dash: [5, 3]\n}","const defaultArrow = {\n    color: '#7d7d7d',\n    size: 1,\n    dash: [],\n    factorX: 5,\n    factorY: 5,\n    outside: 0\n}\n\nexport const defaultArrows = {\n    x: defaultArrow,\n    y: defaultArrow,\n}","export const minMax = (data = [], by = 'x') => {\n    let min, max, v\n    let index\n\n    if (typeof by === \"number\") {\n        index = by\n    } else {\n        switch (by.toString().toLowerCase()) {\n            case 'y':\n                index = 1\n                break\n            case 'z':\n                index = 2\n                break\n            default:\n                index = 0\n        }\n    }\n\n    for (const _ of data) {\n        v = _[index]\n\n        if (isNaN(min) || min > v) min = v\n        if (isNaN(max) || max < v) max = v\n    }\n\n    return [min, max]\n}\n\nexport const minMaxLinear = (data = []) => {\n    let min, max\n\n    min = Math.min.apply(null, data)\n    max = Math.max.apply(null, data)\n\n    return [min, max]\n}","export const drawCircle = (ctx, [x, y, r], {color = '#000', fill = '#fff', size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash([])\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.arc(x, y, r, 0, 2 * Math.PI)\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","export const drawTriangle = (ctx, [x, y, r], {color = '#000', fill = '#fff', size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash([])\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.moveTo(x, y - r);\n    ctx.lineTo(x + r, y + r);\n    ctx.lineTo(x - r, y + r);\n    ctx.lineTo(x, y - r);\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","export const drawDiamond = (ctx, [x, y, r], {color = '#000', fill = '#fff', size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash([])\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.moveTo(x, y - r);\n    ctx.lineTo(x + r, y);\n    ctx.lineTo(x, y + r);\n    ctx.lineTo(x - r, y);\n    ctx.lineTo(x, y - r);\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","export const drawArea = (ctx, coords = [], {color = '#000', fill = '#000', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    coords.map(([x, y]) => {\n        ctx.lineTo(x, y)\n    })\n    ctx.lineTo(coords[0][0], coords[0][1])\n\n    ctx.fill()\n    ctx.restore()\n    ctx.closePath()\n}","import {expandPadding} from \"../helpers/expand-padding\";\n\nexport const MixinCross = {\n    cross(){\n        const o = this.options, cross = o.cross\n        const padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        const rect = this.canvas.getBoundingClientRect()\n\n        if (!o.cross || (o.cross && !this.proxy.mouse)) return\n\n        let {x, y} = this.proxy.mouse\n\n        x -= rect.left\n        y -= rect.top\n\n        if ((x - padding.left + 1 < 0) || (x > this.viewWidth + padding.left + 1)) return\n        if ((y - padding.top + 1 < 0) || (y > this.viewHeight + padding.top + 1)) return\n\n        ctx.beginPath()\n        ctx.setLineDash(o.cross.dash)\n        ctx.lineWidth = cross.size\n        ctx.strokeStyle = cross.color\n\n        // vertical line\n        ctx.moveTo(x, padding.top)\n        ctx.lineTo(x, this.viewHeight + padding.top)\n\n        // Horizontal line\n        ctx.moveTo(padding.left, y)\n        ctx.lineTo(this.viewWidth + padding.left, y)\n\n        ctx.arc(x, y, 10, 0, 2 * Math.PI)\n\n        ctx.stroke()\n        ctx.closePath()\n    }\n}","import {drawVector} from \"../draw/vector\";\nimport {drawText} from \"../draw/text\";\nimport {expandPadding} from \"../helpers/expand-padding\";\nimport {ceil} from \"../helpers/round.js\";\n\nexport const MixinAxis = {\n    axisX(){\n        const ctx = this.ctx, o = this.options\n        const padding = expandPadding(o.padding)\n\n        if (!o.axis.x) return\n\n        const axis = o.axis.x, label = axis.label, line = axis.line, arrow = axis.arrow\n        const font = (label && label.font) ?? o.font\n\n        const lFactor = 10 ** ((\"\"+this.maxX).length - 2)\n        const lMax = ceil(this.maxX, lFactor)\n        const labelStep = label.step === 'auto' ? label.count ? (this.maxX - this.minX) / label.count : 0 : label.step ? label.step : label.count ? Math.ceil(lMax / label.count) : 0\n\n        let labelValue, value, k, x, y, labelY, shortLineSize = line.shortLineSize ?? 0\n\n        x = padding.left\n        y = padding.top\n        labelY = padding.top + this.viewHeight + font.size + 5\n        value = this.minX\n        k = 0\n        for (let i = 0; i <= label.count; i++) {\n            labelValue = typeof label.fixed === \"number\" ? value.toFixed(label.fixed) : value\n            if (typeof o.onDrawLabelX === \"function\") {\n                labelValue = o.onDrawLabelX.apply(null, [value])\n            }\n\n            if (label.showLine) {\n                drawVector(\n                    ctx,\n                    [x, y, x, y + this.viewHeight],\n                    {\n                        color: line.color,\n                        size: line.size,\n                        dash: line.dash\n                    }\n                )\n            }\n\n            if (label.skip && k !== label.skip) {\n                k++\n            } else {\n                k = 1\n\n                if (label.showLabel && !(!i && !label.showMin)) {\n                    // short line\n                    drawVector(\n                        ctx,\n                        [x, this.viewHeight + padding.top - shortLineSize, x, this.viewHeight + padding.top + shortLineSize],\n                        {\n                            color: (arrow && arrow.color) ? arrow.color : line.color,\n                        }\n                    )\n\n                    // label\n                    drawText(\n                        ctx,\n                        labelValue.toString(),\n                        [0, 0],\n                        {\n                            color: label.color ?? o.color,\n                            align: label.align,\n                            font,\n                            translate: [x + (label.shift.x ?? 0), labelY + (label.shift.y ?? 0)],\n                            angle: label.angle\n                        }\n                    )\n                }\n            }\n\n            value += labelStep\n            x = padding.left + (value - this.minX) * this.ratioX\n        }\n    },\n\n    axisY(){\n        const ctx = this.ctx, o = this.options\n        const padding = expandPadding(o.padding)\n\n        if (!o.axis.y) return\n\n        const axis = o.axis.y, label = axis.label, line = axis.line, arrow = axis.arrow\n        const font = (label && label.font) ?? o.font\n\n        const lFactor = 10 ** ((\"\"+this.maxY).length - 2)\n        const lMax = ceil(this.maxY, lFactor)\n        const labelStep = label.step === 'auto' ? label.count ? (this.maxY - this.minY) / label.count : 0 : label.step ? label.step : label.count ? Math.ceil(lMax / label.count) : 0\n\n        let labelValue, value, k, x, y, labelX, shortLineX\n        const shortLineSize = line.shortLineSize ?? 0\n\n        x = padding.left\n        labelX = padding.left\n        y = this.viewHeight + padding.top\n        value = this.minY\n        k = 0\n\n        if (label.opposite) {\n            labelX += this.viewWidth + 10 + shortLineSize\n            shortLineX = padding.left + this.viewWidth\n            label.align = 'left'\n        } else {\n            labelX -= 10\n            shortLineX = x - shortLineSize\n        }\n\n        for (let i = 0; i < label.count + 1; i++) {\n            labelValue = typeof label.fixed === \"number\" ? value.toFixed(label.fixed) : value\n            if (typeof o.onDrawLabelY === \"function\") {\n                labelValue = o.onDrawLabelY.apply(null, [value])\n            }\n\n            if (label.showLine) {\n                drawVector(ctx, [x, y, this.viewWidth + padding.left, y], {\n                    color: line.color,\n                    size: line.size,\n                    dash: line.dash\n                })\n            }\n\n            if (i !== 0 && label.skip && k !== label.skip) {\n                k++\n            } else {\n                k = 1\n\n                if (label.showLabel && !(!i && !label.showMin)) {\n\n                    // short line\n                    drawVector(\n                        ctx,\n                        [shortLineX, y, shortLineX + shortLineSize * 2, y],\n                        {\n                            color: (arrow && arrow.color) ? arrow.color : line.color,\n                        }\n                    )\n\n                    drawText(\n                        ctx,\n                        labelValue.toString(),\n                        [0, 0],\n                        {\n                            color: (label && label.color) ?? o.color,\n                            align: label.align,\n                            font,\n                            translate: [labelX + (label.shift.x ?? 0), y + 1 + (label.shift.y ?? 0)],\n                            angle: label.angle\n                        }\n                    )\n                }\n            }\n\n            value += labelStep\n            y = padding.top + this.viewHeight - (value - this.minY) * this.ratioY\n        }\n    },\n\n    axisXY(){\n        if (!this.options.axis) return\n\n        this.axisX()\n        this.axisY()\n\n        return this\n    }\n}","export const drawVector = (ctx, [x1, y1, x2, y2], {color = '#000', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","export const round = (a, b) => Math.round(a/b)*b\nexport const ceil = (a, b) => Math.ceil(a/b)*b\nexport const floor = (a, b) => Math.floor(a/b)*b","export const MixinAddPoint = {\n    addPoint(index, point, shift = false){\n        const o = this.options\n        let data\n\n        if (!this.data) {\n            this.data = []\n            for(let i = 0; i < index + 1; i++) {\n                this.data[i] = []\n            }\n        }\n\n        data = this.data[index]\n\n        if (shift && data.length) {\n            if (!o.graphSize) {\n                data = data.slice(1)\n            } else {\n                if (data.length >= o.graphSize) {\n                    data = data.slice(1)\n                }\n            }\n        }\n\n        this.data[index] = data\n        this.data[index].push(point)\n    }\n}","export const drawLine = (ctx, coords = [], {color = '#000', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n\n    coords.map(([x, y]) => {\n        ctx.lineTo(x, y)\n    })\n\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","import {expandPadding} from \"../helpers/expand-padding\";\nimport {drawArrowX} from \"../draw/arrow-x\";\nimport {drawArrowY} from \"../draw/arrow-y\";\n\nexport const MixinArrows = {\n    arrowX(){\n        const o = this.options, ctx = this.ctx\n        const padding = expandPadding(o.padding)\n\n        if (!o.arrows.x) return\n\n        const arrow = o.arrows.x\n        const x1 = padding.left, y1 = this.viewHeight + padding.top\n        const x2 = padding.left + this.viewWidth + arrow.outside, y2 = y1\n\n        drawArrowX(\n            ctx,\n            [x1, y1, x2, y2, arrow.factorX, arrow.factorY],\n            {\n                color: arrow.color,\n                size: arrow.size,\n                dash: arrow.dash\n            }\n        )\n    },\n\n    arrowY(){\n        const o = this.options, ctx = this.ctx\n        const padding = expandPadding(o.padding)\n\n        if (!o.arrows.y) return\n\n        const arrow = o.arrows.y\n        const x = padding.left, y1 = this.viewHeight + padding.top\n        const y2 = padding.top - arrow.outside\n\n        drawArrowY(\n            ctx,\n            [x, y1, x, y2, arrow.factorX, arrow.factorY],\n            {\n                color: arrow.color,\n                size: arrow.size,\n                dash: arrow.dash\n            }\n        )\n    },\n\n    arrows(){\n        if (!this.options.arrows) return\n\n        this.arrowX()\n        this.arrowY()\n\n        return this\n    }\n}","export const drawArrowX = (ctx, [x1, y1, x2, y2, factorX, factorY], {color = '#000', dash = [], size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.strokeStyle = color\n    ctx.lineWidth = size\n    ctx.setLineDash(dash)\n\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n\n    ctx.moveTo(x2, y2)\n    ctx.lineTo(x2 - factorX, y2 - factorY)\n    ctx.moveTo(x2, y2)\n    ctx.lineTo(x2 - factorX, y2 + factorY)\n\n    ctx.stroke()\n    ctx.closePath()\n}","export const drawArrowY = (ctx, [x1, y1, x2, y2, factorX, factorY], {color = '#000', dash = [], size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.strokeStyle = color\n    ctx.lineWidth = size\n    ctx.setLineDash(dash)\n\n    ctx.moveTo(x1, y1)\n    ctx.lineTo(x2, y2)\n\n    ctx.moveTo(x2, y2)\n    ctx.lineTo(x2 - factorX, y2 + factorY)\n    ctx.moveTo(x2, y2)\n    ctx.lineTo(x2 + factorX, y2 + factorY)\n\n    ctx.stroke()\n    ctx.closePath()\n}","import {Chart} from \"../base\"\nimport {merge} from \"../../helpers/merge\";\nimport {defaultBarChartOptions} from \"../../defaults/bar\"\nimport {minMaxLinear} from \"../../helpers/min-max\";\nimport {drawText} from \"../../draw/text\";\nimport {drawRect, drawRectAnimate} from \"../../draw/rect\";\nimport {expandPadding} from \"../../helpers/expand-padding\";\n\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {MixinArrows} from \"../../mixins/arrows\";\n\nexport class BarChart extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultBarChartOptions, options), 'bar')\n\n        this.groups = 0\n        this.barWidth = 0\n        this.maxY = 0\n        this.maxX = 0\n        this.minY = 0\n        this.minX = 0\n        this.viewAxis = this.options.dataAxisX ? this.viewHeight : this.viewWidth\n\n        this.legendItems = []\n        const legend = this.options.legend\n        if (legend && legend.titles && legend.titles.length) {\n            for(let i = 0; i < legend.titles.length; i++) {\n                this.legendItems.push([legend.titles[i], this.options.colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = [], length = 0\n\n        for (let k in this.data) {\n            a = [].concat(a, this.data[k])\n        }\n\n        this.groups = this.data.length\n\n        const [, max] = minMaxLinear(a)\n\n        this.maxX = this.maxY = o.boundaries && !isNaN(o.boundaries.max) ? o.boundaries.max : max\n\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.maxY)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratioX = this.ratioY = this.ratio = (this.options.dataAxisX ? this.viewWidth : this.viewHeight) / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    calcBarWidth(){\n        const o = this.options\n        let bars = 0\n\n        for (let i = 0; i < this.data.length; i++) {\n            bars += Array.isArray(this.data[i]) ? this.data[i].length : 1\n        }\n\n        let availableSpace =\n            (o.dataAxisX ? this.viewHeight : this.viewWidth)\n            - ((this.data.length + 1) * o.groupDistance) // space between groups\n            - ((bars - this.data.length) * o.barDistance) // space between bars\n\n        this.barWidth = availableSpace / bars\n    }\n\n    bars(axisX = false){\n        const o = this.options, bars = o.bars\n        const padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        const rect = this.canvas.getBoundingClientRect()\n        let px, py, mx, my, tooltip = false\n\n        if (!this.data || !this.data.length) return\n\n        if (this.proxy.mouse) {\n            mx = this.proxy.mouse.x - rect.left\n            my = this.proxy.mouse.y - rect.top\n        }\n\n        px = axisX ? padding.left : padding.left + o.groupDistance\n        py = axisX ? padding.top + o.groupDistance : this.viewHeight + padding.top\n\n        for (let g = 0; g < this.data.length; g++) {\n            const graph = this.data[g]\n            const data = Array.isArray(graph) ? graph : [graph]\n            const labelColor = o.labels.color\n            let name = bars[g]\n\n            let groupWidth = 0\n\n            for (let i = 0; i < data.length; i++) {\n                let delta = data[i] * this.ratio\n                let color = data.length === 1 ? o.colors[g] : o.colors[i]\n                const options = {\n                    color,\n                    fill: color\n                }\n                const coords = axisX\n                    ? [px, py, px + delta - padding.right, this.barWidth]\n                    : [px, py - delta, this.barWidth-1, delta]\n\n                drawRect(ctx, coords, options)\n\n                const borderX = axisX\n                    ? [px, px + delta]\n                    : [px, px + this.barWidth - 1]\n\n                const borderY = axisX\n                    ? [py, py + this.barWidth - 1]\n                    : [py - delta, py]\n\n                if ((mx > borderX[0] && mx < borderX[1]) && (my > borderY[0] && my < borderY[1] )) {\n                    drawRect(ctx, coords, {...options, fill: 'rgba(255,255,255,.3)'})\n                    if ( o.tooltip ) {\n                        this.showTooltip([(o.legend.titles ? o.legend.titles[i] : name), data[i]], graph)\n                        tooltip = true\n                    }\n                }\n\n                groupWidth += this.barWidth + o.barDistance\n\n                if (axisX) {\n                    py += o.barDistance + this.barWidth\n                } else {\n                    px += o.barDistance + this.barWidth\n                }\n            }\n\n            if (axisX) {\n                py -= o.barDistance\n            } else {\n                px -= o.barDistance\n            }\n\n            groupWidth -= o.barDistance\n\n            if (typeof o.onDrawLabel === 'function') {\n                name = o.onDrawLabel.apply(null, name)\n            }\n\n            drawText(ctx, name, [0, 0], {\n                align: 'center',\n                color: labelColor,\n                stroke: labelColor,\n                font: o.font,\n                angle: axisX ? 90 : 0,\n                translate: axisX ? [px - 20, py - groupWidth / 2] : [px - groupWidth / 2, py + 20]\n            })\n\n            if (axisX) {\n                py += o.groupDistance\n            } else {\n                px += o.groupDistance\n            }\n        }\n\n        if (!tooltip && this.tooltip) {\n            this.tooltip.remove()\n            this.tooltip = null\n        }\n\n        this.static = true\n    }\n\n    draw(){\n        const o = this.options\n\n        super.draw()\n        this.calcBarWidth()\n        this.calcRatio()\n\n        if (o.dataAxisX) {\n            this.axisX()\n        } else {\n            this.axisY()\n        }\n        this.bars(o.dataAxisX)\n\n        this.arrows()\n\n        this.legend()\n    }\n}\n\nObject.assign(BarChart.prototype, MixinAxis)\nObject.assign(BarChart.prototype, MixinArrows)\n\nexport const barChart = (el, data, options) => new BarChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {labelFont} from \"./elements/font\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultBarChartOptions = {\n    groupDistance: 0,\n    barDistance: 0,\n    axis: {\n        ...defaultAxis,\n    },\n    dataAxisX: false,\n    labels: {\n        font: labelFont,\n        color: '#000'\n    },\n    arrows: defaultArrows,\n    onDrawLabel: null,\n}","import {animate} from \"../animation\";\n\nexport const drawRect = (ctx, [x, y, w, h], {color = '#000', fill = '#fff', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.rect(x, y, w, h)\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}\n\nexport const drawRectAnimate = (ctx, [x, y, w, h], options, {duration = 1000, ease} = {}) => {\n    animate({\n        draw(progress){\n            drawRect(ctx, [x, y, w, h * progress], options)\n        },\n        duration,\n        ease\n    })\n}","import easeFn from \"./ease\"\n\nexport const animate = ({draw, duration = 1000, ease = \"linear\"}) => {\n    let start = performance.now()\n    const timing = easeFn[ease] ?? easeFn\n\n    requestAnimationFrame( function animate (time){\n        let timeFraction = (time - start) / duration;\n        if (timeFraction > 1) timeFraction = 1;\n\n        let progress = timing.apply(null, [timeFraction]);\n\n        draw(progress);\n\n        if (timeFraction < 1) {\n            requestAnimationFrame(animate);\n        }\n    } )\n}","export const linear = t => t\n\nexport default {\n    \"linear\": linear\n}\n","import {Chart} from \"../base\"\nimport {defaultBubbleChartOptions} from \"../../defaults/bubble\"\nimport {MixinCross} from \"../../mixins/cross\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {minMax} from \"../../helpers/min-max\"\nimport {expandPadding} from \"../../helpers/expand-padding\"\nimport {drawCircle} from \"../../draw/circle\"\nimport {merge} from \"../../helpers/merge\"\nimport {MixinArrows} from \"../../mixins/arrows\";\n\nexport class BubbleChart extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultBubbleChartOptions, options), 'bubble')\n\n        this.coords = {}\n\n        this.minX = 0\n        this.maxX = 0\n        this.minY = 0\n        this.maxY = 0\n        this.minZ = 0\n        this.maxZ = 0\n\n        this.legendItems = []\n        const legend = this.options.legend\n        if (legend) {\n            for (let i = 0; i < this.data.length; i++) {\n                this.legendItems.push([this.data[i].name, this.options.colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        for (let k in this.data) {\n            let _data = this.data[k].data\n\n            if (!Array.isArray(_data)) continue\n\n            a.push(_data)\n        }\n\n        const [minX, maxX] = minMax(a, 'x')\n        const [minY, maxY] = minMax(a, 'y')\n        const [minZ, maxZ] = minMax(a, 'z')\n\n        this.minX = o.boundaries && !isNaN(o.boundaries.minX) ? o.boundaries.minX : minX\n        this.maxX = o.boundaries && !isNaN(o.boundaries.maxX) ? o.boundaries.maxX : maxX\n        this.minY = o.boundaries && !isNaN(o.boundaries.minY) ? o.boundaries.minY : minY\n        this.maxY = o.boundaries && !isNaN(o.boundaries.maxY) ? o.boundaries.maxY : maxY\n        this.minZ = o.boundaries && !isNaN(o.boundaries.minZ) ? o.boundaries.minZ : minZ\n        this.maxZ = o.boundaries && !isNaN(o.boundaries.maxZ) ? o.boundaries.maxZ : maxZ\n\n        if (isNaN(this.minX)) this.minX = 0\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.minY)) this.minX = 0\n        if (isNaN(this.maxY)) this.maxX = 100\n        if (isNaN(this.minZ)) this.minX = 0\n        if (isNaN(this.maxZ)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratioX = this.viewWidth / (this.maxX === this.minX ? this.maxX : this.maxX - this.minX)\n        this.ratioY = this.viewHeight / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n        this.ratioZ = this.maxZ / (this.maxZ === this.minZ ? this.maxZ : this.maxZ - this.minZ)\n    }\n\n    bubbles(){\n        const o = this.options, padding = expandPadding(o.padding)\n        const ctx = this.ctx\n\n        if (!this.data || ! this.data.length) return\n\n        for (let i = 0; i < this.data.length; i++) {\n            const graph = this.data[i]\n            const color = o.colors[i]\n            const [x, y, z] = graph.data\n            let _x = Math.floor((x - this.minX) * this.ratioX + padding.left)\n            let _y = Math.floor(this.viewHeight + padding.top - (y - this.minY) * this.ratioY)\n            let _z = Math.floor(z * this.ratioZ)\n\n            drawCircle(ctx,[_x, _y, _z], {fill: color, color: color})\n        }\n    }\n\n    floatPoint(){\n        if (!this.data || ! this.data.length) return\n    }\n\n    add(index, [x, y, z], shift = false){\n        this.addPoint(index, [x, y, z], shift)\n\n        if (x < this.minX) this.minX = x\n        if (x > this.maxX) this.maxX = x\n\n        if (y < this.minY) this.minY = y\n        if (y > this.maxY) this.maxY = y\n\n        if (z < this.minZ) this.minZ = z\n        if (z > this.maxZ) this.maxZ = z\n\n        this.resize()\n    }\n\n    draw(){\n        super.draw()\n        this.calcRatio()\n        this.axisXY()\n        this.arrows()\n        this.bubbles()\n        this.floatPoint()\n        this.cross()\n        this.legend()\n    }\n}\n\nObject.assign(BubbleChart.prototype, MixinCross)\nObject.assign(BubbleChart.prototype, MixinAxis)\nObject.assign(BubbleChart.prototype, MixinArrows)\n\nexport const bubbleChart = (el, data, options) => new BubbleChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultCross} from \"./elements/cross\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultBubbleChartOptions = {\n    axis: defaultAxis,\n    cross: defaultCross,\n    arrows: defaultArrows\n}","import {Chart} from \"../base\"\nimport {defaultHistogramOptions} from \"../../defaults/histogram\"\nimport {minMax} from \"../../helpers/min-max\"\nimport {merge} from \"../../helpers/merge\"\nimport {expandPadding} from \"../../helpers/expand-padding\"\nimport {drawRect} from \"../../draw/rect\"\nimport {MixinCross} from \"../../mixins/cross\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {MixinAddPoint} from \"../../mixins/add-point\";\n\nexport class HistogramChart extends Chart {\n    constructor(el, data = [], options = {}) {\n        super(el, data, merge({}, defaultHistogramOptions, options), 'histogram')\n\n        this.coords = {}\n        this.minX = 0\n        this.maxX = 0\n        this.minY = 0\n        this.maxY = 0\n\n        this.legendItems = []\n        const legend = this.options.legend\n        const bars = this.options.bars\n        const colors = this.options.colors\n        if (legend) {\n            for (let i = 0; i < this.data.length; i++) {\n                this.legendItems.push([bars[i].name, colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        for (let _data of this.data) {\n            if (!Array.isArray(_data)) continue\n\n            for( const [x1, x2, y] of _data) {\n                a.push([x1, x2, y])\n            }\n        }\n\n        const [minX1, maxX1] = minMax(a, 0);\n        const [minX2, maxX2] = minMax(a, 1);\n        const [minY, maxY]   = minMax(a, 2);\n\n        this.minX = o.boundaries && !isNaN(o.boundaries.minX) ? o.boundaries.minX : Math.min(minX1, minX2)\n        this.maxX = o.boundaries && !isNaN(o.boundaries.maxX) ? o.boundaries.maxX : Math.max(maxX1, maxX2)\n        this.minY = o.boundaries && !isNaN(o.boundaries.minY) ? o.boundaries.minY : minY\n        this.maxY = o.boundaries && !isNaN(o.boundaries.maxY) ? o.boundaries.maxY : maxY\n\n        if (isNaN(this.minX)) this.minX = 0\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.minY)) this.minX = 0\n        if (isNaN(this.maxY)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratioX = this.viewWidth / (this.maxX === this.minX ? this.maxX : this.maxX - this.minX)\n        this.ratioY = this.viewHeight / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    bars(){\n        const o = this.options, padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        let bars\n\n        if (!this.data || ! this.data.length) return\n\n        for (let i = 0; i < this.data.length; i++) {\n            const bar = o.bars[i]\n            const data = this.data[i]\n            const color = bar.color || o.colors[i] || \"#000\"\n            const stroke = bar.stroke || '#fff'\n\n            bars = []\n\n            for (const [x1, x2, y] of data) {\n                let _x = Math.floor((x1 - this.minX) * this.ratioX + padding.left)\n                let _w = Math.floor((x2 - this.minX) * this.ratioX + padding.left) - _x\n                let _h = (y - this.minY) * this.ratioY\n                let _y = Math.floor(this.viewHeight + padding.top - _h)\n\n                drawRect(ctx, [_x, _y, _w, _h], {fill: color, color: stroke})\n            }\n        }\n    }\n\n    add(index, [x1, x2, y], shift = false){\n        this.addPoint(index, [x1, x2, y], shift)\n\n        this.minX = this.data[index][0][0]\n        this.maxX = x2\n\n        if (y < this.minY) this.minY = y\n        if (y > this.maxY) this.maxY = y\n\n        this.resize()\n    }\n\n    draw(){\n        super.draw()\n        this.calcRatio()\n        this.axisXY()\n        this.bars()\n        this.cross()\n        this.legend()\n    }\n}\n\nObject.assign(HistogramChart.prototype, MixinCross)\nObject.assign(HistogramChart.prototype, MixinAxis)\nObject.assign(HistogramChart.prototype, MixinAddPoint)\n\nexport const histogramChart = (el, data, options) => new HistogramChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultCross} from \"./elements/cross\";\n\nexport const defaultHistogramOptions = {\n    barWidth: 10,\n    axis: {\n        ...defaultAxis,\n        x: {\n            ...defaultAxis.x,\n            arrow: false\n        },\n        y: {\n            ...defaultAxis.y,\n            arrow: false\n        }\n    },\n    cross: defaultCross,\n    graphSize: 40,\n    bars: {\n        stroke: '#fff'\n    }\n}","import {Chart} from \"../base\"\nimport {minMax} from \"../../helpers/min-max\"\nimport {drawCircle} from \"../../draw/circle\"\nimport {drawLine} from \"../../draw/line\"\nimport {drawSquare} from \"../../draw/square\"\nimport {drawTriangle} from \"../../draw/triangle\"\nimport {drawDiamond} from \"../../draw/diamond\"\nimport {defaultLineChartOptions} from \"../../defaults/line\"\nimport {merge} from \"../../helpers/merge\"\nimport {expandPadding} from \"../../helpers/expand-padding\";\n\nimport {MixinCross} from \"../../mixins/cross\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {MixinAddPoint} from \"../../mixins/add-point\";\nimport {drawCurve} from \"../../draw/curve\";\nimport {mergeProps} from \"../../helpers/merge-props\";\nimport {MixinArrows} from \"../../mixins/arrows\";\nimport {isObject} from \"../../helpers/is-object\";\n\nconst DEFAULT_LINE_TYPE = 'line'\nconst DEFAULT_DOT_TYPE = 'circle'\nconst DOT_TRIANGLE = 'triangle'\nconst DOT_SQUARE = 'square'\nconst DOT_DIAMOND = 'diamond'\nconst VALUE_DEFAULT = 'default'\n\nexport class LineChart extends Chart {\n    constructor(el, data = [], options = {}) {\n        super(el, data, merge({}, defaultLineChartOptions, options), 'line')\n\n        this.coords = {}\n        this.minX = 0\n        this.maxX = 0\n        this.minY = 0\n        this.maxY = 0\n\n        this.legendItems = []\n        const legend = this.options.legend\n        const lines = this.options.lines\n        const colors = this.options.colors\n        if (legend) {\n            for (let i = 0; i < lines.length; i++) {\n                this.legendItems.push([lines[i].name, colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        for (let _data of this.data) {\n            if (!Array.isArray(_data)) continue\n\n            for( const [x, y] of _data) {\n                a.push([x, y])\n            }\n        }\n\n        const [minX, maxX] = minMax(a, 'x');\n        const [minY, maxY] = minMax(a, 'y');\n\n        this.minX = o.boundaries && !isNaN(o.boundaries.minX) ? o.boundaries.minX : minX\n        this.maxX = o.boundaries && !isNaN(o.boundaries.maxX) ? o.boundaries.maxX : maxX\n        this.minY = o.boundaries && !isNaN(o.boundaries.minY) ? o.boundaries.minY : minY\n        this.maxY = o.boundaries && !isNaN(o.boundaries.maxY) ? o.boundaries.maxY : maxY\n\n        if (isNaN(this.minX)) this.minX = 0\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.minY)) this.minX = 0\n        if (isNaN(this.maxY)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratioX = this.viewWidth / (this.maxX === this.minX ? this.maxX : this.maxX - this.minX)\n        this.ratioY = this.viewHeight / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    lines(){\n        const o = this.options, padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        let coords\n\n        if (!this.data || !this.data.length) return\n\n        for (let i = 0; i < this.data.length; i++) {\n            const line = o.lines[i]\n            const data = this.data[i]\n            const color = o.colors[i]\n            const type = line.type || o.type || DEFAULT_LINE_TYPE\n\n            coords = []\n\n            for (const [x, y] of data) {\n                let _x = Math.floor((x - this.minX) * this.ratioX + padding.left)\n                let _y = Math.floor(this.viewHeight + padding.top - (y - this.minY) * this.ratioY)\n\n                coords.push([_x, _y, x, y])\n            }\n\n            if (line.showLine !== false) {\n                if (type !== DEFAULT_LINE_TYPE) {\n                    drawCurve(ctx, coords, {color: color, size: line.size})\n                } else {\n                    drawLine(ctx, coords, {color: color, size: line.size})\n                }\n            }\n\n            let dots = mergeProps({\n                type: DEFAULT_DOT_TYPE,\n            }, o.dots, line.dots)\n\n            let opt = {\n                color: dots.color ?? color,\n                fill: dots.fill ?? color,\n                radius: dots.size ?? 2\n            }\n\n            let drawPointFn\n\n            switch (dots.type) {\n                case DOT_SQUARE:\n                    drawPointFn = drawSquare\n                    break\n                case DOT_TRIANGLE:\n                    drawPointFn = drawTriangle\n                    break\n                case DOT_DIAMOND:\n                    drawPointFn = drawDiamond\n                    break\n                default: drawPointFn = drawCircle\n            }\n\n            if (line.dots && o.showDots !== false) {\n                coords.map(([x, y]) => {\n                    drawPointFn(ctx, [x, y, opt.radius], opt)\n                })\n            }\n\n            this.coords[line.name] = {\n                line,\n                coords,\n                drawPointFn,\n                opt\n            }\n        }\n    }\n\n    floatPoint(){\n        const o = this.options\n        const ctx = this.ctx\n        const rect = this.canvas.getBoundingClientRect()\n        let tooltip = false\n\n        if (!this.data || !this.data.length) return\n        if (!this.proxy.mouse) return\n\n        let {x, y} = this.proxy.mouse\n\n        const mx = x - rect.left\n        const my = y - rect.top\n\n        for (const name in this.coords) {\n            const item = this.coords[name]\n            const drawPointFn = item.drawPointFn\n            const opt = item.opt\n            // const graph = item.graph\n\n            for (const [px, py, _x, _y] of item.coords) {\n                const accuracy = +(o.accuracy || opt.radius)\n                const lx = px - accuracy, rx = px + accuracy\n                const ly = py - accuracy, ry = py + accuracy\n\n                if ((mx > lx && mx < rx) && (o.hoverMode !== VALUE_DEFAULT)) {\n                    drawPointFn(ctx, [px, py, opt.radius], {color: opt.color, fill: opt.fill})\n                }\n\n                if ((mx > lx && mx < rx) && (my > ly && my < ry)) {\n                    if (o.hoverMode === VALUE_DEFAULT) drawPointFn(ctx, [px, py, opt.radius * 2], {color: opt.color, fill: opt.fill})\n                    if ( o.tooltip ) {\n                        this.showTooltip([_x, _y], item.graph)\n                        tooltip = true\n                    }\n                    break\n                }\n            }\n\n            if (!tooltip && this.tooltip) {\n                this.tooltip.remove()\n                this.tooltip = null\n            }\n        }\n    }\n\n    add(index, [x, y], shift, align){\n        this.addPoint(index, [x, y], shift)\n\n        this.minX = this.data[index][0][0]\n        this.maxX = x\n\n        if (align) {\n            if (isObject(align)) {\n                this.align(align)\n            }\n        } else {\n            if (y < this.minY) this.minY = y\n            if (y > this.maxY) this.maxY = y\n        }\n\n        this.resize()\n    }\n\n    align({minX, maxX, minY, maxY}){\n        let a = []\n\n        for (let _data of this.data) {\n            if (!Array.isArray(_data)) continue\n\n            for( const [x, y] of _data) {\n                a.push([x, y])\n            }\n        }\n\n        const [_minX, _maxX] = minMax(a, 'x')\n        const [_minY, _maxY] = minMax(a, 'y')\n\n        if (minX) this.minX = _minX\n        if (minY) this.minY = _minY\n        if (maxX) this.maxX = _maxX\n        if (maxY) this.maxY = _maxY\n    }\n\n    draw(){\n        super.draw()\n        this.calcRatio()\n        this.axisXY()\n        this.arrows()\n        this.lines()\n        this.floatPoint()\n        this.cross()\n        this.legend()\n    }\n}\n\nObject.assign(LineChart.prototype, MixinCross)\nObject.assign(LineChart.prototype, MixinAxis)\nObject.assign(LineChart.prototype, MixinAddPoint)\nObject.assign(LineChart.prototype, MixinArrows)\n\nexport const lineChart = (el, data, options) => new LineChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultCross} from \"./elements/cross\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultLineChartOptions = {\n    hoverMode: 'default', // default, advanced\n    axis: defaultAxis,\n    cross: defaultCross,\n    showDots: true,\n    type: 'line', // line, curve\n    accuracy: 2,\n    lines: [],\n    arrows: defaultArrows\n}","export const drawCurve = (ctx, coords = [], {color = '#000', size = 1, dash = [], tension = 0.25} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n\n    ctx.moveTo(coords[0][0], coords[0][1])\n    for(let i = 0; i < coords.length-1; i ++) {\n        let x_mid = (coords[i][0] + coords[i + 1][0]) / 2;\n        let y_mid = (coords[i][1] + coords[i + 1][1]) / 2;\n        let cp_x1 = (x_mid + coords[i][0]) / 2;\n        //let cp_y1 = (y_mid + coords[i][1]) / 2;\n        let cp_x2 = (x_mid + coords[i + 1][0]) / 2;\n        //let cp_y2 = (y_mid + coords[i + 1][1]) / 2;\n\n        ctx.quadraticCurveTo(cp_x1, coords[i][1], x_mid, y_mid);\n        ctx.quadraticCurveTo(cp_x2, coords[i + 1][1], coords[i + 1][0], coords[i + 1][1]);\n    }\n\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","import {isObject} from \"./is-object\"\n\nexport const mergeProps = (...args) => {\n    let result = {}\n\n    args.forEach( v => {\n        if (v && isObject(v)) Object.assign(result, v)\n    })\n\n    return result\n}","import {Chart} from \"../base\"\nimport {defaultPieChartOptions} from \"../../defaults/pie\"\nimport {merge} from \"../../helpers/merge\"\nimport {drawSector} from \"../../draw/sector\";\nimport {drawText} from \"../../draw/text\";\nimport {getTextBoxWidth} from \"../../helpers/get-textbox-width\";\n\nexport class PieChart extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultPieChartOptions, options), 'pie')\n        this.total = this.data.reduce( (acc, curr) => acc + curr, 0)\n\n        this.legendItems = []\n\n        const legend = this.options.legend\n        if (legend && legend.titles && legend.titles.length) {\n            for(let i = 0; i < legend.titles.length; i++) {\n                this.legendItems.push([legend.titles[i], this.options.colors[i], this.data[i]])\n            }\n        }\n\n        this.resize()\n    }\n\n    sectors(){\n        const ctx = this.ctx, o = this.options\n        let [x, y] = this.center\n        const radius = this.radius\n\n        let startAngle = 0, endAngle = 360, offset = 0, val = '', textVal = ''\n        let textX, textY\n\n        if (!this.data || ! this.data.length) return\n\n        for (let i = 0; i < this.data.length; i++) {\n            let val = this.data[i]\n            let color = o.colors[i]\n            endAngle = 2 * Math.PI * val / this.total\n            drawSector(ctx, [x, y, radius, startAngle, startAngle + endAngle], {fill: color, color: color})\n            startAngle += endAngle\n        }\n\n        startAngle = 0\n        for (let i = 0; i < this.data.length; i++) {\n            let val = this.data[i], percent\n            let name = (this.legendItems[i] && this.legendItems[i][0]) ?? \"\"\n\n            endAngle = 2 * Math.PI * val / this.total\n            offset = 0\n            percent = Math.round(val * 100 / this.total)\n            textVal = o.showValue ? val : percent+\"%\"\n\n            if (typeof o.onDrawValue === 'function') {\n                textVal = o.onDrawValue.apply(null, [name, val, percent])\n            }\n\n            textX = x + (radius / 2 + offset) * Math.cos(startAngle + endAngle / 2)\n            textY = y + (radius / 2 + offset) * Math.sin(startAngle + endAngle / 2)\n\n            let textW = getTextBoxWidth(ctx, [val+\"%\"], {font: o.labels.font})\n            drawText(ctx, textVal, [textX - textW/2, textY+o.labels.font.size/2], {color: o.labels.color, font: o.labels.font})\n\n            startAngle += endAngle\n        }\n    }\n\n    draw(){\n        super.draw()\n        this.sectors()\n        this.legend()\n    }\n\n    resize(){\n        super.resize()\n        this.center = [this.dpiWidth / 2, this.dpiHeight / 2]\n    }\n}\n\nexport const pieChart = (el, data, options) => new PieChart(el, data, options)","import {labelFont} from \"./elements/font\";\n\nexport const defaultPieChartOptions = {\n    other: {\n        color: '#eaeaea'\n    },\n    labels: {\n        font: labelFont,\n        color: '#fff'\n    },\n    showValue: false,\n    padding: 0,\n\n    onDrawValue: null\n}","export const drawSector = (ctx, [x, y, radius = 4, startAngle, endAngle], {color = '#000', fill = '#fff', size = 1} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash([])\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = fill\n\n    ctx.arc(x, y, radius , startAngle, endAngle)\n    ctx.lineTo(x, y)\n\n    ctx.fill()\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}","import {merge} from \"../../helpers/merge\"\nimport {defaultStackedBarChartOptions} from \"../../defaults/stacked-bar\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {minMaxLinear} from \"../../helpers/min-max\"\nimport {Chart} from \"../base\"\nimport {expandPadding} from \"../../helpers/expand-padding\";\nimport {drawRect} from \"../../draw/rect\";\nimport {drawText} from \"../../draw/text\";\nimport {MixinArrows} from \"../../mixins/arrows\";\n\nexport class StackedBarChart extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultStackedBarChartOptions, options), 'stacked-bar');\n\n        this.barWidth = 0\n        this.maxY = 0\n        this.maxX = 0\n        this.minY = 0\n        this.minX = 0\n        this.viewAxis = this.options.dataAxisX ? this.viewHeight : this.viewWidth\n        this.ratioX = 0\n        this.ratioY = 0\n\n        this.legendItems = []\n        const legend = this.options.legend\n        if (legend && legend.titles && legend.titles.length) {\n            for(let i = 0; i < legend.titles.length; i++) {\n                this.legendItems.push([legend.titles[i], this.options.colors[i]])\n            }\n        }\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        for (let k in this.data) {\n            let data = this.data[k].data\n            a.push( data.reduce( (a, b) => a + b, 0) )\n        }\n\n        const [, max] = minMaxLinear(a)\n\n        this.maxX = this.maxY = o.boundaries && !isNaN(o.boundaries.max) ? o.boundaries.maxY : max\n\n        if (isNaN(this.maxX)) this.maxX = 100\n        if (isNaN(this.maxY)) this.maxX = 100\n    }\n\n    calcRatio(){\n        this.ratio = this.ratioY = this.ratioX = (this.options.dataAxisX ? this.viewWidth : this.viewHeight) / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    calcBarWidth(){\n        const o = this.options\n        let bars = this.data.length\n\n        let availableSpace =\n            (o.dataAxisX ? this.viewHeight : this.viewWidth)\n            - ((this.data.length + 1) * o.groupDistance) // space between groups\n\n        this.barWidth = availableSpace / bars\n    }\n\n    barsX(){\n        const o = this.options\n        const padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        let px, py\n        const rect = this.canvas.getBoundingClientRect()\n        let mx, my\n        let tooltip = false\n\n        if (!this.data || !this.data.length) return\n\n        if (this.proxy.mouse) {\n            mx = this.proxy.mouse.x - rect.left\n            my = this.proxy.mouse.y - rect.top\n        }\n\n        px = padding.left\n        py = padding.top + o.groupDistance\n\n        let colors = Array.isArray(o.colors) ? o.colors : o.colors.split(\",\").map( c => c.trim() )\n\n        for (const graph of this.data) {\n            let data = graph.data\n            let name = graph.name\n            let labelColor = colors.length > 1 ? o.color : colors[0] // ???\n\n            let sigma = 0\n            for (let i = 0; i < data.length; i++) {\n                let delta = data[i] * this.ratio\n                let color = colors[i]\n                let fill = colors[i]\n                let valueTitle = o.values[i]\n\n                drawRect(ctx, [px + sigma, py, delta, this.barWidth], {color, fill})\n\n                if ((mx > px + sigma && mx < px + delta + sigma) && (my > py && my < py + this.barWidth )) {\n\n                    drawRect(ctx, [px + sigma, py, delta, this.barWidth-1], {color: 'rgba(255,255,255,.3)', fill: 'rgba(255,255,255,.3)'})\n\n                    if ( o.tooltip ) {\n                        this.showTooltip([valueTitle, data[i]], graph)\n                        tooltip = true\n                    }\n\n                }\n\n                sigma += delta\n            }\n\n            py += o.groupDistance + this.barWidth\n\n            if (typeof o.onDrawLabel === 'function') {\n                name = o.onDrawLabel.apply(null, name)\n            }\n\n            drawText(ctx, name, [0, 0], {\n                align: 'center', color: labelColor, stroke: labelColor, font: o.font,\n                translate: [px - 20, py - this.barWidth / 2],\n                angle: 90\n            })\n\n        }\n\n        if (!tooltip && this.tooltip) {\n            this.tooltip.remove()\n            this.tooltip = null\n        }\n    }\n\n    barsY(){\n        const o = this.options\n        const padding = expandPadding(o.padding)\n        const ctx = this.ctx\n        let px, py\n        const rect = this.canvas.getBoundingClientRect()\n        let mx, my\n        let tooltip = false\n\n        if (!this.data || !this.data.length) return\n\n        if (this.proxy.mouse) {\n            mx = this.proxy.mouse.x - rect.left\n            my = this.proxy.mouse.y - rect.top\n        }\n\n        px = padding.left + o.groupDistance\n        py = this.viewHeight + padding.top\n\n        let colors = Array.isArray(o.colors) ? o.colors : o.colors.split(\",\").map( c => c.trim() )\n\n        for (const graph of this.data) {\n            let data = graph.data\n            let name = graph.name\n            let labelColor = colors.length > 1 ? o.color : colors[0]\n\n            let sigma = 0\n            for (let i = 0; i < data.length; i++) {\n                let delta = data[i] * this.ratio\n                let color = colors[i]\n                let fill = colors[i]\n                let valueTitle = o.values[i]\n\n                drawRect(ctx, [px, py - delta - sigma, this.barWidth, delta], {color, fill})\n\n                if ((mx > px && mx < px + this.barWidth - 1) && (my > py - delta - sigma && my < py - sigma )) {\n\n                    drawRect(ctx, [px, py - delta - sigma, this.barWidth, delta], {color: 'rgba(255,255,255,.3)', fill: 'rgba(255,255,255,.3)'})\n\n                    if ( o.tooltip ) {\n                        this.showTooltip([valueTitle, data[i]], graph)\n                        tooltip = true\n                    }\n\n                }\n\n                sigma += delta\n            }\n\n            px += o.groupDistance + this.barWidth\n\n            if (typeof o.onDrawLabel === 'function') {\n                name = o.onDrawLabel.apply(null, name)\n            }\n\n            drawText(ctx, name, [0, 0], {\n                align: 'center', color: labelColor, stroke: labelColor, font: o.font,\n                translate: [px - o.groupDistance - this.barWidth / 2, py + 20],\n                angle: 0\n            })\n\n        }\n\n        if (!tooltip && this.tooltip) {\n            this.tooltip.remove()\n            this.tooltip = null\n        }\n    }\n\n    draw(){\n        const o = this.options\n\n        super.draw()\n        this.calcBarWidth()\n        this.calcRatio()\n\n        if (o.dataAxisX) {\n            this.axisX()\n            this.barsX()\n        } else {\n            this.axisY()\n            this.barsY()\n        }\n\n        this.arrows()\n        this.legend()\n    }\n}\n\nObject.assign(StackedBarChart.prototype, MixinAxis)\nObject.assign(StackedBarChart.prototype, MixinArrows)\n\nexport const stackedBarChart = (el, data, options) => new StackedBarChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultStackedBarChartOptions = {\n    groupDistance: 0,\n    axis: defaultAxis,\n    dataAxisX: false,\n    arrows: defaultArrows,\n    onDrawLabel: null,\n}","import {Chart} from \"../base\";\nimport {merge} from \"../../helpers/merge\";\nimport {defaultGaugeOptions} from \"../../defaults/gauge\";\nimport {expandPadding} from \"../../helpers/expand-padding\";\nimport {drawText} from \"../../draw/text\";\nimport {drawArc} from \"../../draw/arc\";\nimport {getFillColor} from \"../../helpers/get-fill-colors\";\n\nexport class Gauge extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultGaugeOptions, options), 'gauge')\n\n        this.min = this.options.boundaries.min\n        this.max = this.options.boundaries.max\n\n        this.resize()\n    }\n\n    gauge(){\n        const ctx = this.ctx, o = this.options, padding = expandPadding(o.padding)\n        let [x, y] = this.center\n\n        x += padding.left\n        y += padding.top\n\n        const PI = Math.PI, min = PI * o.startFactor, max = PI * (2 + o.endFactor)\n        const r = o.radius * this.radius / 100 - o.backWidth\n        let v = this.data[0], p = Math.round(Math.abs(100 * (v - this.min) / (this.max - this.min)))\n        const val = min+(max-min)*p/100\n        let textVal = p\n        let colors = []\n\n        if (typeof o.onDrawValue === 'function') {\n            textVal = o.onDrawValue.apply(null, [v, p])\n        }\n\n        drawArc(ctx, [x, y, r, min, max], {size: o.backWidth, stroke: o.backStyle})\n\n        if (typeof o.fillStyle === \"string\") {\n            colors.push([100, o.fillStyle])\n        } else if (Array.isArray(o.fillStyle)) {\n            for (let c of o.fillStyle) {\n                colors.push(c)\n            }\n        }\n        drawArc(ctx, [x, y, r, min, val], {size: o.valueWidth, stroke: getFillColor(p, colors)})\n\n        drawText(ctx, textVal,[0, 0], {\n            align: \"center\",\n            baseLine: \"middle\",\n            color: o.value.color,\n            stroke: o.value.color,\n            font: o.value.font || o.font,\n            translate: [x + o.value.shift.x, y + o.value.shift.y],\n            angle: o.value.angle\n        })\n\n        if (o.label.min) {\n            drawText(ctx, o.boundaries.min, [0, 0], {\n                align: \"left\",\n                baseLine: \"middle\",\n                color: o.label.min.color,\n                stroke: o.label.min.color,\n                font: o.label.min.font || o.font,\n                translate: [x + r * Math.cos(min) + o.backWidth + o.label.min.shift.x, y + r * Math.sin(min) + o.label.min.shift.y],\n                angle: 0\n            })\n        }\n\n        if (o.label.max) {\n            drawText(ctx, o.boundaries.max, [0, 0], {\n                align: \"right\",\n                baseLine: \"middle\",\n                color: o.label.max.color,\n                stroke: o.label.max.color,\n                font: o.label.max.font || o.font,\n                translate: [x + r * Math.cos(max) - o.backWidth + o.label.max.shift.x, y + r * Math.sin(max) + o.label.max.shift.y],\n                angle: 0\n            })\n        }\n    }\n\n    draw(){\n        super.draw()\n        this.gauge()\n    }\n\n    update(val, {\n        min = null,\n        max = null\n    } = {}){\n        this.data[0] = val\n        if (min !== null) this.min = min\n        if (max !== null) this.max = max\n        this.resize()\n    }\n}\n\nexport const gauge = (el, data, options) => new Gauge(el, data, options)","import {defaultFont} from \"./elements/font\";\n\nconst gaugeLabel = {\n    font: defaultFont,\n    fixed: false,\n    color: \"#000\",\n    angle: 0,\n    shift: {\n        x: 0,\n        y: 0\n    }\n}\n\nexport const defaultGaugeOptions = {\n    backStyle: \"#a7a7a7\",\n    fillStyle: \"#8f8\",\n    startFactor: 0.85,\n    endFactor: 0.15,\n    backWidth: 32,\n    valueWidth: 32,\n    radius: 100,\n    boundaries: {\n        min: 0,\n        max: 100,\n    },\n    value: gaugeLabel,\n    label: {\n        min: gaugeLabel,\n        max: gaugeLabel,\n    },\n    padding: {\n        left: 0,\n        right: 0\n    }\n}","export const drawArc = (ctx, [x, y, radius, startAngle, endAngle], {stroke = '#000', fill = '#fff', size = 1, dash = []} = {}) => {\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash(dash)\n    ctx.lineWidth = size\n    ctx.strokeStyle = stroke\n    ctx.fillStyle = fill\n\n    ctx.arc(x, y, radius , startAngle, endAngle)\n\n    ctx.stroke()\n    ctx.restore()\n    ctx.closePath()\n}\n","export const getFillColor = (p, colors) => {\n    let res = '#fff', min = 0\n\n    for (let i = 0; i < colors.length; i++) {\n        let c = colors[i][0]\n\n        if (p>= min && p <= c) {\n            res = colors[i][1]\n            min = colors[i][0]\n        }\n    }\n\n    return res\n}\n","import {Chart} from \"../base\";\nimport {merge} from \"../../helpers/merge\";\nimport {defaultDonutOptions} from \"../../defaults/donut\";\nimport {drawText} from \"../../draw/text\";\nimport {drawArc} from \"../../draw/arc\";\n\nexport class Donut extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultDonutOptions, options), 'donut')\n\n        this.total = this.data.reduce( (acc, curr) => acc + curr, 0)\n        this.min = this.options.boundaries.min\n        this.max = this.options.boundaries.max\n\n        this.legendItems = []\n\n        const legend = this.options.legend\n        if (legend && legend.titles && legend.titles.length) {\n            for(let i = 0; i < legend.titles.length; i++) {\n                this.legendItems.push([legend.titles[i], this.options.colors[i], this.data[i]])\n            }\n        }\n\n        this.resize()\n    }\n\n    gauge(){\n        const ctx = this.ctx, o = this.options\n        let [x, y] = this.center\n\n        const PI = Math.PI, min = 0, max = 360\n        const radius = this.radius - o.backWidth / 2\n\n        drawArc(ctx, [x, y, radius, 0, 2*PI], {size: o.backWidth, stroke: o.backStyle})\n\n        let startAngle = 0, endAngle = 0\n        for(let i = 0; i < this.data.length; i++) {\n            const color = o.colors[i]\n            let val = this.data[i]\n\n            endAngle = 2 * Math.PI * val / this.total\n            drawArc(ctx, [x, y, radius, startAngle, startAngle + endAngle], {size: o.valueWidth, stroke: color})\n\n            if (o.label) {\n                let name = (this.legendItems[i] && this.legendItems[i][0]) ?? \"\"\n                const percent = Math.round(val * 100 / this.total)\n                let textVal = o.showValue ? val : percent+\"%\"\n                let textX, textY\n\n                if (typeof o.onDrawValue === 'function') {\n                    textVal = o.onDrawValue.apply(null, [name, val, percent])\n                }\n\n                textX = x + (radius) * Math.cos(startAngle + endAngle / 2)\n                textY = y + (radius) * Math.sin(startAngle + endAngle / 2)\n\n                drawText(ctx, textVal, [textX, textY], {color: o.label.color, font: o.label.font})\n            }\n\n            startAngle += endAngle\n        }\n    }\n\n    draw(){\n        super.draw()\n        this.gauge()\n        this.legend()\n    }\n\n    resize(){\n        super.resize()\n        this.center = [this.dpiWidth / 2, this.dpiHeight / 2]\n    }\n}\n\nexport const donut = (el, data, options) => new Donut(el, data, options)","import {defaultFont} from \"./elements/font\";\n\nconst donutLabel = {\n    font: defaultFont,\n    fixed: false,\n    color: \"#000\",\n    angle: 0,\n    shift: {\n        x: 0,\n        y: 0\n    }\n}\n\nexport const defaultDonutOptions = {\n    backStyle: \"#a7a7a7\",\n    fillStyle: \"#8f8\",\n    backWidth: 100,\n    valueWidth: 100,\n    radius: 100,\n    boundaries: {\n        min: 0,\n        max: 100,\n    },\n    label: donutLabel,\n    padding: 0\n}","import {Chart} from \"../base\"\nimport {merge} from \"../../helpers/merge\"\nimport {defaultSegmentOptions} from \"../../defaults/segment\"\nimport {drawRoundedRect} from \"../../draw/rounded-rect\"\nimport {expandPadding} from \"../../helpers/expand-padding\";\nimport {getFillColor} from \"../../helpers/get-fill-colors\";\n\nexport class Segment extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultSegmentOptions, options), 'segment')\n\n        this.min = 0\n        this.max = 100\n\n        if (this.options.segment.height !== \"auto\") {\n            const o = this.options\n            const s = o.segment\n            const rowDistance = s.rowDistance * o.dpi\n\n            this.options.height = this.data.length * (rowDistance + 1 + s.height)\n        }\n\n        this.resize()\n    }\n\n    segments(){\n        const ctx = this.ctx, o = this.options, s = o.segment\n        const count = s.count ? s.count : 20\n        const distance = s.distance * o.dpi\n        const rowDistance = s.rowDistance * o.dpi\n        const width = this.viewWidth / count - (distance)\n        const colors = []\n        const padding = expandPadding(o.padding)\n        let x, y = padding.top + distance\n        let height\n\n        if (s.height === 'auto') {\n            height = (o.height - rowDistance * (this.data.length)) / this.data.length\n        } else {\n            height = s.height\n        }\n\n        if (typeof o.colors === \"string\") {\n            colors.push([100, o.colors])\n        } else if (Array.isArray(o.colors)) {\n            for (let c of o.colors) {\n                colors.push(c)\n            }\n        }\n\n        for(let k = 0; k < this.data.length; k++) {\n            const value = this.data[k]\n            const limit = (count * value / 100)\n\n            x = padding.left + 1\n\n            for (let i = 0; i < count; i++) {\n                const color = getFillColor(i * 100 / count, colors)\n                if (i <= limit) {\n                    drawRoundedRect(ctx, [x, y, width, height], {\n                        color,\n                        fill: color,\n                        radius: s.radius\n                    })\n                } else {\n                    if (o.ghost) {\n                        drawRoundedRect(ctx, [x, y, width, height], {\n                            color: o.ghost.color,\n                            fill: o.ghost.color,\n                            radius: s.radius\n                        })\n                    }\n                }\n\n                x += width + distance\n            }\n\n            y += height + rowDistance\n        }\n    }\n\n    setData(data, index = 0, redraw = true){\n        this.data[index] = data\n        if (redraw) this.resize()\n    }\n\n    draw(){\n        super.draw()\n        this.segments()\n    }\n}\n\nexport const segment = (el, data, options) => new Segment(el, data, options)","export const defaultSegmentOptions = {\n    segment: {\n        count: 100,\n        distance: 4,\n        rowDistance: 4,\n        height: \"auto\",\n        radius: 0,\n    },\n    ghost: {\n        color: \"#f1f1f1\"\n    },\n    colors: [\n        [70, '#60a917'],\n        [90, '#f0a30a'],\n        [100, '#a20025']\n    ],\n    padding: 0,\n    margin: 0\n}","export const drawRoundedRect = (ctx, [x, y, width, height], {color = '#000', fill = '#fff', size = 1, dash = [], radius = 4} = {}) => {\n    if (typeof radius === 'number') {\n        radius = {tl: radius, tr: radius, br: radius, bl: radius};\n    } else {\n        const defaultRadius = {tl: 0, tr: 0, br: 0, bl: 0};\n        for (let side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = fill\n    ctx.strokeStyle = color\n    ctx.moveTo(x + radius.tl, y)\n    ctx.lineTo(x + width - radius.tr, y)\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr)\n    ctx.lineTo(x + width, y + height - radius.br)\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height)\n    ctx.lineTo(x + radius.bl, y + height)\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl)\n    ctx.lineTo(x, y + radius.tl)\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y)\n    ctx.fill()\n    ctx.stroke()\n    ctx.closePath()\n}","import {Chart} from \"../base\"\nimport {merge} from \"../../helpers/merge\"\nimport {defaultCandlestickOptions} from \"../../defaults/сandlestick\"\nimport {minMax} from \"../../helpers/min-max\"\nimport {MixinAxis} from \"../../mixins/axis\"\nimport {drawCandle} from \"../../draw/candle\"\nimport {expandPadding} from \"../../helpers/expand-padding\";\nimport {drawVector} from \"../../draw/vector\";\nimport {drawText} from \"../../draw/text\";\nimport {drawRect} from \"../../draw/rect\";\nimport {MixinTooltip} from \"../../mixins/tooltip\";\nimport {MixinArrows} from \"../../mixins/arrows\";\n\nexport class CandlestickChart extends Chart {\n    constructor(el, data, options) {\n        super(el, data, merge({}, defaultCandlestickOptions, options), 'candlesticks')\n\n        this.minY = 0\n        this.maxY = 0\n        this.labels = []\n        this.coords = []\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    calcMinMax(){\n        const o = this.options\n        let a = []\n\n        this.labels.length = 0\n\n        for (let k in this.data) {\n            const [x, hi, low] = this.data[k]\n            a.push([0, hi])\n            a.push([0, low])\n            this.labels.push(x)\n        }\n\n        const [minY, maxY] = minMax(a, 'y')\n\n        this.minY = o.boundaries && !isNaN(o.boundaries.minY) ? o.boundaries.minY : minY\n        this.maxY = o.boundaries && !isNaN(o.boundaries.maxY) ? o.boundaries.maxY : maxY\n    }\n\n    calcRatio(){\n        this.ratioY = this.viewHeight / (this.maxY === this.minY ? this.maxY : this.maxY - this.minY)\n    }\n\n    getCandleSize(){\n        const candle = this.options.candle\n        const dataLength = this.data.length\n\n        return candle.width === 'auto'\n            ? (this.viewWidth - (candle.distance * 2) - (candle.distance * (dataLength - 1))) / dataLength\n            : candle.width\n    }\n\n    candlesticks(){\n        // data [x, hi, low, open, close]\n        const ctx = this.ctx, o = this.options, candle = o.candle, ghost = o.ghost\n        const padding = expandPadding(o.padding)\n        const dataLength = this.data.length\n        const rect = this.canvas.getBoundingClientRect()\n        let candleSize = this.getCandleSize()\n        let mx, my, px, py, tooltip = false\n\n        if (this.proxy.mouse) {\n            mx = this.proxy.mouse.x - rect.left\n            my = this.proxy.mouse.y - rect.top\n        }\n\n        let x = padding.left + candleSize / 2 + candle.distance\n        this.coords.length = 0\n\n        for(let i = 0; i < dataLength; i++) {\n            let y, y2, o1, c1, [xv, hi, low, open, close] = this.data[i]\n            const whiteCandle = close > open\n            let candleColor = whiteCandle ? candle.white : candle.black\n            let bx1 = x - candleSize / 2 - candle.distance / 2, bx2 = x + candleSize / 2 + candle.distance / 2\n\n            y = padding.top + this.viewHeight - (hi - this.minY) * this.ratioY\n            y2 = padding.top + this.viewHeight - (low - this.minY) * this.ratioY\n            o1 = padding.top + this.viewHeight - (open - this.minY) * this.ratioY\n            c1 = padding.top + this.viewHeight - (close - this.minY) * this.ratioY\n\n            if (mx >= bx1 && mx <= bx2) {\n                drawRect(\n                    ctx,\n                    [bx1, padding.top, candleSize + candle.distance, this.viewHeight],\n                    {\n                        color: ghost.stroke,\n                        fill: ghost.fill\n                    }\n                )\n            }\n\n            drawCandle(ctx, [x, y, y2 - y, o1, candleSize, c1 - o1], {color: candleColor, size: candle.size, leg: candle.leg})\n\n            if ((mx >= bx1 && mx <= bx2) && (my >= y && my <= y2)) {\n                if (o.tooltip) {\n                    this.showTooltip(this.data[i], {\n                        type: whiteCandle\n                    })\n                    tooltip = true\n                }\n            }\n\n            this.coords.push(x)\n\n            x += candleSize + candle.distance\n        }\n\n        if (!tooltip && this.tooltip) {\n            this.tooltip.remove()\n            this.tooltip = null\n        }\n    }\n\n    axis(){\n        // draw default axis Y\n        this.axisY()\n\n        // draw axis X\n        const ctx = this.ctx, o = this.options, candle = o.candle\n        const padding = expandPadding(o.padding)\n\n        const axis = o.axis.x, label = axis.label, line = axis.line, arrow = axis.arrow\n        const font = (label && label.font) ?? o.font\n        let shortLineSize = line.shortLineSize ?? 0\n        const candleSize = this.getCandleSize()\n        let x = padding.left + candleSize / 2 + candle.distance, y = padding.top + this.viewHeight\n        let k = 0\n\n        for (let i = 0; i < this.labels.length; i++) {\n            let value = this.labels[i]\n            let labelValue = value\n\n            if (typeof o.onDrawLabelX === \"function\") {\n                labelValue = o.onDrawLabelX.apply(null, [value])\n            }\n\n            if (i !== 0 && label.skip && k !== label.skip) {\n                k++\n            } else {\n                k = 1\n                // short line\n                drawVector(\n                    ctx,\n                    [x, y - shortLineSize, x, y + shortLineSize],\n                    {\n                        color: (arrow && arrow.color) ? arrow.color : line.color,\n                    }\n                )\n\n                // label\n                drawText(\n                    ctx,\n                    labelValue.toString(),\n                    [0, 0],\n                    {\n                        color: label.color ?? o.color,\n                        align: label.align,\n                        font,\n                        translate: [x + (label.shift.x ?? 0), y + font.size + 5 + (label.shift.y ?? 0)],\n                        angle: label.angle\n                    }\n                )\n            }\n\n            x += candleSize + candle.distance\n        }\n    }\n\n    add([x, hi, low, open, close], shift = false){\n        const o = this.options\n        let data\n\n        if (!this.data) {\n            this.data = []\n        }\n\n        data = this.data\n\n        if (shift && data.length) {\n            if (!o.graphSize) {\n                data = data.slice(1)\n            } else {\n                if (data.length >= o.graphSize) {\n                    data = data.slice(1)\n                }\n            }\n        }\n\n        this.data = data\n        this.data.push([x, hi, low, open, close])\n\n        this.calcMinMax()\n        this.resize()\n    }\n\n    draw(){\n        super.draw()\n        this.calcRatio()\n        this.axis()\n        this.arrows()\n        this.candlesticks()\n    }\n}\n\nObject.assign(CandlestickChart.prototype, MixinAxis)\nObject.assign(CandlestickChart.prototype, MixinTooltip)\nObject.assign(CandlestickChart.prototype, MixinArrows)\n\nexport const candlestickChart = (el, data, options) => new CandlestickChart(el, data, options)","import {defaultAxis} from \"./elements/axis\";\nimport {defaultArrows} from \"./elements/arrow\";\n\nexport const defaultCandlestickOptions = {\n    axis: defaultAxis,\n    boundaries: {\n        minY: 0,\n    },\n    candle: {\n        size: 1,\n        width: 'auto',\n        white: 'green',\n        black: 'red',\n        distance: 4,\n        cutoff: false\n    },\n    ghost: {\n        stroke: \"#e3e3e3\",\n        fill: \"#e3e3e3\"\n    },\n    arrows: defaultArrows\n}","export const drawCandle = (ctx, [x, y, h, by, bw, bh], {color = 'red', size = 1, leg = false} = {}) => {\n\n    ctx.beginPath()\n    ctx.save()\n    ctx.setLineDash([])\n    ctx.lineWidth = size\n    ctx.strokeStyle = color\n    ctx.fillStyle = color\n\n    ctx.moveTo(x, y)\n    ctx.lineTo(x, y + h)\n\n    if (leg) {\n        ctx.moveTo(x - bw / 2, y)\n        ctx.lineTo(x + bw / 2, y)\n\n        ctx.moveTo(x - bw / 2, y + h)\n        ctx.lineTo(x + bw / 2, y + h)\n    }\n\n    ctx.rect(x - bw / 2, by, bw, bh)\n\n    ctx.stroke()\n    ctx.fill()\n    ctx.restore()\n    ctx.closePath()\n}","export const lpad = v => v.toString().length < 2 ? '0' + v : v\n\nexport const rand = (min, max) => Math.floor(min + Math.random() * (max + 1 - min))\n\nexport const genData = (count, min, max) => {\n    let y = 0, x = 0, a = []\n\n    for(let i = 0; i < count; i++) {\n        y = rand(min, max)\n        a.push([x, y])\n        x+=10\n    }\n\n    return a\n}\n\nexport const genTriplet = (count, min, max) => {\n    let y = 0, x = 0, a = [], d = 10\n\n    for(let i = 0; i < count; i++) {\n        y = rand(min, max)\n        x += d\n        a.push([x - d, x, y])\n    }\n\n    return a\n}\n\nexport const getOne = () => rand(-1, 1) > 0 ? 1 : -1\n"],"names":["lineChart","genData","defaultColors","data1","lines1","name","size","dots","type","lines","height","accuracy","colors","lime","blue","violet","orange","boundaries","minY","maxY","fill","title","text","align","font","lineHeight","axis","x","line","count","label","fixed","y","padding","bottom","legend","margin","top","data2","lines2","showLine","background","color","vertical","position","right","left","border","dash","drawType","Chart","areaChart","AreaChart","barChart","BarChart","bubbleChart","BubbleChart","histogramChart","HistogramChart","LineChart","pieChart","PieChart","stackedBarChart","StackedBarChart","gauge","Gauge","donut","Donut","segment","Segment","candlestickChart","CandlestickChart","defaultOptions","merge","drawText","MixinLegend","MixinTooltip","expandPadding","constructor","el","data","options","document","querySelector","HTMLElement","Error","canvas","ctx","raf","tooltip","legendItems","chartType","rect","getBoundingClientRect","canvasRect","static","that","proxy","Proxy","set","args","result","Reflect","requestAnimationFrame","draw","bind","style","width","lineType","calcInternalValues","createCanvas","addEvents","createElement","innerHTML","overflow","appendChild","getContext","setCanvasSize","o","dpi","elWidth","elHeight","toString","includes","parseInt","dpiHeight","dpiWidth","viewHeight","viewWidth","center","radius","Math","min","magic","stroke","setBackground","bg","fillStyle","fillRect","clear","clearRect","setData","index","redraw","resize","setBoundaries","obj","grantedKeys","k","mouseMove","e","onHover","clientX","clientY","changedTouches","touches","apply","mouse","cancelable","preventDefault","mouseLeave","fn","onLeave","addEventListener","passive","window","destroy","cancelAnimationFrame","removeEventListener","Object","assign","prototype","defaultBorder","defaultFont","defaultTitle","defaultLegend","defaultTooltip","defaultPadding","defaultMargin","values","animate","onDrawLabelY","onDrawLabelX","onTooltipShow","family","weight","labelFont","titleFont","display","rtl","shadow","shiftX","shiftY","blur","stretch","aliceBlue","antiqueWhite","aqua","aquamarine","azure","beige","bisque","black","blanchedAlmond","blueViolet","brown","burlyWood","cadetBlue","chartreuse","chocolate","coral","cornflowerBlue","cornsilk","crimson","cyan","darkBlue","darkCyan","darkEasyITCenterRod","darkGray","darkGreen","darkKhaki","darkMagenta","darkOliveGreen","darkOrange","darkOrchid","darkRed","darkSalmon","darkSeaGreen","darkSlateBlue","darkSlateGray","darkTurquoise","darkViolet","deepPink","deepSkyBlue","dimGray","dodgerBlue","fireBrick","floralWhite","forestGreen","fuchsia","gainsboro","ghostWhite","gold","EasyITCenterRod","gray","green","greenYellow","honeyDew","hotPink","indianRed","indigo","ivory","khaki","lavender","lavenderBlush","lawnGreen","lemonChiffon","lightBlue","lightCoral","lightCyan","lightEasyITCenterRodYellow","lightGray","lightGreen","lightPink","lightSalmon","lightSeaGreen","lightSkyBlue","lightSlateGray","lightSteelBlue","lightYellow","limeGreen","linen","magenta","maroon","mediumAquaMarine","mediumBlue","mediumOrchid","mediumPurple","mediumSeaGreen","mediumSlateBlue","mediumSpringGreen","mediumTurquoise","mediumVioletRed","midnightBlue","mintCream","mistyRose","moccasin","navajoWhite","navy","oldLace","olive","oliveDrab","orangeRed","orchid","paleEasyITCenterRod","paleGreen","paleTurquoise","paleVioletRed","papayaWhip","peachPuff","peru","pink","plum","powderBlue","purple","rebeccaPurple","red","rosyBrown","royalBlue","saddleBrown","salmon","sandyBrown","seaGreen","seaShell","sienna","silver","slyBlue","slateBlue","slateGray","snow","springGreen","steelBlue","tan","teal","thistle","tomato","turquoise","wheat","white","whiteSmoke","yellow","yellowGreen","isObject","target","sources","length","source","shift","key","item","Array","isArray","baseLine","angle","translate","tX","tY","save","beginPath","textAlign","strokeStyle","rotate","PI","textBaseline","split","map","str","i","fillText","closePath","restore","getTextBoxWidth","drawSquare","drawBox","expandMargin","legendVertical","legendHorizontal","items","legendPadding","legendMargin","lh","box","offset","_","value","showValue","nameWidth","textBoxWidth","textBoxHeight","borderColor","w","measureText","r","setLineDash","lineWidth","h","strokeRect","showTooltip","graph","remove","onShow","borderRadius","boxShadow","clientHeight","clientWidth","defaultAreaChartOptions","minMax","drawCircle","drawTriangle","drawDiamond","drawArea","MixinCross","MixinAxis","MixinAddPoint","drawLine","MixinArrows","coords","minX","maxX","areas","push","calcMinMax","a","_data","isNaN","calcRatio","ratioX","ratioY","area","_x","floor","_y","opt","drawPointFn","showDots","pop","showLines","floatPoint","mx","my","px","py","lx","rx","ly","ry","hoverMode","add","addPoint","_minX","_maxX","_minY","_maxY","axisXY","arrows","cross","defaultAxis","defaultCross","defaultArrows","shortLineSize","opposite","skip","showLabel","showMin","step","defaultArrow","factorX","factorY","outside","by","max","v","toLowerCase","minMaxLinear","arc","moveTo","lineTo","drawVector","ceil","axisX","arrow","lFactor","lMax","labelStep","labelValue","labelY","toFixed","axisY","labelX","shortLineX","x1","y1","x2","y2","round","b","point","graphSize","slice","drawArrowX","drawArrowY","arrowX","arrowY","defaultBarChartOptions","drawRect","drawRectAnimate","groups","barWidth","viewAxis","dataAxisX","titles","concat","ratio","calcBarWidth","bars","availableSpace","groupDistance","barDistance","g","labelColor","labels","groupWidth","delta","borderX","borderY","onDrawLabel","duration","ease","progress","easeFn","start","performance","now","timing","time","timeFraction","linear","t","defaultBubbleChartOptions","minZ","maxZ","ratioZ","bubbles","z","_z","defaultHistogramOptions","minX1","maxX1","minX2","maxX2","bar","_w","_h","defaultLineChartOptions","drawCurve","mergeProps","DEFAULT_LINE_TYPE","DEFAULT_DOT_TYPE","DOT_TRIANGLE","DOT_SQUARE","DOT_DIAMOND","VALUE_DEFAULT","tension","x_mid","y_mid","cp_x1","cp_x2","quadraticCurveTo","forEach","defaultPieChartOptions","drawSector","total","reduce","acc","curr","sectors","startAngle","endAngle","val","textVal","textX","textY","percent","onDrawValue","cos","sin","textW","other","defaultStackedBarChartOptions","barsX","c","trim","sigma","valueTitle","barsY","defaultGaugeOptions","drawArc","getFillColor","startFactor","endFactor","backWidth","p","abs","backStyle","valueWidth","update","gaugeLabel","res","defaultDonutOptions","donutLabel","defaultSegmentOptions","drawRoundedRect","s","rowDistance","segments","distance","limit","ghost","tl","tr","br","bl","defaultRadius","side","defaultCandlestickOptions","drawCandle","hi","low","getCandleSize","candle","dataLength","candlesticks","candleSize","o1","c1","xv","open","close","whiteCandle","candleColor","bx1","bx2","leg","cutoff","bw","bh","lpad","rand","random","genTriplet","d","getOne"],"version":3,"file":"index.59ba1819.js.map","sourceRoot":"/__parcel_source_root/"}