import{r as s,h as t}from"./p-d44d1ddb.js";import{S as e}from"./p-52f280e6.js";import{T as o}from"./p-89475ce8.js";import{g as r}from"./p-f6b5a2eb.js";import"./p-83f217d4.js";import"./p-d8f8621c.js";import"./p-e47f7c7d.js";import"./p-f90ae5bc.js";import"./p-a3b5bd35.js";import"./p-80de33dc.js";import"./p-d17a08e5.js";import"./p-4bdcf3f8.js";const a=class{constructor(e){s(this,e)}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||e.Literal]||void 0,this.items=await r(this.serverUrl,this.propertyDescriptor)}onChange(t){this.propertyModel.expressions[this.propertyDescriptor.defaultSyntax||e.Literal]=this.currentValue=t.target.value}onDefaultSyntaxValueChanged(e){this.currentValue=e.detail}render(){const e=this.propertyDescriptor,r=this.propertyModel,s=e.name,o=s,a=s;let p=this.currentValue;const i=this.items;if(null==p){const e=this.propertyDescriptor.defaultValue;p=e?e.toString():void 0}return t("elsa-property-editor",{propertyDescriptor:e,propertyModel:r,onDefaultSyntaxValueChanged:e=>this.onDefaultSyntaxValueChanged(e),"single-line":!0},t("select",{id:o,name:a,onChange:e=>this.onChange(e),class:"elsa-mt-1 elsa-block focus:elsa-ring-blue-500 focus:elsa-border-blue-500 elsa-w-full elsa-shadow-sm sm:elsa-max-w-xs sm:elsa-text-sm elsa-border-gray-300 elsa-rounded-md"},i.map((e=>{const r="object"==typeof e,s=r?e.value:e.toString(),o=r?e.text:e.toString();return t("option",{value:s,selected:s===p},o)}))))}};o.injectProps(a,["serverUrl"]);export{a as elsa_dropdown_property};