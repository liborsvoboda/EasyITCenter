@using Microsoft.AspNetCore.Identity
@using ERS.Models

@inject             SignInManager<ERS.Models.ApplicationUser> SignInManager
@inject             UserManager<ERS.Models.ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var userName = (!string.IsNullOrEmpty(user.ContactName)) ? user.ContactName : user.UserName;
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            @if (await UserManager.IsInRoleAsync(user, Constants.Roles.Admin))
            {
                <li>
                    <a asp-area="" asp-controller="Team" asp-action="Index" title="Manage">Users</a>
                </li>
            }
            @if (!await UserManager.IsInRoleAsync(user, Constants.Roles.Guest))
            {
                <li>
                    <a asp-area="" asp-controller="Manage" asp-action="Index" title="Manage">Hello, @userName</a>
                </li>
            }
            <li>
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Log out</button>
            </li>
        </ul>
    </form>
}
else
{
    var users = (List<ERS.Models.ApplicationUser>)await UserManager.GetUsersInRoleAsync("admin");
    if (users.Count > 0)
    {
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-area="" asp-controller="Account" asp-action="Login">Log in</a></li>
        </ul>
    }
}
